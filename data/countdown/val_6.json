[
    {
        "nums": [
            18,
            15,
            43,
            1,
            95,
            42
        ],
        "target": 91,
        "solution": [
            "18*15=270",
            "43-1=42",
            "95+42=137",
            "270-42=228",
            "228-137=91"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 91:[18, 15, 43, 1, 95, 42], Operations: []\nExploring Operation: 18*15=270, Resulting Numbers: [43, 1, 95, 42, 270]\nGenerated Node #2: [43, 1, 95, 42, 270] from Operation: 18*15=270\nCurrent State: 91:[43, 1, 95, 42, 270], Operations: ['18*15=270']\nExploring Operation: 43-1=42, Resulting Numbers: [95, 42, 270, 42]\nGenerated Node #3: [95, 42, 270, 42] from Operation: 43-1=42\nCurrent State: 91:[95, 42, 270, 42], Operations: ['18*15=270', '43-1=42']\nExploring Operation: 95+42=137, Resulting Numbers: [270, 137]\nGenerated Node #4: [270, 137] from Operation: 95+42=137\nCurrent State: 91:[270, 137], Operations: ['18*15=270', '43-1=42', '95+42=137']\nExploring Operation: 270-42=228, Resulting Numbers: [137, 228]\nGenerated Node #5: [137, 228] from Operation: 270-42=228\nCurrent State: 91:[137, 228], Operations: ['18*15=270', '43-1=42', '95+42=137', '270-42=228']\nExploring Operation: 228-137=91, Resulting Numbers: [91]\n91,91 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            96,
            28,
            33,
            9,
            90,
            21
        ],
        "target": 71,
        "solution": [
            "96-28=68",
            "90/9=10",
            "21-10=11",
            "33/11=3",
            "68+3=71"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 71:[96, 28, 33, 9, 90, 21], Operations: []\nExploring Operation: 96-28=68, Resulting Numbers: [33, 9, 90, 21, 68]\nGenerated Node #2: [33, 9, 90, 21, 68] from Operation: 96-28=68\nCurrent State: 71:[33, 9, 90, 21, 68], Operations: ['96-28=68']\nExploring Operation: 90/9=10, Resulting Numbers: [33, 21, 68, 10]\nGenerated Node #3: [33, 21, 68, 10] from Operation: 90/9=10\nCurrent State: 71:[33, 21, 68, 10], Operations: ['96-28=68', '90/9=10']\nExploring Operation: 21-10=11, Resulting Numbers: [33, 68, 11]\nGenerated Node #4: [33, 68, 11] from Operation: 21-10=11\nCurrent State: 71:[33, 68, 11], Operations: ['96-28=68', '90/9=10', '21-10=11']\nExploring Operation: 33/11=3, Resulting Numbers: [68, 3]\nGenerated Node #5: [68, 3] from Operation: 33/11=3\nCurrent State: 71:[68, 3], Operations: ['96-28=68', '90/9=10', '21-10=11', '33/11=3']\nExploring Operation: 68+3=71, Resulting Numbers: [71]\n71,71 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            16,
            95,
            73,
            46,
            30,
            87
        ],
        "target": 24,
        "solution": [
            "95-16=79",
            "73-46=27",
            "30-27=3",
            "87-79=8",
            "3*8=24"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 24:[16, 95, 73, 46, 30, 87], Operations: []\nExploring Operation: 95-16=79, Resulting Numbers: [73, 46, 30, 87, 79]\nGenerated Node #2: [73, 46, 30, 87, 79] from Operation: 95-16=79\nCurrent State: 24:[73, 46, 30, 87, 79], Operations: ['95-16=79']\nExploring Operation: 73-46=27, Resulting Numbers: [30, 87, 79, 27]\nGenerated Node #3: [30, 87, 79, 27] from Operation: 73-46=27\nCurrent State: 24:[30, 87, 79, 27], Operations: ['95-16=79', '73-46=27']\nExploring Operation: 30-27=3, Resulting Numbers: [87, 79, 3]\nGenerated Node #4: [87, 79, 3] from Operation: 30-27=3\nCurrent State: 24:[87, 79, 3], Operations: ['95-16=79', '73-46=27', '30-27=3']\nExploring Operation: 87-79=8, Resulting Numbers: [3, 8]\nGenerated Node #5: [3, 8] from Operation: 87-79=8\nCurrent State: 24:[3, 8], Operations: ['95-16=79', '73-46=27', '30-27=3', '87-79=8']\nExploring Operation: 3*8=24, Resulting Numbers: [24]\n24,24 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            1,
            12,
            44,
            97,
            44,
            58
        ],
        "target": 47,
        "solution": [
            "12-1=11",
            "44+97=141",
            "58-44=14",
            "14-11=3",
            "141/3=47"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 47:[1, 12, 44, 97, 44, 58], Operations: []\nExploring Operation: 12-1=11, Resulting Numbers: [44, 97, 44, 58, 11]\nGenerated Node #2: [44, 97, 44, 58, 11] from Operation: 12-1=11\nCurrent State: 47:[44, 97, 44, 58, 11], Operations: ['12-1=11']\nExploring Operation: 44+97=141, Resulting Numbers: [58, 11, 141]\nGenerated Node #3: [58, 11, 141] from Operation: 44+97=141\nCurrent State: 47:[58, 11, 141], Operations: ['12-1=11', '44+97=141']\nExploring Operation: 58-44=14, Resulting Numbers: [11, 141, 14]\nGenerated Node #4: [11, 141, 14] from Operation: 58-44=14\nCurrent State: 47:[11, 141, 14], Operations: ['12-1=11', '44+97=141', '58-44=14']\nExploring Operation: 14-11=3, Resulting Numbers: [141, 3]\nGenerated Node #5: [141, 3] from Operation: 14-11=3\nCurrent State: 47:[141, 3], Operations: ['12-1=11', '44+97=141', '58-44=14', '14-11=3']\nExploring Operation: 141/3=47, Resulting Numbers: [47]\n47,47 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            49,
            66,
            47,
            82,
            16,
            18
        ],
        "target": 100,
        "solution": [
            "49+66=115",
            "47*82=3854",
            "16+3854=3870",
            "3870/18=215",
            "215-115=100"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 100:[49, 66, 47, 82, 16, 18], Operations: []\nExploring Operation: 49+66=115, Resulting Numbers: [47, 82, 16, 18, 115]\nGenerated Node #2: [47, 82, 16, 18, 115] from Operation: 49+66=115\nCurrent State: 100:[47, 82, 16, 18, 115], Operations: ['49+66=115']\nExploring Operation: 47*82=3854, Resulting Numbers: [16, 18, 115, 3854]\nGenerated Node #3: [16, 18, 115, 3854] from Operation: 47*82=3854\nCurrent State: 100:[16, 18, 115, 3854], Operations: ['49+66=115', '47*82=3854']\nExploring Operation: 16+3854=3870, Resulting Numbers: [18, 115, 3870]\nGenerated Node #4: [18, 115, 3870] from Operation: 16+3854=3870\nCurrent State: 100:[18, 115, 3870], Operations: ['49+66=115', '47*82=3854', '16+3854=3870']\nExploring Operation: 3870/18=215, Resulting Numbers: [115, 215]\nGenerated Node #5: [115, 215] from Operation: 3870/18=215\nCurrent State: 100:[115, 215], Operations: ['49+66=115', '47*82=3854', '16+3854=3870', '3870/18=215']\nExploring Operation: 215-115=100, Resulting Numbers: [100]\n100,100 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            68,
            46,
            26,
            32,
            20,
            29
        ],
        "target": 59,
        "solution": [
            "68+46=114",
            "32-26=6",
            "20+29=49",
            "114-6=108",
            "108-49=59"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 59:[68, 46, 26, 32, 20, 29], Operations: []\nExploring Operation: 68+46=114, Resulting Numbers: [26, 32, 20, 29, 114]\nGenerated Node #2: [26, 32, 20, 29, 114] from Operation: 68+46=114\nCurrent State: 59:[26, 32, 20, 29, 114], Operations: ['68+46=114']\nExploring Operation: 32-26=6, Resulting Numbers: [20, 29, 114, 6]\nGenerated Node #3: [20, 29, 114, 6] from Operation: 32-26=6\nCurrent State: 59:[20, 29, 114, 6], Operations: ['68+46=114', '32-26=6']\nExploring Operation: 20+29=49, Resulting Numbers: [114, 6, 49]\nGenerated Node #4: [114, 6, 49] from Operation: 20+29=49\nCurrent State: 59:[114, 6, 49], Operations: ['68+46=114', '32-26=6', '20+29=49']\nExploring Operation: 114-6=108, Resulting Numbers: [49, 108]\nGenerated Node #5: [49, 108] from Operation: 114-6=108\nCurrent State: 59:[49, 108], Operations: ['68+46=114', '32-26=6', '20+29=49', '114-6=108']\nExploring Operation: 108-49=59, Resulting Numbers: [59]\n59,59 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            52,
            23,
            68,
            58,
            90,
            35
        ],
        "target": 25,
        "solution": [
            "52-23=29",
            "68-58=10",
            "35-29=6",
            "90/6=15",
            "10+15=25"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 25:[52, 23, 68, 58, 90, 35], Operations: []\nExploring Operation: 52-23=29, Resulting Numbers: [68, 58, 90, 35, 29]\nGenerated Node #2: [68, 58, 90, 35, 29] from Operation: 52-23=29\nCurrent State: 25:[68, 58, 90, 35, 29], Operations: ['52-23=29']\nExploring Operation: 68-58=10, Resulting Numbers: [90, 35, 29, 10]\nGenerated Node #3: [90, 35, 29, 10] from Operation: 68-58=10\nCurrent State: 25:[90, 35, 29, 10], Operations: ['52-23=29', '68-58=10']\nExploring Operation: 35-29=6, Resulting Numbers: [90, 10, 6]\nGenerated Node #4: [90, 10, 6] from Operation: 35-29=6\nCurrent State: 25:[90, 10, 6], Operations: ['52-23=29', '68-58=10', '35-29=6']\nExploring Operation: 90/6=15, Resulting Numbers: [10, 15]\nGenerated Node #5: [10, 15] from Operation: 90/6=15\nCurrent State: 25:[10, 15], Operations: ['52-23=29', '68-58=10', '35-29=6', '90/6=15']\nExploring Operation: 10+15=25, Resulting Numbers: [25]\n25,25 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            95,
            93,
            86,
            92,
            39,
            86
        ],
        "target": 100,
        "solution": [
            "95-93=2",
            "92-86=6",
            "86-39=47",
            "2*47=94",
            "6+94=100"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 100:[95, 93, 86, 92, 39, 86], Operations: []\nExploring Operation: 95-93=2, Resulting Numbers: [86, 92, 39, 86, 2]\nGenerated Node #2: [86, 92, 39, 86, 2] from Operation: 95-93=2\nCurrent State: 100:[86, 92, 39, 86, 2], Operations: ['95-93=2']\nExploring Operation: 92-86=6, Resulting Numbers: [39, 2, 6]\nGenerated Node #3: [39, 2, 6] from Operation: 92-86=6\nCurrent State: 100:[39, 2, 6], Operations: ['95-93=2', '92-86=6']\nExploring Operation: 86-39=47, Resulting Numbers: [2, 6, 47]\nGenerated Node #4: [2, 6, 47] from Operation: 86-39=47\nCurrent State: 100:[2, 6, 47], Operations: ['95-93=2', '92-86=6', '86-39=47']\nExploring Operation: 2*47=94, Resulting Numbers: [6, 94]\nGenerated Node #5: [6, 94] from Operation: 2*47=94\nCurrent State: 100:[6, 94], Operations: ['95-93=2', '92-86=6', '86-39=47', '2*47=94']\nExploring Operation: 6+94=100, Resulting Numbers: [100]\n100,100 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            8,
            57,
            39,
            19,
            96,
            64
        ],
        "target": 48,
        "solution": [
            "8+57=65",
            "39+64=103",
            "19*96=1824",
            "103-65=38",
            "1824/38=48"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 48:[8, 57, 39, 19, 96, 64], Operations: []\nExploring Operation: 8+57=65, Resulting Numbers: [39, 19, 96, 64, 65]\nGenerated Node #2: [39, 19, 96, 64, 65] from Operation: 8+57=65\nCurrent State: 48:[39, 19, 96, 64, 65], Operations: ['8+57=65']\nExploring Operation: 39+64=103, Resulting Numbers: [19, 96, 65, 103]\nGenerated Node #3: [19, 96, 65, 103] from Operation: 39+64=103\nCurrent State: 48:[19, 96, 65, 103], Operations: ['8+57=65', '39+64=103']\nExploring Operation: 19*96=1824, Resulting Numbers: [65, 103, 1824]\nGenerated Node #4: [65, 103, 1824] from Operation: 19*96=1824\nCurrent State: 48:[65, 103, 1824], Operations: ['8+57=65', '39+64=103', '19*96=1824']\nExploring Operation: 103-65=38, Resulting Numbers: [1824, 38]\nGenerated Node #5: [1824, 38] from Operation: 103-65=38\nCurrent State: 48:[1824, 38], Operations: ['8+57=65', '39+64=103', '19*96=1824', '103-65=38']\nExploring Operation: 1824/38=48, Resulting Numbers: [48]\n48,48 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            66,
            22,
            4,
            83,
            22,
            67
        ],
        "target": 69,
        "solution": [
            "66+22=88",
            "88-83=5",
            "4*5=20",
            "22+67=89",
            "89-20=69"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 69:[66, 22, 4, 83, 22, 67], Operations: []\nExploring Operation: 66+22=88, Resulting Numbers: [4, 83, 67, 88]\nGenerated Node #2: [4, 83, 67, 88] from Operation: 66+22=88\nCurrent State: 69:[4, 83, 67, 88], Operations: ['66+22=88']\nExploring Operation: 88-83=5, Resulting Numbers: [4, 67, 5]\nGenerated Node #3: [4, 67, 5] from Operation: 88-83=5\nCurrent State: 69:[4, 67, 5], Operations: ['66+22=88', '88-83=5']\nExploring Operation: 4*5=20, Resulting Numbers: [67, 20]\nGenerated Node #4: [67, 20] from Operation: 4*5=20\nCurrent State: 69:[67, 20], Operations: ['66+22=88', '88-83=5', '4*5=20']\nExploring Operation: 22+67=89, Resulting Numbers: [20, 89]\nGenerated Node #5: [20, 89] from Operation: 22+67=89\nCurrent State: 69:[20, 89], Operations: ['66+22=88', '88-83=5', '4*5=20', '22+67=89']\nExploring Operation: 89-20=69, Resulting Numbers: [69]\n69,69 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            12,
            6,
            49,
            61,
            77,
            27
        ],
        "target": 48,
        "solution": [
            "12-6=6",
            "61-49=12",
            "77-27=50",
            "12/6=2",
            "50-2=48"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 48:[12, 6, 49, 61, 77, 27], Operations: []\nExploring Operation: 12-6=6, Resulting Numbers: [49, 61, 77, 27, 6]\nGenerated Node #2: [49, 61, 77, 27, 6] from Operation: 12-6=6\nCurrent State: 48:[49, 61, 77, 27, 6], Operations: ['12-6=6']\nExploring Operation: 61-49=12, Resulting Numbers: [77, 27, 6, 12]\nGenerated Node #3: [77, 27, 6, 12] from Operation: 61-49=12\nCurrent State: 48:[77, 27, 6, 12], Operations: ['12-6=6', '61-49=12']\nExploring Operation: 77-27=50, Resulting Numbers: [6, 12, 50]\nGenerated Node #4: [6, 12, 50] from Operation: 77-27=50\nCurrent State: 48:[6, 12, 50], Operations: ['12-6=6', '61-49=12', '77-27=50']\nExploring Operation: 12/6=2, Resulting Numbers: [50, 2]\nGenerated Node #5: [50, 2] from Operation: 12/6=2\nCurrent State: 48:[50, 2], Operations: ['12-6=6', '61-49=12', '77-27=50', '12/6=2']\nExploring Operation: 50-2=48, Resulting Numbers: [48]\n48,48 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            17,
            75,
            88,
            22,
            96,
            32
        ],
        "target": 28,
        "solution": [
            "75-17=58",
            "22+58=80",
            "32*80=2560",
            "2560-96=2464",
            "2464/88=28"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 28:[17, 75, 88, 22, 96, 32], Operations: []\nExploring Operation: 75-17=58, Resulting Numbers: [88, 22, 96, 32, 58]\nGenerated Node #2: [88, 22, 96, 32, 58] from Operation: 75-17=58\nCurrent State: 28:[88, 22, 96, 32, 58], Operations: ['75-17=58']\nExploring Operation: 22+58=80, Resulting Numbers: [88, 96, 32, 80]\nGenerated Node #3: [88, 96, 32, 80] from Operation: 22+58=80\nCurrent State: 28:[88, 96, 32, 80], Operations: ['75-17=58', '22+58=80']\nExploring Operation: 32*80=2560, Resulting Numbers: [88, 96, 2560]\nGenerated Node #4: [88, 96, 2560] from Operation: 32*80=2560\nCurrent State: 28:[88, 96, 2560], Operations: ['75-17=58', '22+58=80', '32*80=2560']\nExploring Operation: 2560-96=2464, Resulting Numbers: [88, 2464]\nGenerated Node #5: [88, 2464] from Operation: 2560-96=2464\nCurrent State: 28:[88, 2464], Operations: ['75-17=58', '22+58=80', '32*80=2560', '2560-96=2464']\nExploring Operation: 2464/88=28, Resulting Numbers: [28]\n28,28 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            91,
            33,
            34,
            67,
            59,
            20
        ],
        "target": 63,
        "solution": [
            "91-67=24",
            "34-33=1",
            "59-20=39",
            "24*1=24",
            "39+24=63"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 63:[91, 33, 34, 67, 59, 20], Operations: []\nExploring Operation: 91-67=24, Resulting Numbers: [33, 34, 59, 20, 24]\nGenerated Node #2: [33, 34, 59, 20, 24] from Operation: 91-67=24\nCurrent State: 63:[33, 34, 59, 20, 24], Operations: ['91-67=24']\nExploring Operation: 34-33=1, Resulting Numbers: [59, 20, 24, 1]\nGenerated Node #3: [59, 20, 24, 1] from Operation: 34-33=1\nCurrent State: 63:[59, 20, 24, 1], Operations: ['91-67=24', '34-33=1']\nExploring Operation: 59-20=39, Resulting Numbers: [24, 1, 39]\nGenerated Node #4: [24, 1, 39] from Operation: 59-20=39\nCurrent State: 63:[24, 1, 39], Operations: ['91-67=24', '34-33=1', '59-20=39']\nExploring Operation: 24*1=24, Resulting Numbers: [39, 24]\nGenerated Node #5: [39, 24] from Operation: 24*1=24\nCurrent State: 63:[39, 24], Operations: ['91-67=24', '34-33=1', '59-20=39', '24*1=24']\nExploring Operation: 39+24=63, Resulting Numbers: [63]\n63,63 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            47,
            9,
            33,
            83,
            73,
            27
        ],
        "target": 80,
        "solution": [
            "47*83=3901",
            "9+27=36",
            "3901-73=3828",
            "3828/33=116",
            "116-36=80"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 80:[47, 9, 33, 83, 73, 27], Operations: []\nExploring Operation: 47*83=3901, Resulting Numbers: [9, 33, 73, 27, 3901]\nGenerated Node #2: [9, 33, 73, 27, 3901] from Operation: 47*83=3901\nCurrent State: 80:[9, 33, 73, 27, 3901], Operations: ['47*83=3901']\nExploring Operation: 9+27=36, Resulting Numbers: [33, 73, 3901, 36]\nGenerated Node #3: [33, 73, 3901, 36] from Operation: 9+27=36\nCurrent State: 80:[33, 73, 3901, 36], Operations: ['47*83=3901', '9+27=36']\nExploring Operation: 3901-73=3828, Resulting Numbers: [33, 36, 3828]\nGenerated Node #4: [33, 36, 3828] from Operation: 3901-73=3828\nCurrent State: 80:[33, 36, 3828], Operations: ['47*83=3901', '9+27=36', '3901-73=3828']\nExploring Operation: 3828/33=116, Resulting Numbers: [36, 116]\nGenerated Node #5: [36, 116] from Operation: 3828/33=116\nCurrent State: 80:[36, 116], Operations: ['47*83=3901', '9+27=36', '3901-73=3828', '3828/33=116']\nExploring Operation: 116-36=80, Resulting Numbers: [80]\n80,80 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            11,
            78,
            94,
            64,
            97,
            2
        ],
        "target": 51,
        "solution": [
            "11+78=89",
            "94-64=30",
            "97+30=127",
            "2*89=178",
            "178-127=51"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 51:[11, 78, 94, 64, 97, 2], Operations: []\nExploring Operation: 11+78=89, Resulting Numbers: [94, 64, 97, 2, 89]\nGenerated Node #2: [94, 64, 97, 2, 89] from Operation: 11+78=89\nCurrent State: 51:[94, 64, 97, 2, 89], Operations: ['11+78=89']\nExploring Operation: 94-64=30, Resulting Numbers: [97, 2, 89, 30]\nGenerated Node #3: [97, 2, 89, 30] from Operation: 94-64=30\nCurrent State: 51:[97, 2, 89, 30], Operations: ['11+78=89', '94-64=30']\nExploring Operation: 97+30=127, Resulting Numbers: [2, 89, 127]\nGenerated Node #4: [2, 89, 127] from Operation: 97+30=127\nCurrent State: 51:[2, 89, 127], Operations: ['11+78=89', '94-64=30', '97+30=127']\nExploring Operation: 2*89=178, Resulting Numbers: [127, 178]\nGenerated Node #5: [127, 178] from Operation: 2*89=178\nCurrent State: 51:[127, 178], Operations: ['11+78=89', '94-64=30', '97+30=127', '2*89=178']\nExploring Operation: 178-127=51, Resulting Numbers: [51]\n51,51 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            11,
            74,
            75,
            13,
            28,
            96
        ],
        "target": 14,
        "solution": [
            "11+74=85",
            "75+28=103",
            "13+85=98",
            "103-96=7",
            "98/7=14"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 14:[11, 74, 75, 13, 28, 96], Operations: []\nExploring Operation: 11+74=85, Resulting Numbers: [75, 13, 28, 96, 85]\nGenerated Node #2: [75, 13, 28, 96, 85] from Operation: 11+74=85\nCurrent State: 14:[75, 13, 28, 96, 85], Operations: ['11+74=85']\nExploring Operation: 75+28=103, Resulting Numbers: [13, 96, 85, 103]\nGenerated Node #3: [13, 96, 85, 103] from Operation: 75+28=103\nCurrent State: 14:[13, 96, 85, 103], Operations: ['11+74=85', '75+28=103']\nExploring Operation: 13+85=98, Resulting Numbers: [96, 103, 98]\nGenerated Node #4: [96, 103, 98] from Operation: 13+85=98\nCurrent State: 14:[96, 103, 98], Operations: ['11+74=85', '75+28=103', '13+85=98']\nExploring Operation: 103-96=7, Resulting Numbers: [98, 7]\nGenerated Node #5: [98, 7] from Operation: 103-96=7\nCurrent State: 14:[98, 7], Operations: ['11+74=85', '75+28=103', '13+85=98', '103-96=7']\nExploring Operation: 98/7=14, Resulting Numbers: [14]\n14,14 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            31,
            22,
            93,
            43,
            55,
            18
        ],
        "target": 28,
        "solution": [
            "31+93=124",
            "22-18=4",
            "55-43=12",
            "124-12=112",
            "112/4=28"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 28:[31, 22, 93, 43, 55, 18], Operations: []\nExploring Operation: 31+93=124, Resulting Numbers: [22, 43, 55, 18, 124]\nGenerated Node #2: [22, 43, 55, 18, 124] from Operation: 31+93=124\nCurrent State: 28:[22, 43, 55, 18, 124], Operations: ['31+93=124']\nExploring Operation: 22-18=4, Resulting Numbers: [43, 55, 124, 4]\nGenerated Node #3: [43, 55, 124, 4] from Operation: 22-18=4\nCurrent State: 28:[43, 55, 124, 4], Operations: ['31+93=124', '22-18=4']\nExploring Operation: 55-43=12, Resulting Numbers: [124, 4, 12]\nGenerated Node #4: [124, 4, 12] from Operation: 55-43=12\nCurrent State: 28:[124, 4, 12], Operations: ['31+93=124', '22-18=4', '55-43=12']\nExploring Operation: 124-12=112, Resulting Numbers: [4, 112]\nGenerated Node #5: [4, 112] from Operation: 124-12=112\nCurrent State: 28:[4, 112], Operations: ['31+93=124', '22-18=4', '55-43=12', '124-12=112']\nExploring Operation: 112/4=28, Resulting Numbers: [28]\n28,28 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            99,
            78,
            76,
            78,
            7,
            57
        ],
        "target": 33,
        "solution": [
            "99-78=21",
            "78-76=2",
            "7*21=147",
            "57*2=114",
            "147-114=33"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 33:[99, 78, 76, 78, 7, 57], Operations: []\nExploring Operation: 99-78=21, Resulting Numbers: [76, 7, 57, 21]\nGenerated Node #2: [76, 7, 57, 21] from Operation: 99-78=21\nCurrent State: 33:[76, 7, 57, 21], Operations: ['99-78=21']\nExploring Operation: 78-76=2, Resulting Numbers: [7, 57, 21, 2]\nGenerated Node #3: [7, 57, 21, 2] from Operation: 78-76=2\nCurrent State: 33:[7, 57, 21, 2], Operations: ['99-78=21', '78-76=2']\nExploring Operation: 7*21=147, Resulting Numbers: [57, 2, 147]\nGenerated Node #4: [57, 2, 147] from Operation: 7*21=147\nCurrent State: 33:[57, 2, 147], Operations: ['99-78=21', '78-76=2', '7*21=147']\nExploring Operation: 57*2=114, Resulting Numbers: [147, 114]\nGenerated Node #5: [147, 114] from Operation: 57*2=114\nCurrent State: 33:[147, 114], Operations: ['99-78=21', '78-76=2', '7*21=147', '57*2=114']\nExploring Operation: 147-114=33, Resulting Numbers: [33]\n33,33 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            63,
            92,
            89,
            14,
            61,
            72
        ],
        "target": 27,
        "solution": [
            "89-63=26",
            "72-61=11",
            "26*11=286",
            "92+286=378",
            "378/14=27"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 27:[63, 92, 89, 14, 61, 72], Operations: []\nExploring Operation: 89-63=26, Resulting Numbers: [92, 14, 61, 72, 26]\nGenerated Node #2: [92, 14, 61, 72, 26] from Operation: 89-63=26\nCurrent State: 27:[92, 14, 61, 72, 26], Operations: ['89-63=26']\nExploring Operation: 72-61=11, Resulting Numbers: [92, 14, 26, 11]\nGenerated Node #3: [92, 14, 26, 11] from Operation: 72-61=11\nCurrent State: 27:[92, 14, 26, 11], Operations: ['89-63=26', '72-61=11']\nExploring Operation: 26*11=286, Resulting Numbers: [92, 14, 286]\nGenerated Node #4: [92, 14, 286] from Operation: 26*11=286\nCurrent State: 27:[92, 14, 286], Operations: ['89-63=26', '72-61=11', '26*11=286']\nExploring Operation: 92+286=378, Resulting Numbers: [14, 378]\nGenerated Node #5: [14, 378] from Operation: 92+286=378\nCurrent State: 27:[14, 378], Operations: ['89-63=26', '72-61=11', '26*11=286', '92+286=378']\nExploring Operation: 378/14=27, Resulting Numbers: [27]\n27,27 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            28,
            39,
            15,
            99,
            81,
            39
        ],
        "target": 18,
        "solution": [
            "28+39=67",
            "99-39=60",
            "60/15=4",
            "81-67=14",
            "4+14=18"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 18:[28, 39, 15, 99, 81, 39], Operations: []\nExploring Operation: 28+39=67, Resulting Numbers: [15, 99, 81, 67]\nGenerated Node #2: [15, 99, 81, 67] from Operation: 28+39=67\nCurrent State: 18:[15, 99, 81, 67], Operations: ['28+39=67']\nExploring Operation: 99-39=60, Resulting Numbers: [15, 81, 67, 60]\nGenerated Node #3: [15, 81, 67, 60] from Operation: 99-39=60\nCurrent State: 18:[15, 81, 67, 60], Operations: ['28+39=67', '99-39=60']\nExploring Operation: 60/15=4, Resulting Numbers: [81, 67, 4]\nGenerated Node #4: [81, 67, 4] from Operation: 60/15=4\nCurrent State: 18:[81, 67, 4], Operations: ['28+39=67', '99-39=60', '60/15=4']\nExploring Operation: 81-67=14, Resulting Numbers: [4, 14]\nGenerated Node #5: [4, 14] from Operation: 81-67=14\nCurrent State: 18:[4, 14], Operations: ['28+39=67', '99-39=60', '60/15=4', '81-67=14']\nExploring Operation: 4+14=18, Resulting Numbers: [18]\n18,18 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            79,
            16,
            64,
            48,
            79,
            80
        ],
        "target": 81,
        "solution": [
            "79+16=95",
            "64-48=16",
            "95-79=16",
            "16/16=1",
            "80+1=81"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 81:[79, 16, 64, 48, 79, 80], Operations: []\nExploring Operation: 79+16=95, Resulting Numbers: [64, 48, 80, 95]\nGenerated Node #2: [64, 48, 80, 95] from Operation: 79+16=95\nCurrent State: 81:[64, 48, 80, 95], Operations: ['79+16=95']\nExploring Operation: 64-48=16, Resulting Numbers: [80, 95, 16]\nGenerated Node #3: [80, 95, 16] from Operation: 64-48=16\nCurrent State: 81:[80, 95, 16], Operations: ['79+16=95', '64-48=16']\nExploring Operation: 95-79=16, Resulting Numbers: [80, 16, 16]\nGenerated Node #4: [80, 16, 16] from Operation: 95-79=16\nCurrent State: 81:[80, 16, 16], Operations: ['79+16=95', '64-48=16', '95-79=16']\nExploring Operation: 16/16=1, Resulting Numbers: [80, 1]\nGenerated Node #5: [80, 1] from Operation: 16/16=1\nCurrent State: 81:[80, 1], Operations: ['79+16=95', '64-48=16', '95-79=16', '16/16=1']\nExploring Operation: 80+1=81, Resulting Numbers: [81]\n81,81 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            71,
            46,
            23,
            19,
            16,
            37
        ],
        "target": 75,
        "solution": [
            "71+46=117",
            "37-23=14",
            "19-16=3",
            "14*3=42",
            "117-42=75"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 75:[71, 46, 23, 19, 16, 37], Operations: []\nExploring Operation: 71+46=117, Resulting Numbers: [23, 19, 16, 37, 117]\nGenerated Node #2: [23, 19, 16, 37, 117] from Operation: 71+46=117\nCurrent State: 75:[23, 19, 16, 37, 117], Operations: ['71+46=117']\nExploring Operation: 37-23=14, Resulting Numbers: [19, 16, 117, 14]\nGenerated Node #3: [19, 16, 117, 14] from Operation: 37-23=14\nCurrent State: 75:[19, 16, 117, 14], Operations: ['71+46=117', '37-23=14']\nExploring Operation: 19-16=3, Resulting Numbers: [117, 14, 3]\nGenerated Node #4: [117, 14, 3] from Operation: 19-16=3\nCurrent State: 75:[117, 14, 3], Operations: ['71+46=117', '37-23=14', '19-16=3']\nExploring Operation: 14*3=42, Resulting Numbers: [117, 42]\nGenerated Node #5: [117, 42] from Operation: 14*3=42\nCurrent State: 75:[117, 42], Operations: ['71+46=117', '37-23=14', '19-16=3', '14*3=42']\nExploring Operation: 117-42=75, Resulting Numbers: [75]\n75,75 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            93,
            77,
            39,
            61,
            71,
            48
        ],
        "target": 87,
        "solution": [
            "93-77=16",
            "39+61=100",
            "100-71=29",
            "48/16=3",
            "29*3=87"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 87:[93, 77, 39, 61, 71, 48], Operations: []\nExploring Operation: 93-77=16, Resulting Numbers: [39, 61, 71, 48, 16]\nGenerated Node #2: [39, 61, 71, 48, 16] from Operation: 93-77=16\nCurrent State: 87:[39, 61, 71, 48, 16], Operations: ['93-77=16']\nExploring Operation: 39+61=100, Resulting Numbers: [71, 48, 16, 100]\nGenerated Node #3: [71, 48, 16, 100] from Operation: 39+61=100\nCurrent State: 87:[71, 48, 16, 100], Operations: ['93-77=16', '39+61=100']\nExploring Operation: 100-71=29, Resulting Numbers: [48, 16, 29]\nGenerated Node #4: [48, 16, 29] from Operation: 100-71=29\nCurrent State: 87:[48, 16, 29], Operations: ['93-77=16', '39+61=100', '100-71=29']\nExploring Operation: 48/16=3, Resulting Numbers: [29, 3]\nGenerated Node #5: [29, 3] from Operation: 48/16=3\nCurrent State: 87:[29, 3], Operations: ['93-77=16', '39+61=100', '100-71=29', '48/16=3']\nExploring Operation: 29*3=87, Resulting Numbers: [87]\n87,87 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            15,
            91,
            29,
            48,
            22,
            43
        ],
        "target": 24,
        "solution": [
            "15+91=106",
            "29*106=3074",
            "22+3074=3096",
            "3096/43=72",
            "72-48=24"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 24:[15, 91, 29, 48, 22, 43], Operations: []\nExploring Operation: 15+91=106, Resulting Numbers: [29, 48, 22, 43, 106]\nGenerated Node #2: [29, 48, 22, 43, 106] from Operation: 15+91=106\nCurrent State: 24:[29, 48, 22, 43, 106], Operations: ['15+91=106']\nExploring Operation: 29*106=3074, Resulting Numbers: [48, 22, 43, 3074]\nGenerated Node #3: [48, 22, 43, 3074] from Operation: 29*106=3074\nCurrent State: 24:[48, 22, 43, 3074], Operations: ['15+91=106', '29*106=3074']\nExploring Operation: 22+3074=3096, Resulting Numbers: [48, 43, 3096]\nGenerated Node #4: [48, 43, 3096] from Operation: 22+3074=3096\nCurrent State: 24:[48, 43, 3096], Operations: ['15+91=106', '29*106=3074', '22+3074=3096']\nExploring Operation: 3096/43=72, Resulting Numbers: [48, 72]\nGenerated Node #5: [48, 72] from Operation: 3096/43=72\nCurrent State: 24:[48, 72], Operations: ['15+91=106', '29*106=3074', '22+3074=3096', '3096/43=72']\nExploring Operation: 72-48=24, Resulting Numbers: [24]\n24,24 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            77,
            18,
            65,
            15,
            41,
            75
        ],
        "target": 85,
        "solution": [
            "77-18=59",
            "65-59=6",
            "75-41=34",
            "15*34=510",
            "510/6=85"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 85:[77, 18, 65, 15, 41, 75], Operations: []\nExploring Operation: 77-18=59, Resulting Numbers: [65, 15, 41, 75, 59]\nGenerated Node #2: [65, 15, 41, 75, 59] from Operation: 77-18=59\nCurrent State: 85:[65, 15, 41, 75, 59], Operations: ['77-18=59']\nExploring Operation: 65-59=6, Resulting Numbers: [15, 41, 75, 6]\nGenerated Node #3: [15, 41, 75, 6] from Operation: 65-59=6\nCurrent State: 85:[15, 41, 75, 6], Operations: ['77-18=59', '65-59=6']\nExploring Operation: 75-41=34, Resulting Numbers: [15, 6, 34]\nGenerated Node #4: [15, 6, 34] from Operation: 75-41=34\nCurrent State: 85:[15, 6, 34], Operations: ['77-18=59', '65-59=6', '75-41=34']\nExploring Operation: 15*34=510, Resulting Numbers: [6, 510]\nGenerated Node #5: [6, 510] from Operation: 15*34=510\nCurrent State: 85:[6, 510], Operations: ['77-18=59', '65-59=6', '75-41=34', '15*34=510']\nExploring Operation: 510/6=85, Resulting Numbers: [85]\n85,85 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            24,
            4,
            59,
            34,
            25,
            50
        ],
        "target": 13,
        "solution": [
            "24+4=28",
            "59+25=84",
            "50-34=16",
            "84/28=3",
            "16-3=13"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 13:[24, 4, 59, 34, 25, 50], Operations: []\nExploring Operation: 24+4=28, Resulting Numbers: [59, 34, 25, 50, 28]\nGenerated Node #2: [59, 34, 25, 50, 28] from Operation: 24+4=28\nCurrent State: 13:[59, 34, 25, 50, 28], Operations: ['24+4=28']\nExploring Operation: 59+25=84, Resulting Numbers: [34, 50, 28, 84]\nGenerated Node #3: [34, 50, 28, 84] from Operation: 59+25=84\nCurrent State: 13:[34, 50, 28, 84], Operations: ['24+4=28', '59+25=84']\nExploring Operation: 50-34=16, Resulting Numbers: [28, 84, 16]\nGenerated Node #4: [28, 84, 16] from Operation: 50-34=16\nCurrent State: 13:[28, 84, 16], Operations: ['24+4=28', '59+25=84', '50-34=16']\nExploring Operation: 84/28=3, Resulting Numbers: [16, 3]\nGenerated Node #5: [16, 3] from Operation: 84/28=3\nCurrent State: 13:[16, 3], Operations: ['24+4=28', '59+25=84', '50-34=16', '84/28=3']\nExploring Operation: 16-3=13, Resulting Numbers: [13]\n13,13 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            76,
            34,
            12,
            6,
            20,
            41
        ],
        "target": 66,
        "solution": [
            "76-34=42",
            "12+20=32",
            "42/6=7",
            "41+32=73",
            "73-7=66"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 66:[76, 34, 12, 6, 20, 41], Operations: []\nExploring Operation: 76-34=42, Resulting Numbers: [12, 6, 20, 41, 42]\nGenerated Node #2: [12, 6, 20, 41, 42] from Operation: 76-34=42\nCurrent State: 66:[12, 6, 20, 41, 42], Operations: ['76-34=42']\nExploring Operation: 12+20=32, Resulting Numbers: [6, 41, 42, 32]\nGenerated Node #3: [6, 41, 42, 32] from Operation: 12+20=32\nCurrent State: 66:[6, 41, 42, 32], Operations: ['76-34=42', '12+20=32']\nExploring Operation: 42/6=7, Resulting Numbers: [41, 32, 7]\nGenerated Node #4: [41, 32, 7] from Operation: 42/6=7\nCurrent State: 66:[41, 32, 7], Operations: ['76-34=42', '12+20=32', '42/6=7']\nExploring Operation: 41+32=73, Resulting Numbers: [7, 73]\nGenerated Node #5: [7, 73] from Operation: 41+32=73\nCurrent State: 66:[7, 73], Operations: ['76-34=42', '12+20=32', '42/6=7', '41+32=73']\nExploring Operation: 73-7=66, Resulting Numbers: [66]\n66,66 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            57,
            67,
            96,
            5,
            40,
            58
        ],
        "target": 82,
        "solution": [
            "57+5=62",
            "96-67=29",
            "40*29=1160",
            "1160/58=20",
            "62+20=82"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 82:[57, 67, 96, 5, 40, 58], Operations: []\nExploring Operation: 57+5=62, Resulting Numbers: [67, 96, 40, 58, 62]\nGenerated Node #2: [67, 96, 40, 58, 62] from Operation: 57+5=62\nCurrent State: 82:[67, 96, 40, 58, 62], Operations: ['57+5=62']\nExploring Operation: 96-67=29, Resulting Numbers: [40, 58, 62, 29]\nGenerated Node #3: [40, 58, 62, 29] from Operation: 96-67=29\nCurrent State: 82:[40, 58, 62, 29], Operations: ['57+5=62', '96-67=29']\nExploring Operation: 40*29=1160, Resulting Numbers: [58, 62, 1160]\nGenerated Node #4: [58, 62, 1160] from Operation: 40*29=1160\nCurrent State: 82:[58, 62, 1160], Operations: ['57+5=62', '96-67=29', '40*29=1160']\nExploring Operation: 1160/58=20, Resulting Numbers: [62, 20]\nGenerated Node #5: [62, 20] from Operation: 1160/58=20\nCurrent State: 82:[62, 20], Operations: ['57+5=62', '96-67=29', '40*29=1160', '1160/58=20']\nExploring Operation: 62+20=82, Resulting Numbers: [82]\n82,82 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            89,
            24,
            13,
            61,
            51,
            81
        ],
        "target": 96,
        "solution": [
            "89+24=113",
            "61-13=48",
            "51-48=3",
            "113-81=32",
            "3*32=96"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 96:[89, 24, 13, 61, 51, 81], Operations: []\nExploring Operation: 89+24=113, Resulting Numbers: [13, 61, 51, 81, 113]\nGenerated Node #2: [13, 61, 51, 81, 113] from Operation: 89+24=113\nCurrent State: 96:[13, 61, 51, 81, 113], Operations: ['89+24=113']\nExploring Operation: 61-13=48, Resulting Numbers: [51, 81, 113, 48]\nGenerated Node #3: [51, 81, 113, 48] from Operation: 61-13=48\nCurrent State: 96:[51, 81, 113, 48], Operations: ['89+24=113', '61-13=48']\nExploring Operation: 51-48=3, Resulting Numbers: [81, 113, 3]\nGenerated Node #4: [81, 113, 3] from Operation: 51-48=3\nCurrent State: 96:[81, 113, 3], Operations: ['89+24=113', '61-13=48', '51-48=3']\nExploring Operation: 113-81=32, Resulting Numbers: [3, 32]\nGenerated Node #5: [3, 32] from Operation: 113-81=32\nCurrent State: 96:[3, 32], Operations: ['89+24=113', '61-13=48', '51-48=3', '113-81=32']\nExploring Operation: 3*32=96, Resulting Numbers: [96]\n96,96 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            46,
            15,
            9,
            90,
            4,
            68
        ],
        "target": 83,
        "solution": [
            "46+15=61",
            "9*61=549",
            "90+68=158",
            "4*158=632",
            "632-549=83"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 83:[46, 15, 9, 90, 4, 68], Operations: []\nExploring Operation: 46+15=61, Resulting Numbers: [9, 90, 4, 68, 61]\nGenerated Node #2: [9, 90, 4, 68, 61] from Operation: 46+15=61\nCurrent State: 83:[9, 90, 4, 68, 61], Operations: ['46+15=61']\nExploring Operation: 9*61=549, Resulting Numbers: [90, 4, 68, 549]\nGenerated Node #3: [90, 4, 68, 549] from Operation: 9*61=549\nCurrent State: 83:[90, 4, 68, 549], Operations: ['46+15=61', '9*61=549']\nExploring Operation: 90+68=158, Resulting Numbers: [4, 549, 158]\nGenerated Node #4: [4, 549, 158] from Operation: 90+68=158\nCurrent State: 83:[4, 549, 158], Operations: ['46+15=61', '9*61=549', '90+68=158']\nExploring Operation: 4*158=632, Resulting Numbers: [549, 632]\nGenerated Node #5: [549, 632] from Operation: 4*158=632\nCurrent State: 83:[549, 632], Operations: ['46+15=61', '9*61=549', '90+68=158', '4*158=632']\nExploring Operation: 632-549=83, Resulting Numbers: [83]\n83,83 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            95,
            27,
            6,
            98,
            7,
            66
        ],
        "target": 73,
        "solution": [
            "95+27=122",
            "122-98=24",
            "7*66=462",
            "462-24=438",
            "438/6=73"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 73:[95, 27, 6, 98, 7, 66], Operations: []\nExploring Operation: 95+27=122, Resulting Numbers: [6, 98, 7, 66, 122]\nGenerated Node #2: [6, 98, 7, 66, 122] from Operation: 95+27=122\nCurrent State: 73:[6, 98, 7, 66, 122], Operations: ['95+27=122']\nExploring Operation: 122-98=24, Resulting Numbers: [6, 7, 66, 24]\nGenerated Node #3: [6, 7, 66, 24] from Operation: 122-98=24\nCurrent State: 73:[6, 7, 66, 24], Operations: ['95+27=122', '122-98=24']\nExploring Operation: 7*66=462, Resulting Numbers: [6, 24, 462]\nGenerated Node #4: [6, 24, 462] from Operation: 7*66=462\nCurrent State: 73:[6, 24, 462], Operations: ['95+27=122', '122-98=24', '7*66=462']\nExploring Operation: 462-24=438, Resulting Numbers: [6, 438]\nGenerated Node #5: [6, 438] from Operation: 462-24=438\nCurrent State: 73:[6, 438], Operations: ['95+27=122', '122-98=24', '7*66=462', '462-24=438']\nExploring Operation: 438/6=73, Resulting Numbers: [73]\n73,73 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            24,
            55,
            82,
            2,
            76,
            54
        ],
        "target": 56,
        "solution": [
            "24+55=79",
            "82/2=41",
            "79-41=38",
            "76/38=2",
            "54+2=56"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 56:[24, 55, 82, 2, 76, 54], Operations: []\nExploring Operation: 24+55=79, Resulting Numbers: [82, 2, 76, 54, 79]\nGenerated Node #2: [82, 2, 76, 54, 79] from Operation: 24+55=79\nCurrent State: 56:[82, 2, 76, 54, 79], Operations: ['24+55=79']\nExploring Operation: 82/2=41, Resulting Numbers: [76, 54, 79, 41]\nGenerated Node #3: [76, 54, 79, 41] from Operation: 82/2=41\nCurrent State: 56:[76, 54, 79, 41], Operations: ['24+55=79', '82/2=41']\nExploring Operation: 79-41=38, Resulting Numbers: [76, 54, 38]\nGenerated Node #4: [76, 54, 38] from Operation: 79-41=38\nCurrent State: 56:[76, 54, 38], Operations: ['24+55=79', '82/2=41', '79-41=38']\nExploring Operation: 76/38=2, Resulting Numbers: [54, 2]\nGenerated Node #5: [54, 2] from Operation: 76/38=2\nCurrent State: 56:[54, 2], Operations: ['24+55=79', '82/2=41', '79-41=38', '76/38=2']\nExploring Operation: 54+2=56, Resulting Numbers: [56]\n56,56 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            31,
            81,
            16,
            87,
            75,
            94
        ],
        "target": 33,
        "solution": [
            "81-31=50",
            "87-75=12",
            "94-50=44",
            "12*44=528",
            "528/16=33"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 33:[31, 81, 16, 87, 75, 94], Operations: []\nExploring Operation: 81-31=50, Resulting Numbers: [16, 87, 75, 94, 50]\nGenerated Node #2: [16, 87, 75, 94, 50] from Operation: 81-31=50\nCurrent State: 33:[16, 87, 75, 94, 50], Operations: ['81-31=50']\nExploring Operation: 87-75=12, Resulting Numbers: [16, 94, 50, 12]\nGenerated Node #3: [16, 94, 50, 12] from Operation: 87-75=12\nCurrent State: 33:[16, 94, 50, 12], Operations: ['81-31=50', '87-75=12']\nExploring Operation: 94-50=44, Resulting Numbers: [16, 12, 44]\nGenerated Node #4: [16, 12, 44] from Operation: 94-50=44\nCurrent State: 33:[16, 12, 44], Operations: ['81-31=50', '87-75=12', '94-50=44']\nExploring Operation: 12*44=528, Resulting Numbers: [16, 528]\nGenerated Node #5: [16, 528] from Operation: 12*44=528\nCurrent State: 33:[16, 528], Operations: ['81-31=50', '87-75=12', '94-50=44', '12*44=528']\nExploring Operation: 528/16=33, Resulting Numbers: [33]\n33,33 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            33,
            66,
            30,
            64,
            75,
            28
        ],
        "target": 100,
        "solution": [
            "33+66=99",
            "99-30=69",
            "64+28=92",
            "75*92=6900",
            "6900/69=100"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 100:[33, 66, 30, 64, 75, 28], Operations: []\nExploring Operation: 33+66=99, Resulting Numbers: [30, 64, 75, 28, 99]\nGenerated Node #2: [30, 64, 75, 28, 99] from Operation: 33+66=99\nCurrent State: 100:[30, 64, 75, 28, 99], Operations: ['33+66=99']\nExploring Operation: 99-30=69, Resulting Numbers: [64, 75, 28, 69]\nGenerated Node #3: [64, 75, 28, 69] from Operation: 99-30=69\nCurrent State: 100:[64, 75, 28, 69], Operations: ['33+66=99', '99-30=69']\nExploring Operation: 64+28=92, Resulting Numbers: [75, 69, 92]\nGenerated Node #4: [75, 69, 92] from Operation: 64+28=92\nCurrent State: 100:[75, 69, 92], Operations: ['33+66=99', '99-30=69', '64+28=92']\nExploring Operation: 75*92=6900, Resulting Numbers: [69, 6900]\nGenerated Node #5: [69, 6900] from Operation: 75*92=6900\nCurrent State: 100:[69, 6900], Operations: ['33+66=99', '99-30=69', '64+28=92', '75*92=6900']\nExploring Operation: 6900/69=100, Resulting Numbers: [100]\n100,100 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            7,
            73,
            85,
            14,
            34,
            56
        ],
        "target": 78,
        "solution": [
            "7+85=92",
            "56-34=22",
            "92-22=70",
            "70/14=5",
            "73+5=78"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 78:[7, 73, 85, 14, 34, 56], Operations: []\nExploring Operation: 7+85=92, Resulting Numbers: [73, 14, 34, 56, 92]\nGenerated Node #2: [73, 14, 34, 56, 92] from Operation: 7+85=92\nCurrent State: 78:[73, 14, 34, 56, 92], Operations: ['7+85=92']\nExploring Operation: 56-34=22, Resulting Numbers: [73, 14, 92, 22]\nGenerated Node #3: [73, 14, 92, 22] from Operation: 56-34=22\nCurrent State: 78:[73, 14, 92, 22], Operations: ['7+85=92', '56-34=22']\nExploring Operation: 92-22=70, Resulting Numbers: [73, 14, 70]\nGenerated Node #4: [73, 14, 70] from Operation: 92-22=70\nCurrent State: 78:[73, 14, 70], Operations: ['7+85=92', '56-34=22', '92-22=70']\nExploring Operation: 70/14=5, Resulting Numbers: [73, 5]\nGenerated Node #5: [73, 5] from Operation: 70/14=5\nCurrent State: 78:[73, 5], Operations: ['7+85=92', '56-34=22', '92-22=70', '70/14=5']\nExploring Operation: 73+5=78, Resulting Numbers: [78]\n78,78 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            91,
            9,
            78,
            85,
            15,
            26
        ],
        "target": 69,
        "solution": [
            "91-85=6",
            "78*6=468",
            "468-9=459",
            "15*26=390",
            "459-390=69"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 69:[91, 9, 78, 85, 15, 26], Operations: []\nExploring Operation: 91-85=6, Resulting Numbers: [9, 78, 15, 26, 6]\nGenerated Node #2: [9, 78, 15, 26, 6] from Operation: 91-85=6\nCurrent State: 69:[9, 78, 15, 26, 6], Operations: ['91-85=6']\nExploring Operation: 78*6=468, Resulting Numbers: [9, 15, 26, 468]\nGenerated Node #3: [9, 15, 26, 468] from Operation: 78*6=468\nCurrent State: 69:[9, 15, 26, 468], Operations: ['91-85=6', '78*6=468']\nExploring Operation: 468-9=459, Resulting Numbers: [15, 26, 459]\nGenerated Node #4: [15, 26, 459] from Operation: 468-9=459\nCurrent State: 69:[15, 26, 459], Operations: ['91-85=6', '78*6=468', '468-9=459']\nExploring Operation: 15*26=390, Resulting Numbers: [459, 390]\nGenerated Node #5: [459, 390] from Operation: 15*26=390\nCurrent State: 69:[459, 390], Operations: ['91-85=6', '78*6=468', '468-9=459', '15*26=390']\nExploring Operation: 459-390=69, Resulting Numbers: [69]\n69,69 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            91,
            66,
            97,
            37,
            99,
            46
        ],
        "target": 81,
        "solution": [
            "91-66=25",
            "37*25=925",
            "925-97=828",
            "828/46=18",
            "99-18=81"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 81:[91, 66, 97, 37, 99, 46], Operations: []\nExploring Operation: 91-66=25, Resulting Numbers: [97, 37, 99, 46, 25]\nGenerated Node #2: [97, 37, 99, 46, 25] from Operation: 91-66=25\nCurrent State: 81:[97, 37, 99, 46, 25], Operations: ['91-66=25']\nExploring Operation: 37*25=925, Resulting Numbers: [97, 99, 46, 925]\nGenerated Node #3: [97, 99, 46, 925] from Operation: 37*25=925\nCurrent State: 81:[97, 99, 46, 925], Operations: ['91-66=25', '37*25=925']\nExploring Operation: 925-97=828, Resulting Numbers: [99, 46, 828]\nGenerated Node #4: [99, 46, 828] from Operation: 925-97=828\nCurrent State: 81:[99, 46, 828], Operations: ['91-66=25', '37*25=925', '925-97=828']\nExploring Operation: 828/46=18, Resulting Numbers: [99, 18]\nGenerated Node #5: [99, 18] from Operation: 828/46=18\nCurrent State: 81:[99, 18], Operations: ['91-66=25', '37*25=925', '925-97=828', '828/46=18']\nExploring Operation: 99-18=81, Resulting Numbers: [81]\n81,81 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            67,
            97,
            7,
            59,
            74,
            73
        ],
        "target": 46,
        "solution": [
            "67*97=6499",
            "74-7=67",
            "6499-59=6440",
            "73+67=140",
            "6440/140=46"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 46:[67, 97, 7, 59, 74, 73], Operations: []\nExploring Operation: 67*97=6499, Resulting Numbers: [7, 59, 74, 73, 6499]\nGenerated Node #2: [7, 59, 74, 73, 6499] from Operation: 67*97=6499\nCurrent State: 46:[7, 59, 74, 73, 6499], Operations: ['67*97=6499']\nExploring Operation: 74-7=67, Resulting Numbers: [59, 73, 6499, 67]\nGenerated Node #3: [59, 73, 6499, 67] from Operation: 74-7=67\nCurrent State: 46:[59, 73, 6499, 67], Operations: ['67*97=6499', '74-7=67']\nExploring Operation: 6499-59=6440, Resulting Numbers: [73, 67, 6440]\nGenerated Node #4: [73, 67, 6440] from Operation: 6499-59=6440\nCurrent State: 46:[73, 67, 6440], Operations: ['67*97=6499', '74-7=67', '6499-59=6440']\nExploring Operation: 73+67=140, Resulting Numbers: [6440, 140]\nGenerated Node #5: [6440, 140] from Operation: 73+67=140\nCurrent State: 46:[6440, 140], Operations: ['67*97=6499', '74-7=67', '6499-59=6440', '73+67=140']\nExploring Operation: 6440/140=46, Resulting Numbers: [46]\n46,46 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            29,
            97,
            15,
            97,
            20,
            51
        ],
        "target": 47,
        "solution": [
            "97+97=194",
            "51-20=31",
            "29*31=899",
            "899-194=705",
            "705/15=47"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 47:[29, 97, 15, 97, 20, 51], Operations: []\nExploring Operation: 97+97=194, Resulting Numbers: [29, 15, 20, 51, 194]\nGenerated Node #2: [29, 15, 20, 51, 194] from Operation: 97+97=194\nCurrent State: 47:[29, 15, 20, 51, 194], Operations: ['97+97=194']\nExploring Operation: 51-20=31, Resulting Numbers: [29, 15, 194, 31]\nGenerated Node #3: [29, 15, 194, 31] from Operation: 51-20=31\nCurrent State: 47:[29, 15, 194, 31], Operations: ['97+97=194', '51-20=31']\nExploring Operation: 29*31=899, Resulting Numbers: [15, 194, 899]\nGenerated Node #4: [15, 194, 899] from Operation: 29*31=899\nCurrent State: 47:[15, 194, 899], Operations: ['97+97=194', '51-20=31', '29*31=899']\nExploring Operation: 899-194=705, Resulting Numbers: [15, 705]\nGenerated Node #5: [15, 705] from Operation: 899-194=705\nCurrent State: 47:[15, 705], Operations: ['97+97=194', '51-20=31', '29*31=899', '899-194=705']\nExploring Operation: 705/15=47, Resulting Numbers: [47]\n47,47 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            3,
            9,
            59,
            36,
            81,
            49
        ],
        "target": 14,
        "solution": [
            "3*9=27",
            "59*36=2124",
            "81*27=2187",
            "49+2124=2173",
            "2187-2173=14"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 14:[3, 9, 59, 36, 81, 49], Operations: []\nExploring Operation: 3*9=27, Resulting Numbers: [59, 36, 81, 49, 27]\nGenerated Node #2: [59, 36, 81, 49, 27] from Operation: 3*9=27\nCurrent State: 14:[59, 36, 81, 49, 27], Operations: ['3*9=27']\nExploring Operation: 59*36=2124, Resulting Numbers: [81, 49, 27, 2124]\nGenerated Node #3: [81, 49, 27, 2124] from Operation: 59*36=2124\nCurrent State: 14:[81, 49, 27, 2124], Operations: ['3*9=27', '59*36=2124']\nExploring Operation: 81*27=2187, Resulting Numbers: [49, 2124, 2187]\nGenerated Node #4: [49, 2124, 2187] from Operation: 81*27=2187\nCurrent State: 14:[49, 2124, 2187], Operations: ['3*9=27', '59*36=2124', '81*27=2187']\nExploring Operation: 49+2124=2173, Resulting Numbers: [2187, 2173]\nGenerated Node #5: [2187, 2173] from Operation: 49+2124=2173\nCurrent State: 14:[2187, 2173], Operations: ['3*9=27', '59*36=2124', '81*27=2187', '49+2124=2173']\nExploring Operation: 2187-2173=14, Resulting Numbers: [14]\n14,14 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            73,
            5,
            63,
            32,
            27,
            36
        ],
        "target": 87,
        "solution": [
            "73+5=78",
            "63-32=31",
            "31-27=4",
            "36/4=9",
            "78+9=87"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 87:[73, 5, 63, 32, 27, 36], Operations: []\nExploring Operation: 73+5=78, Resulting Numbers: [63, 32, 27, 36, 78]\nGenerated Node #2: [63, 32, 27, 36, 78] from Operation: 73+5=78\nCurrent State: 87:[63, 32, 27, 36, 78], Operations: ['73+5=78']\nExploring Operation: 63-32=31, Resulting Numbers: [27, 36, 78, 31]\nGenerated Node #3: [27, 36, 78, 31] from Operation: 63-32=31\nCurrent State: 87:[27, 36, 78, 31], Operations: ['73+5=78', '63-32=31']\nExploring Operation: 31-27=4, Resulting Numbers: [36, 78, 4]\nGenerated Node #4: [36, 78, 4] from Operation: 31-27=4\nCurrent State: 87:[36, 78, 4], Operations: ['73+5=78', '63-32=31', '31-27=4']\nExploring Operation: 36/4=9, Resulting Numbers: [78, 9]\nGenerated Node #5: [78, 9] from Operation: 36/4=9\nCurrent State: 87:[78, 9], Operations: ['73+5=78', '63-32=31', '31-27=4', '36/4=9']\nExploring Operation: 78+9=87, Resulting Numbers: [87]\n87,87 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            97,
            3,
            8,
            5,
            3,
            30
        ],
        "target": 12,
        "solution": [
            "97+3=100",
            "8+30=38",
            "5-3=2",
            "100/2=50",
            "50-38=12"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 12:[97, 3, 8, 5, 3, 30], Operations: []\nExploring Operation: 97+3=100, Resulting Numbers: [8, 5, 30, 100]\nGenerated Node #2: [8, 5, 30, 100] from Operation: 97+3=100\nCurrent State: 12:[8, 5, 30, 100], Operations: ['97+3=100']\nExploring Operation: 8+30=38, Resulting Numbers: [5, 100, 38]\nGenerated Node #3: [5, 100, 38] from Operation: 8+30=38\nCurrent State: 12:[5, 100, 38], Operations: ['97+3=100', '8+30=38']\nExploring Operation: 5-3=2, Resulting Numbers: [100, 38, 2]\nGenerated Node #4: [100, 38, 2] from Operation: 5-3=2\nCurrent State: 12:[100, 38, 2], Operations: ['97+3=100', '8+30=38', '5-3=2']\nExploring Operation: 100/2=50, Resulting Numbers: [38, 50]\nGenerated Node #5: [38, 50] from Operation: 100/2=50\nCurrent State: 12:[38, 50], Operations: ['97+3=100', '8+30=38', '5-3=2', '100/2=50']\nExploring Operation: 50-38=12, Resulting Numbers: [12]\n12,12 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            35,
            82,
            90,
            38,
            94,
            30
        ],
        "target": 18,
        "solution": [
            "35+82=117",
            "90/30=3",
            "38+94=132",
            "117-3=114",
            "132-114=18"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 18:[35, 82, 90, 38, 94, 30], Operations: []\nExploring Operation: 35+82=117, Resulting Numbers: [90, 38, 94, 30, 117]\nGenerated Node #2: [90, 38, 94, 30, 117] from Operation: 35+82=117\nCurrent State: 18:[90, 38, 94, 30, 117], Operations: ['35+82=117']\nExploring Operation: 90/30=3, Resulting Numbers: [38, 94, 117, 3]\nGenerated Node #3: [38, 94, 117, 3] from Operation: 90/30=3\nCurrent State: 18:[38, 94, 117, 3], Operations: ['35+82=117', '90/30=3']\nExploring Operation: 38+94=132, Resulting Numbers: [117, 3, 132]\nGenerated Node #4: [117, 3, 132] from Operation: 38+94=132\nCurrent State: 18:[117, 3, 132], Operations: ['35+82=117', '90/30=3', '38+94=132']\nExploring Operation: 117-3=114, Resulting Numbers: [132, 114]\nGenerated Node #5: [132, 114] from Operation: 117-3=114\nCurrent State: 18:[132, 114], Operations: ['35+82=117', '90/30=3', '38+94=132', '117-3=114']\nExploring Operation: 132-114=18, Resulting Numbers: [18]\n18,18 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            72,
            23,
            34,
            26,
            34,
            42
        ],
        "target": 58,
        "solution": [
            "72*23=1656",
            "34+26=60",
            "60-42=18",
            "1656/18=92",
            "92-34=58"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 58:[72, 23, 34, 26, 34, 42], Operations: []\nExploring Operation: 72*23=1656, Resulting Numbers: [34, 26, 34, 42, 1656]\nGenerated Node #2: [34, 26, 34, 42, 1656] from Operation: 72*23=1656\nCurrent State: 58:[34, 26, 34, 42, 1656], Operations: ['72*23=1656']\nExploring Operation: 34+26=60, Resulting Numbers: [42, 1656, 60]\nGenerated Node #3: [42, 1656, 60] from Operation: 34+26=60\nCurrent State: 58:[42, 1656, 60], Operations: ['72*23=1656', '34+26=60']\nExploring Operation: 60-42=18, Resulting Numbers: [1656, 18]\nGenerated Node #4: [1656, 18] from Operation: 60-42=18\nCurrent State: 58:[1656, 18], Operations: ['72*23=1656', '34+26=60', '60-42=18']\nExploring Operation: 1656/18=92, Resulting Numbers: [92]\n92,58 equal: Goal Reached\nExploring Operation: 92-34=58, Resulting Numbers: [58]\n58,58 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            34,
            51,
            69,
            84,
            77,
            13
        ],
        "target": 79,
        "solution": [
            "34+51=85",
            "84-69=15",
            "77+13=90",
            "90/15=6",
            "85-6=79"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 79:[34, 51, 69, 84, 77, 13], Operations: []\nExploring Operation: 34+51=85, Resulting Numbers: [69, 84, 77, 13, 85]\nGenerated Node #2: [69, 84, 77, 13, 85] from Operation: 34+51=85\nCurrent State: 79:[69, 84, 77, 13, 85], Operations: ['34+51=85']\nExploring Operation: 84-69=15, Resulting Numbers: [77, 13, 85, 15]\nGenerated Node #3: [77, 13, 85, 15] from Operation: 84-69=15\nCurrent State: 79:[77, 13, 85, 15], Operations: ['34+51=85', '84-69=15']\nExploring Operation: 77+13=90, Resulting Numbers: [85, 15, 90]\nGenerated Node #4: [85, 15, 90] from Operation: 77+13=90\nCurrent State: 79:[85, 15, 90], Operations: ['34+51=85', '84-69=15', '77+13=90']\nExploring Operation: 90/15=6, Resulting Numbers: [85, 6]\nGenerated Node #5: [85, 6] from Operation: 90/15=6\nCurrent State: 79:[85, 6], Operations: ['34+51=85', '84-69=15', '77+13=90', '90/15=6']\nExploring Operation: 85-6=79, Resulting Numbers: [79]\n79,79 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            74,
            97,
            70,
            5,
            28,
            76
        ],
        "target": 60,
        "solution": [
            "97-74=23",
            "76-70=6",
            "5+28=33",
            "33-23=10",
            "6*10=60"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 60:[74, 97, 70, 5, 28, 76], Operations: []\nExploring Operation: 97-74=23, Resulting Numbers: [70, 5, 28, 76, 23]\nGenerated Node #2: [70, 5, 28, 76, 23] from Operation: 97-74=23\nCurrent State: 60:[70, 5, 28, 76, 23], Operations: ['97-74=23']\nExploring Operation: 76-70=6, Resulting Numbers: [5, 28, 23, 6]\nGenerated Node #3: [5, 28, 23, 6] from Operation: 76-70=6\nCurrent State: 60:[5, 28, 23, 6], Operations: ['97-74=23', '76-70=6']\nExploring Operation: 5+28=33, Resulting Numbers: [23, 6, 33]\nGenerated Node #4: [23, 6, 33] from Operation: 5+28=33\nCurrent State: 60:[23, 6, 33], Operations: ['97-74=23', '76-70=6', '5+28=33']\nExploring Operation: 33-23=10, Resulting Numbers: [6, 10]\nGenerated Node #5: [6, 10] from Operation: 33-23=10\nCurrent State: 60:[6, 10], Operations: ['97-74=23', '76-70=6', '5+28=33', '33-23=10']\nExploring Operation: 6*10=60, Resulting Numbers: [60]\n60,60 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            72,
            46,
            5,
            82,
            43,
            30
        ],
        "target": 10,
        "solution": [
            "72+46=118",
            "82+118=200",
            "200/5=40",
            "43-40=3",
            "30/3=10"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 10:[72, 46, 5, 82, 43, 30], Operations: []\nExploring Operation: 72+46=118, Resulting Numbers: [5, 82, 43, 30, 118]\nGenerated Node #2: [5, 82, 43, 30, 118] from Operation: 72+46=118\nCurrent State: 10:[5, 82, 43, 30, 118], Operations: ['72+46=118']\nExploring Operation: 82+118=200, Resulting Numbers: [5, 43, 30, 200]\nGenerated Node #3: [5, 43, 30, 200] from Operation: 82+118=200\nCurrent State: 10:[5, 43, 30, 200], Operations: ['72+46=118', '82+118=200']\nExploring Operation: 200/5=40, Resulting Numbers: [43, 30, 40]\nGenerated Node #4: [43, 30, 40] from Operation: 200/5=40\nCurrent State: 10:[43, 30, 40], Operations: ['72+46=118', '82+118=200', '200/5=40']\nExploring Operation: 43-40=3, Resulting Numbers: [30, 3]\nGenerated Node #5: [30, 3] from Operation: 43-40=3\nCurrent State: 10:[30, 3], Operations: ['72+46=118', '82+118=200', '200/5=40', '43-40=3']\nExploring Operation: 30/3=10, Resulting Numbers: [10]\n10,10 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            87,
            13,
            22,
            82,
            16,
            68
        ],
        "target": 40,
        "solution": [
            "87+13=100",
            "22-16=6",
            "100-82=18",
            "6*18=108",
            "108-68=40"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 40:[87, 13, 22, 82, 16, 68], Operations: []\nExploring Operation: 87+13=100, Resulting Numbers: [22, 82, 16, 68, 100]\nGenerated Node #2: [22, 82, 16, 68, 100] from Operation: 87+13=100\nCurrent State: 40:[22, 82, 16, 68, 100], Operations: ['87+13=100']\nExploring Operation: 22-16=6, Resulting Numbers: [82, 68, 100, 6]\nGenerated Node #3: [82, 68, 100, 6] from Operation: 22-16=6\nCurrent State: 40:[82, 68, 100, 6], Operations: ['87+13=100', '22-16=6']\nExploring Operation: 100-82=18, Resulting Numbers: [68, 6, 18]\nGenerated Node #4: [68, 6, 18] from Operation: 100-82=18\nCurrent State: 40:[68, 6, 18], Operations: ['87+13=100', '22-16=6', '100-82=18']\nExploring Operation: 6*18=108, Resulting Numbers: [68, 108]\nGenerated Node #5: [68, 108] from Operation: 6*18=108\nCurrent State: 40:[68, 108], Operations: ['87+13=100', '22-16=6', '100-82=18', '6*18=108']\nExploring Operation: 108-68=40, Resulting Numbers: [40]\n40,40 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            38,
            40,
            8,
            1,
            5,
            80
        ],
        "target": 18,
        "solution": [
            "38+40=78",
            "8*1=8",
            "80-78=2",
            "5*2=10",
            "8+10=18"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 18:[38, 40, 8, 1, 5, 80], Operations: []\nExploring Operation: 38+40=78, Resulting Numbers: [8, 1, 5, 80, 78]\nGenerated Node #2: [8, 1, 5, 80, 78] from Operation: 38+40=78\nCurrent State: 18:[8, 1, 5, 80, 78], Operations: ['38+40=78']\nExploring Operation: 8*1=8, Resulting Numbers: [5, 80, 78, 8]\nGenerated Node #3: [5, 80, 78, 8] from Operation: 8*1=8\nCurrent State: 18:[5, 80, 78, 8], Operations: ['38+40=78', '8*1=8']\nExploring Operation: 80-78=2, Resulting Numbers: [5, 8, 2]\nGenerated Node #4: [5, 8, 2] from Operation: 80-78=2\nCurrent State: 18:[5, 8, 2], Operations: ['38+40=78', '8*1=8', '80-78=2']\nExploring Operation: 5*2=10, Resulting Numbers: [8, 10]\nGenerated Node #5: [8, 10] from Operation: 5*2=10\nCurrent State: 18:[8, 10], Operations: ['38+40=78', '8*1=8', '80-78=2', '5*2=10']\nExploring Operation: 8+10=18, Resulting Numbers: [18]\n18,18 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            21,
            41,
            28,
            54,
            60,
            32
        ],
        "target": 19,
        "solution": [
            "21+41=62",
            "54-28=26",
            "62-60=2",
            "26/2=13",
            "32-13=19"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 19:[21, 41, 28, 54, 60, 32], Operations: []\nExploring Operation: 21+41=62, Resulting Numbers: [28, 54, 60, 32, 62]\nGenerated Node #2: [28, 54, 60, 32, 62] from Operation: 21+41=62\nCurrent State: 19:[28, 54, 60, 32, 62], Operations: ['21+41=62']\nExploring Operation: 54-28=26, Resulting Numbers: [60, 32, 62, 26]\nGenerated Node #3: [60, 32, 62, 26] from Operation: 54-28=26\nCurrent State: 19:[60, 32, 62, 26], Operations: ['21+41=62', '54-28=26']\nExploring Operation: 62-60=2, Resulting Numbers: [32, 26, 2]\nGenerated Node #4: [32, 26, 2] from Operation: 62-60=2\nCurrent State: 19:[32, 26, 2], Operations: ['21+41=62', '54-28=26', '62-60=2']\nExploring Operation: 26/2=13, Resulting Numbers: [32, 13]\nGenerated Node #5: [32, 13] from Operation: 26/2=13\nCurrent State: 19:[32, 13], Operations: ['21+41=62', '54-28=26', '62-60=2', '26/2=13']\nExploring Operation: 32-13=19, Resulting Numbers: [19]\n19,19 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            58,
            63,
            43,
            20,
            83,
            10
        ],
        "target": 86,
        "solution": [
            "63-58=5",
            "43+83=126",
            "20*10=200",
            "200/5=40",
            "126-40=86"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 86:[58, 63, 43, 20, 83, 10], Operations: []\nExploring Operation: 63-58=5, Resulting Numbers: [43, 20, 83, 10, 5]\nGenerated Node #2: [43, 20, 83, 10, 5] from Operation: 63-58=5\nCurrent State: 86:[43, 20, 83, 10, 5], Operations: ['63-58=5']\nExploring Operation: 43+83=126, Resulting Numbers: [20, 10, 5, 126]\nGenerated Node #3: [20, 10, 5, 126] from Operation: 43+83=126\nCurrent State: 86:[20, 10, 5, 126], Operations: ['63-58=5', '43+83=126']\nExploring Operation: 20*10=200, Resulting Numbers: [5, 126, 200]\nGenerated Node #4: [5, 126, 200] from Operation: 20*10=200\nCurrent State: 86:[5, 126, 200], Operations: ['63-58=5', '43+83=126', '20*10=200']\nExploring Operation: 200/5=40, Resulting Numbers: [126, 40]\nGenerated Node #5: [126, 40] from Operation: 200/5=40\nCurrent State: 86:[126, 40], Operations: ['63-58=5', '43+83=126', '20*10=200', '200/5=40']\nExploring Operation: 126-40=86, Resulting Numbers: [86]\n86,86 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            48,
            95,
            84,
            69,
            41,
            84
        ],
        "target": 78,
        "solution": [
            "69-41=28",
            "48*28=1344",
            "84+1344=1428",
            "1428/84=17",
            "95-17=78"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 78:[48, 95, 84, 69, 41, 84], Operations: []\nExploring Operation: 69-41=28, Resulting Numbers: [48, 95, 84, 84, 28]\nGenerated Node #2: [48, 95, 84, 84, 28] from Operation: 69-41=28\nCurrent State: 78:[48, 95, 84, 84, 28], Operations: ['69-41=28']\nExploring Operation: 48*28=1344, Resulting Numbers: [95, 84, 84, 1344]\nGenerated Node #3: [95, 84, 84, 1344] from Operation: 48*28=1344\nCurrent State: 78:[95, 84, 84, 1344], Operations: ['69-41=28', '48*28=1344']\nExploring Operation: 84+1344=1428, Resulting Numbers: [95, 1428]\nGenerated Node #4: [95, 1428] from Operation: 84+1344=1428\nCurrent State: 78:[95, 1428], Operations: ['69-41=28', '48*28=1344', '84+1344=1428']\nExploring Operation: 1428/84=17, Resulting Numbers: [95, 17]\nGenerated Node #5: [95, 17] from Operation: 1428/84=17\nCurrent State: 78:[95, 17], Operations: ['69-41=28', '48*28=1344', '84+1344=1428', '1428/84=17']\nExploring Operation: 95-17=78, Resulting Numbers: [78]\n78,78 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            98,
            65,
            15,
            48,
            45,
            19
        ],
        "target": 14,
        "solution": [
            "98-65=33",
            "45/15=3",
            "48-33=15",
            "15/3=5",
            "19-5=14"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 14:[98, 65, 15, 48, 45, 19], Operations: []\nExploring Operation: 98-65=33, Resulting Numbers: [15, 48, 45, 19, 33]\nGenerated Node #2: [15, 48, 45, 19, 33] from Operation: 98-65=33\nCurrent State: 14:[15, 48, 45, 19, 33], Operations: ['98-65=33']\nExploring Operation: 45/15=3, Resulting Numbers: [48, 19, 33, 3]\nGenerated Node #3: [48, 19, 33, 3] from Operation: 45/15=3\nCurrent State: 14:[48, 19, 33, 3], Operations: ['98-65=33', '45/15=3']\nExploring Operation: 48-33=15, Resulting Numbers: [19, 3, 15]\nGenerated Node #4: [19, 3, 15] from Operation: 48-33=15\nCurrent State: 14:[19, 3, 15], Operations: ['98-65=33', '45/15=3', '48-33=15']\nExploring Operation: 15/3=5, Resulting Numbers: [19, 5]\nGenerated Node #5: [19, 5] from Operation: 15/3=5\nCurrent State: 14:[19, 5], Operations: ['98-65=33', '45/15=3', '48-33=15', '15/3=5']\nExploring Operation: 19-5=14, Resulting Numbers: [14]\n14,14 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            53,
            9,
            71,
            28,
            68,
            26
        ],
        "target": 98,
        "solution": [
            "71-53=18",
            "9*68=612",
            "28*26=728",
            "18+612=630",
            "728-630=98"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 98:[53, 9, 71, 28, 68, 26], Operations: []\nExploring Operation: 71-53=18, Resulting Numbers: [9, 28, 68, 26, 18]\nGenerated Node #2: [9, 28, 68, 26, 18] from Operation: 71-53=18\nCurrent State: 98:[9, 28, 68, 26, 18], Operations: ['71-53=18']\nExploring Operation: 9*68=612, Resulting Numbers: [28, 26, 18, 612]\nGenerated Node #3: [28, 26, 18, 612] from Operation: 9*68=612\nCurrent State: 98:[28, 26, 18, 612], Operations: ['71-53=18', '9*68=612']\nExploring Operation: 28*26=728, Resulting Numbers: [18, 612, 728]\nGenerated Node #4: [18, 612, 728] from Operation: 28*26=728\nCurrent State: 98:[18, 612, 728], Operations: ['71-53=18', '9*68=612', '28*26=728']\nExploring Operation: 18+612=630, Resulting Numbers: [728, 630]\nGenerated Node #5: [728, 630] from Operation: 18+612=630\nCurrent State: 98:[728, 630], Operations: ['71-53=18', '9*68=612', '28*26=728', '18+612=630']\nExploring Operation: 728-630=98, Resulting Numbers: [98]\n98,98 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            57,
            23,
            88,
            46,
            55,
            56
        ],
        "target": 50,
        "solution": [
            "57-23=34",
            "88+56=144",
            "55-46=9",
            "144/9=16",
            "34+16=50"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 50:[57, 23, 88, 46, 55, 56], Operations: []\nExploring Operation: 57-23=34, Resulting Numbers: [88, 46, 55, 56, 34]\nGenerated Node #2: [88, 46, 55, 56, 34] from Operation: 57-23=34\nCurrent State: 50:[88, 46, 55, 56, 34], Operations: ['57-23=34']\nExploring Operation: 88+56=144, Resulting Numbers: [46, 55, 34, 144]\nGenerated Node #3: [46, 55, 34, 144] from Operation: 88+56=144\nCurrent State: 50:[46, 55, 34, 144], Operations: ['57-23=34', '88+56=144']\nExploring Operation: 55-46=9, Resulting Numbers: [34, 144, 9]\nGenerated Node #4: [34, 144, 9] from Operation: 55-46=9\nCurrent State: 50:[34, 144, 9], Operations: ['57-23=34', '88+56=144', '55-46=9']\nExploring Operation: 144/9=16, Resulting Numbers: [34, 16]\nGenerated Node #5: [34, 16] from Operation: 144/9=16\nCurrent State: 50:[34, 16], Operations: ['57-23=34', '88+56=144', '55-46=9', '144/9=16']\nExploring Operation: 34+16=50, Resulting Numbers: [50]\n50,50 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            18,
            57,
            69,
            55,
            23,
            5
        ],
        "target": 33,
        "solution": [
            "18+57=75",
            "69-55=14",
            "23+5=28",
            "75-14=61",
            "61-28=33"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 33:[18, 57, 69, 55, 23, 5], Operations: []\nExploring Operation: 18+57=75, Resulting Numbers: [69, 55, 23, 5, 75]\nGenerated Node #2: [69, 55, 23, 5, 75] from Operation: 18+57=75\nCurrent State: 33:[69, 55, 23, 5, 75], Operations: ['18+57=75']\nExploring Operation: 69-55=14, Resulting Numbers: [23, 5, 75, 14]\nGenerated Node #3: [23, 5, 75, 14] from Operation: 69-55=14\nCurrent State: 33:[23, 5, 75, 14], Operations: ['18+57=75', '69-55=14']\nExploring Operation: 23+5=28, Resulting Numbers: [75, 14, 28]\nGenerated Node #4: [75, 14, 28] from Operation: 23+5=28\nCurrent State: 33:[75, 14, 28], Operations: ['18+57=75', '69-55=14', '23+5=28']\nExploring Operation: 75-14=61, Resulting Numbers: [28, 61]\nGenerated Node #5: [28, 61] from Operation: 75-14=61\nCurrent State: 33:[28, 61], Operations: ['18+57=75', '69-55=14', '23+5=28', '75-14=61']\nExploring Operation: 61-28=33, Resulting Numbers: [33]\n33,33 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            91,
            28,
            23,
            89,
            85,
            30
        ],
        "target": 28,
        "solution": [
            "91+28=119",
            "23+89=112",
            "85+30=115",
            "119-115=4",
            "112/4=28"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 28:[91, 28, 23, 89, 85, 30], Operations: []\nExploring Operation: 91+28=119, Resulting Numbers: [23, 89, 85, 30, 119]\nGenerated Node #2: [23, 89, 85, 30, 119] from Operation: 91+28=119\nCurrent State: 28:[23, 89, 85, 30, 119], Operations: ['91+28=119']\nExploring Operation: 23+89=112, Resulting Numbers: [85, 30, 119, 112]\nGenerated Node #3: [85, 30, 119, 112] from Operation: 23+89=112\nCurrent State: 28:[85, 30, 119, 112], Operations: ['91+28=119', '23+89=112']\nExploring Operation: 85+30=115, Resulting Numbers: [119, 112, 115]\nGenerated Node #4: [119, 112, 115] from Operation: 85+30=115\nCurrent State: 28:[119, 112, 115], Operations: ['91+28=119', '23+89=112', '85+30=115']\nExploring Operation: 119-115=4, Resulting Numbers: [112, 4]\nGenerated Node #5: [112, 4] from Operation: 119-115=4\nCurrent State: 28:[112, 4], Operations: ['91+28=119', '23+89=112', '85+30=115', '119-115=4']\nExploring Operation: 112/4=28, Resulting Numbers: [28]\n28,28 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            44,
            91,
            96,
            41,
            42,
            5
        ],
        "target": 17,
        "solution": [
            "44-41=3",
            "96-42=54",
            "5-3=2",
            "54*2=108",
            "108-91=17"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 17:[44, 91, 96, 41, 42, 5], Operations: []\nExploring Operation: 44-41=3, Resulting Numbers: [91, 96, 42, 5, 3]\nGenerated Node #2: [91, 96, 42, 5, 3] from Operation: 44-41=3\nCurrent State: 17:[91, 96, 42, 5, 3], Operations: ['44-41=3']\nExploring Operation: 96-42=54, Resulting Numbers: [91, 5, 3, 54]\nGenerated Node #3: [91, 5, 3, 54] from Operation: 96-42=54\nCurrent State: 17:[91, 5, 3, 54], Operations: ['44-41=3', '96-42=54']\nExploring Operation: 5-3=2, Resulting Numbers: [91, 54, 2]\nGenerated Node #4: [91, 54, 2] from Operation: 5-3=2\nCurrent State: 17:[91, 54, 2], Operations: ['44-41=3', '96-42=54', '5-3=2']\nExploring Operation: 54*2=108, Resulting Numbers: [91, 108]\nGenerated Node #5: [91, 108] from Operation: 54*2=108\nCurrent State: 17:[91, 108], Operations: ['44-41=3', '96-42=54', '5-3=2', '54*2=108']\nExploring Operation: 108-91=17, Resulting Numbers: [17]\n17,17 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            79,
            10,
            55,
            72,
            97,
            51
        ],
        "target": 40,
        "solution": [
            "79+10=89",
            "55-51=4",
            "97-89=8",
            "4*8=32",
            "72-32=40"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 40:[79, 10, 55, 72, 97, 51], Operations: []\nExploring Operation: 79+10=89, Resulting Numbers: [55, 72, 97, 51, 89]\nGenerated Node #2: [55, 72, 97, 51, 89] from Operation: 79+10=89\nCurrent State: 40:[55, 72, 97, 51, 89], Operations: ['79+10=89']\nExploring Operation: 55-51=4, Resulting Numbers: [72, 97, 89, 4]\nGenerated Node #3: [72, 97, 89, 4] from Operation: 55-51=4\nCurrent State: 40:[72, 97, 89, 4], Operations: ['79+10=89', '55-51=4']\nExploring Operation: 97-89=8, Resulting Numbers: [72, 4, 8]\nGenerated Node #4: [72, 4, 8] from Operation: 97-89=8\nCurrent State: 40:[72, 4, 8], Operations: ['79+10=89', '55-51=4', '97-89=8']\nExploring Operation: 4*8=32, Resulting Numbers: [72, 32]\nGenerated Node #5: [72, 32] from Operation: 4*8=32\nCurrent State: 40:[72, 32], Operations: ['79+10=89', '55-51=4', '97-89=8', '4*8=32']\nExploring Operation: 72-32=40, Resulting Numbers: [40]\n40,40 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            74,
            59,
            69,
            9,
            83,
            2
        ],
        "target": 38,
        "solution": [
            "74+59=133",
            "69*2=138",
            "138-133=5",
            "9*5=45",
            "83-45=38"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 38:[74, 59, 69, 9, 83, 2], Operations: []\nExploring Operation: 74+59=133, Resulting Numbers: [69, 9, 83, 2, 133]\nGenerated Node #2: [69, 9, 83, 2, 133] from Operation: 74+59=133\nCurrent State: 38:[69, 9, 83, 2, 133], Operations: ['74+59=133']\nExploring Operation: 69*2=138, Resulting Numbers: [9, 83, 133, 138]\nGenerated Node #3: [9, 83, 133, 138] from Operation: 69*2=138\nCurrent State: 38:[9, 83, 133, 138], Operations: ['74+59=133', '69*2=138']\nExploring Operation: 138-133=5, Resulting Numbers: [9, 83, 5]\nGenerated Node #4: [9, 83, 5] from Operation: 138-133=5\nCurrent State: 38:[9, 83, 5], Operations: ['74+59=133', '69*2=138', '138-133=5']\nExploring Operation: 9*5=45, Resulting Numbers: [83, 45]\nGenerated Node #5: [83, 45] from Operation: 9*5=45\nCurrent State: 38:[83, 45], Operations: ['74+59=133', '69*2=138', '138-133=5', '9*5=45']\nExploring Operation: 83-45=38, Resulting Numbers: [38]\n38,38 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            74,
            88,
            7,
            12,
            48,
            99
        ],
        "target": 57,
        "solution": [
            "74+88=162",
            "12-7=5",
            "48+162=210",
            "210/5=42",
            "99-42=57"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 57:[74, 88, 7, 12, 48, 99], Operations: []\nExploring Operation: 74+88=162, Resulting Numbers: [7, 12, 48, 99, 162]\nGenerated Node #2: [7, 12, 48, 99, 162] from Operation: 74+88=162\nCurrent State: 57:[7, 12, 48, 99, 162], Operations: ['74+88=162']\nExploring Operation: 12-7=5, Resulting Numbers: [48, 99, 162, 5]\nGenerated Node #3: [48, 99, 162, 5] from Operation: 12-7=5\nCurrent State: 57:[48, 99, 162, 5], Operations: ['74+88=162', '12-7=5']\nExploring Operation: 48+162=210, Resulting Numbers: [99, 5, 210]\nGenerated Node #4: [99, 5, 210] from Operation: 48+162=210\nCurrent State: 57:[99, 5, 210], Operations: ['74+88=162', '12-7=5', '48+162=210']\nExploring Operation: 210/5=42, Resulting Numbers: [99, 42]\nGenerated Node #5: [99, 42] from Operation: 210/5=42\nCurrent State: 57:[99, 42], Operations: ['74+88=162', '12-7=5', '48+162=210', '210/5=42']\nExploring Operation: 99-42=57, Resulting Numbers: [57]\n57,57 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            40,
            39,
            51,
            5,
            76,
            35
        ],
        "target": 89,
        "solution": [
            "40+39=79",
            "76+35=111",
            "79+111=190",
            "190/5=38",
            "51+38=89"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 89:[40, 39, 51, 5, 76, 35], Operations: []\nExploring Operation: 40+39=79, Resulting Numbers: [51, 5, 76, 35, 79]\nGenerated Node #2: [51, 5, 76, 35, 79] from Operation: 40+39=79\nCurrent State: 89:[51, 5, 76, 35, 79], Operations: ['40+39=79']\nExploring Operation: 76+35=111, Resulting Numbers: [51, 5, 79, 111]\nGenerated Node #3: [51, 5, 79, 111] from Operation: 76+35=111\nCurrent State: 89:[51, 5, 79, 111], Operations: ['40+39=79', '76+35=111']\nExploring Operation: 79+111=190, Resulting Numbers: [51, 5, 190]\nGenerated Node #4: [51, 5, 190] from Operation: 79+111=190\nCurrent State: 89:[51, 5, 190], Operations: ['40+39=79', '76+35=111', '79+111=190']\nExploring Operation: 190/5=38, Resulting Numbers: [51, 38]\nGenerated Node #5: [51, 38] from Operation: 190/5=38\nCurrent State: 89:[51, 38], Operations: ['40+39=79', '76+35=111', '79+111=190', '190/5=38']\nExploring Operation: 51+38=89, Resulting Numbers: [89]\n89,89 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            24,
            77,
            46,
            78,
            32,
            91
        ],
        "target": 15,
        "solution": [
            "77-24=53",
            "91-53=38",
            "32*38=1216",
            "1216-46=1170",
            "1170/78=15"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 15:[24, 77, 46, 78, 32, 91], Operations: []\nExploring Operation: 77-24=53, Resulting Numbers: [46, 78, 32, 91, 53]\nGenerated Node #2: [46, 78, 32, 91, 53] from Operation: 77-24=53\nCurrent State: 15:[46, 78, 32, 91, 53], Operations: ['77-24=53']\nExploring Operation: 91-53=38, Resulting Numbers: [46, 78, 32, 38]\nGenerated Node #3: [46, 78, 32, 38] from Operation: 91-53=38\nCurrent State: 15:[46, 78, 32, 38], Operations: ['77-24=53', '91-53=38']\nExploring Operation: 32*38=1216, Resulting Numbers: [46, 78, 1216]\nGenerated Node #4: [46, 78, 1216] from Operation: 32*38=1216\nCurrent State: 15:[46, 78, 1216], Operations: ['77-24=53', '91-53=38', '32*38=1216']\nExploring Operation: 1216-46=1170, Resulting Numbers: [78, 1170]\nGenerated Node #5: [78, 1170] from Operation: 1216-46=1170\nCurrent State: 15:[78, 1170], Operations: ['77-24=53', '91-53=38', '32*38=1216', '1216-46=1170']\nExploring Operation: 1170/78=15, Resulting Numbers: [15]\n15,15 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            53,
            52,
            70,
            8,
            96,
            58
        ],
        "target": 25,
        "solution": [
            "53+52=105",
            "70+58=128",
            "128/8=16",
            "105-96=9",
            "16+9=25"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 25:[53, 52, 70, 8, 96, 58], Operations: []\nExploring Operation: 53+52=105, Resulting Numbers: [70, 8, 96, 58, 105]\nGenerated Node #2: [70, 8, 96, 58, 105] from Operation: 53+52=105\nCurrent State: 25:[70, 8, 96, 58, 105], Operations: ['53+52=105']\nExploring Operation: 70+58=128, Resulting Numbers: [8, 96, 105, 128]\nGenerated Node #3: [8, 96, 105, 128] from Operation: 70+58=128\nCurrent State: 25:[8, 96, 105, 128], Operations: ['53+52=105', '70+58=128']\nExploring Operation: 128/8=16, Resulting Numbers: [96, 105, 16]\nGenerated Node #4: [96, 105, 16] from Operation: 128/8=16\nCurrent State: 25:[96, 105, 16], Operations: ['53+52=105', '70+58=128', '128/8=16']\nExploring Operation: 105-96=9, Resulting Numbers: [16, 9]\nGenerated Node #5: [16, 9] from Operation: 105-96=9\nCurrent State: 25:[16, 9], Operations: ['53+52=105', '70+58=128', '128/8=16', '105-96=9']\nExploring Operation: 16+9=25, Resulting Numbers: [25]\n25,25 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            94,
            95,
            39,
            40,
            67,
            50
        ],
        "target": 75,
        "solution": [
            "95-94=1",
            "39*50=1950",
            "67-40=27",
            "27-1=26",
            "1950/26=75"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 75:[94, 95, 39, 40, 67, 50], Operations: []\nExploring Operation: 95-94=1, Resulting Numbers: [39, 40, 67, 50, 1]\nGenerated Node #2: [39, 40, 67, 50, 1] from Operation: 95-94=1\nCurrent State: 75:[39, 40, 67, 50, 1], Operations: ['95-94=1']\nExploring Operation: 39*50=1950, Resulting Numbers: [40, 67, 1, 1950]\nGenerated Node #3: [40, 67, 1, 1950] from Operation: 39*50=1950\nCurrent State: 75:[40, 67, 1, 1950], Operations: ['95-94=1', '39*50=1950']\nExploring Operation: 67-40=27, Resulting Numbers: [1, 1950, 27]\nGenerated Node #4: [1, 1950, 27] from Operation: 67-40=27\nCurrent State: 75:[1, 1950, 27], Operations: ['95-94=1', '39*50=1950', '67-40=27']\nExploring Operation: 27-1=26, Resulting Numbers: [1950, 26]\nGenerated Node #5: [1950, 26] from Operation: 27-1=26\nCurrent State: 75:[1950, 26], Operations: ['95-94=1', '39*50=1950', '67-40=27', '27-1=26']\nExploring Operation: 1950/26=75, Resulting Numbers: [75]\n75,75 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            26,
            98,
            51,
            50,
            56,
            82
        ],
        "target": 82,
        "solution": [
            "26*98=2548",
            "82-51=31",
            "56-50=6",
            "2548-6=2542",
            "2542/31=82"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 82:[26, 98, 51, 50, 56, 82], Operations: []\nExploring Operation: 26*98=2548, Resulting Numbers: [51, 50, 56, 82, 2548]\nGenerated Node #2: [51, 50, 56, 82, 2548] from Operation: 26*98=2548\nCurrent State: 82:[51, 50, 56, 82, 2548], Operations: ['26*98=2548']\nExploring Operation: 82-51=31, Resulting Numbers: [50, 56, 2548, 31]\nGenerated Node #3: [50, 56, 2548, 31] from Operation: 82-51=31\nCurrent State: 82:[50, 56, 2548, 31], Operations: ['26*98=2548', '82-51=31']\nExploring Operation: 56-50=6, Resulting Numbers: [2548, 31, 6]\nGenerated Node #4: [2548, 31, 6] from Operation: 56-50=6\nCurrent State: 82:[2548, 31, 6], Operations: ['26*98=2548', '82-51=31', '56-50=6']\nExploring Operation: 2548-6=2542, Resulting Numbers: [31, 2542]\nGenerated Node #5: [31, 2542] from Operation: 2548-6=2542\nCurrent State: 82:[31, 2542], Operations: ['26*98=2548', '82-51=31', '56-50=6', '2548-6=2542']\nExploring Operation: 2542/31=82, Resulting Numbers: [82]\n82,82 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            43,
            93,
            27,
            40,
            70,
            15
        ],
        "target": 89,
        "solution": [
            "43+27=70",
            "40*70=2800",
            "2800-70=2730",
            "2730/15=182",
            "182-93=89"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 89:[43, 93, 27, 40, 70, 15], Operations: []\nExploring Operation: 43+27=70, Resulting Numbers: [93, 40, 70, 15, 70]\nGenerated Node #2: [93, 40, 70, 15, 70] from Operation: 43+27=70\nCurrent State: 89:[93, 40, 70, 15, 70], Operations: ['43+27=70']\nExploring Operation: 40*70=2800, Resulting Numbers: [93, 15, 2800]\nGenerated Node #3: [93, 15, 2800] from Operation: 40*70=2800\nCurrent State: 89:[93, 15, 2800], Operations: ['43+27=70', '40*70=2800']\nExploring Operation: 2800-70=2730, Resulting Numbers: [93, 15, 2730]\nGenerated Node #4: [93, 15, 2730] from Operation: 2800-70=2730\nCurrent State: 89:[93, 15, 2730], Operations: ['43+27=70', '40*70=2800', '2800-70=2730']\nExploring Operation: 2730/15=182, Resulting Numbers: [93, 182]\nGenerated Node #5: [93, 182] from Operation: 2730/15=182\nCurrent State: 89:[93, 182], Operations: ['43+27=70', '40*70=2800', '2800-70=2730', '2730/15=182']\nExploring Operation: 182-93=89, Resulting Numbers: [89]\n89,89 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            6,
            12,
            17,
            51,
            50,
            77
        ],
        "target": 72,
        "solution": [
            "12/6=2",
            "51+50=101",
            "77+101=178",
            "178/2=89",
            "89-17=72"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 72:[6, 12, 17, 51, 50, 77], Operations: []\nExploring Operation: 12/6=2, Resulting Numbers: [17, 51, 50, 77, 2]\nGenerated Node #2: [17, 51, 50, 77, 2] from Operation: 12/6=2\nCurrent State: 72:[17, 51, 50, 77, 2], Operations: ['12/6=2']\nExploring Operation: 51+50=101, Resulting Numbers: [17, 77, 2, 101]\nGenerated Node #3: [17, 77, 2, 101] from Operation: 51+50=101\nCurrent State: 72:[17, 77, 2, 101], Operations: ['12/6=2', '51+50=101']\nExploring Operation: 77+101=178, Resulting Numbers: [17, 2, 178]\nGenerated Node #4: [17, 2, 178] from Operation: 77+101=178\nCurrent State: 72:[17, 2, 178], Operations: ['12/6=2', '51+50=101', '77+101=178']\nExploring Operation: 178/2=89, Resulting Numbers: [17, 89]\nGenerated Node #5: [17, 89] from Operation: 178/2=89\nCurrent State: 72:[17, 89], Operations: ['12/6=2', '51+50=101', '77+101=178', '178/2=89']\nExploring Operation: 89-17=72, Resulting Numbers: [72]\n72,72 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            85,
            45,
            13,
            56,
            56,
            32
        ],
        "target": 78,
        "solution": [
            "45-13=32",
            "56-32=24",
            "32-24=8",
            "56/8=7",
            "85-7=78"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 78:[85, 45, 13, 56, 56, 32], Operations: []\nExploring Operation: 45-13=32, Resulting Numbers: [85, 56, 56, 32, 32]\nGenerated Node #2: [85, 56, 56, 32, 32] from Operation: 45-13=32\nCurrent State: 78:[85, 56, 56, 32, 32], Operations: ['45-13=32']\nExploring Operation: 56-32=24, Resulting Numbers: [85, 24]\nGenerated Node #3: [85, 24] from Operation: 56-32=24\nCurrent State: 78:[85, 24], Operations: ['45-13=32', '56-32=24']\nExploring Operation: 32-24=8, Resulting Numbers: [85, 8]\nGenerated Node #4: [85, 8] from Operation: 32-24=8\nCurrent State: 78:[85, 8], Operations: ['45-13=32', '56-32=24', '32-24=8']\nExploring Operation: 56/8=7, Resulting Numbers: [85, 7]\nGenerated Node #5: [85, 7] from Operation: 56/8=7\nCurrent State: 78:[85, 7], Operations: ['45-13=32', '56-32=24', '32-24=8', '56/8=7']\nExploring Operation: 85-7=78, Resulting Numbers: [78]\n78,78 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            51,
            91,
            77,
            31,
            60,
            26
        ],
        "target": 93,
        "solution": [
            "91-51=40",
            "77-60=17",
            "40-26=14",
            "17-14=3",
            "31*3=93"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 93:[51, 91, 77, 31, 60, 26], Operations: []\nExploring Operation: 91-51=40, Resulting Numbers: [77, 31, 60, 26, 40]\nGenerated Node #2: [77, 31, 60, 26, 40] from Operation: 91-51=40\nCurrent State: 93:[77, 31, 60, 26, 40], Operations: ['91-51=40']\nExploring Operation: 77-60=17, Resulting Numbers: [31, 26, 40, 17]\nGenerated Node #3: [31, 26, 40, 17] from Operation: 77-60=17\nCurrent State: 93:[31, 26, 40, 17], Operations: ['91-51=40', '77-60=17']\nExploring Operation: 40-26=14, Resulting Numbers: [31, 17, 14]\nGenerated Node #4: [31, 17, 14] from Operation: 40-26=14\nCurrent State: 93:[31, 17, 14], Operations: ['91-51=40', '77-60=17', '40-26=14']\nExploring Operation: 17-14=3, Resulting Numbers: [31, 3]\nGenerated Node #5: [31, 3] from Operation: 17-14=3\nCurrent State: 93:[31, 3], Operations: ['91-51=40', '77-60=17', '40-26=14', '17-14=3']\nExploring Operation: 31*3=93, Resulting Numbers: [93]\n93,93 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            14,
            55,
            78,
            46,
            73,
            58
        ],
        "target": 58,
        "solution": [
            "55-14=41",
            "78-46=32",
            "73+58=131",
            "41+32=73",
            "131-73=58"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 58:[14, 55, 78, 46, 73, 58], Operations: []\nExploring Operation: 55-14=41, Resulting Numbers: [78, 46, 73, 58, 41]\nGenerated Node #2: [78, 46, 73, 58, 41] from Operation: 55-14=41\nCurrent State: 58:[78, 46, 73, 58, 41], Operations: ['55-14=41']\nExploring Operation: 78-46=32, Resulting Numbers: [73, 58, 41, 32]\nGenerated Node #3: [73, 58, 41, 32] from Operation: 78-46=32\nCurrent State: 58:[73, 58, 41, 32], Operations: ['55-14=41', '78-46=32']\nExploring Operation: 73+58=131, Resulting Numbers: [41, 32, 131]\nGenerated Node #4: [41, 32, 131] from Operation: 73+58=131\nCurrent State: 58:[41, 32, 131], Operations: ['55-14=41', '78-46=32', '73+58=131']\nExploring Operation: 41+32=73, Resulting Numbers: [131, 73]\nGenerated Node #5: [131, 73] from Operation: 41+32=73\nCurrent State: 58:[131, 73], Operations: ['55-14=41', '78-46=32', '73+58=131', '41+32=73']\nExploring Operation: 131-73=58, Resulting Numbers: [58]\n58,58 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            64,
            55,
            5,
            39,
            43,
            95
        ],
        "target": 63,
        "solution": [
            "64+55=119",
            "5+39=44",
            "43+95=138",
            "119-44=75",
            "138-75=63"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 63:[64, 55, 5, 39, 43, 95], Operations: []\nExploring Operation: 64+55=119, Resulting Numbers: [5, 39, 43, 95, 119]\nGenerated Node #2: [5, 39, 43, 95, 119] from Operation: 64+55=119\nCurrent State: 63:[5, 39, 43, 95, 119], Operations: ['64+55=119']\nExploring Operation: 5+39=44, Resulting Numbers: [43, 95, 119, 44]\nGenerated Node #3: [43, 95, 119, 44] from Operation: 5+39=44\nCurrent State: 63:[43, 95, 119, 44], Operations: ['64+55=119', '5+39=44']\nExploring Operation: 43+95=138, Resulting Numbers: [119, 44, 138]\nGenerated Node #4: [119, 44, 138] from Operation: 43+95=138\nCurrent State: 63:[119, 44, 138], Operations: ['64+55=119', '5+39=44', '43+95=138']\nExploring Operation: 119-44=75, Resulting Numbers: [138, 75]\nGenerated Node #5: [138, 75] from Operation: 119-44=75\nCurrent State: 63:[138, 75], Operations: ['64+55=119', '5+39=44', '43+95=138', '119-44=75']\nExploring Operation: 138-75=63, Resulting Numbers: [63]\n63,63 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            47,
            13,
            41,
            20,
            34,
            23
        ],
        "target": 26,
        "solution": [
            "47+13=60",
            "60-41=19",
            "20*23=460",
            "34+460=494",
            "494/19=26"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 26:[47, 13, 41, 20, 34, 23], Operations: []\nExploring Operation: 47+13=60, Resulting Numbers: [41, 20, 34, 23, 60]\nGenerated Node #2: [41, 20, 34, 23, 60] from Operation: 47+13=60\nCurrent State: 26:[41, 20, 34, 23, 60], Operations: ['47+13=60']\nExploring Operation: 60-41=19, Resulting Numbers: [20, 34, 23, 19]\nGenerated Node #3: [20, 34, 23, 19] from Operation: 60-41=19\nCurrent State: 26:[20, 34, 23, 19], Operations: ['47+13=60', '60-41=19']\nExploring Operation: 20*23=460, Resulting Numbers: [34, 19, 460]\nGenerated Node #4: [34, 19, 460] from Operation: 20*23=460\nCurrent State: 26:[34, 19, 460], Operations: ['47+13=60', '60-41=19', '20*23=460']\nExploring Operation: 34+460=494, Resulting Numbers: [19, 494]\nGenerated Node #5: [19, 494] from Operation: 34+460=494\nCurrent State: 26:[19, 494], Operations: ['47+13=60', '60-41=19', '20*23=460', '34+460=494']\nExploring Operation: 494/19=26, Resulting Numbers: [26]\n26,26 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            39,
            43,
            39,
            78,
            20,
            63
        ],
        "target": 32,
        "solution": [
            "39+43=82",
            "78/39=2",
            "82-20=62",
            "62/2=31",
            "63-31=32"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 32:[39, 43, 39, 78, 20, 63], Operations: []\nExploring Operation: 39+43=82, Resulting Numbers: [78, 20, 63, 82]\nGenerated Node #2: [78, 20, 63, 82] from Operation: 39+43=82\nCurrent State: 32:[78, 20, 63, 82], Operations: ['39+43=82']\nExploring Operation: 78/39=2, Resulting Numbers: [20, 63, 82, 2]\nGenerated Node #3: [20, 63, 82, 2] from Operation: 78/39=2\nCurrent State: 32:[20, 63, 82, 2], Operations: ['39+43=82', '78/39=2']\nExploring Operation: 82-20=62, Resulting Numbers: [63, 2, 62]\nGenerated Node #4: [63, 2, 62] from Operation: 82-20=62\nCurrent State: 32:[63, 2, 62], Operations: ['39+43=82', '78/39=2', '82-20=62']\nExploring Operation: 62/2=31, Resulting Numbers: [63, 31]\nGenerated Node #5: [63, 31] from Operation: 62/2=31\nCurrent State: 32:[63, 31], Operations: ['39+43=82', '78/39=2', '82-20=62', '62/2=31']\nExploring Operation: 63-31=32, Resulting Numbers: [32]\n32,32 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            85,
            6,
            17,
            77,
            3,
            51
        ],
        "target": 26,
        "solution": [
            "85+6=91",
            "17+77=94",
            "91-51=40",
            "3*40=120",
            "120-94=26"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 26:[85, 6, 17, 77, 3, 51], Operations: []\nExploring Operation: 85+6=91, Resulting Numbers: [17, 77, 3, 51, 91]\nGenerated Node #2: [17, 77, 3, 51, 91] from Operation: 85+6=91\nCurrent State: 26:[17, 77, 3, 51, 91], Operations: ['85+6=91']\nExploring Operation: 17+77=94, Resulting Numbers: [3, 51, 91, 94]\nGenerated Node #3: [3, 51, 91, 94] from Operation: 17+77=94\nCurrent State: 26:[3, 51, 91, 94], Operations: ['85+6=91', '17+77=94']\nExploring Operation: 91-51=40, Resulting Numbers: [3, 94, 40]\nGenerated Node #4: [3, 94, 40] from Operation: 91-51=40\nCurrent State: 26:[3, 94, 40], Operations: ['85+6=91', '17+77=94', '91-51=40']\nExploring Operation: 3*40=120, Resulting Numbers: [94, 120]\nGenerated Node #5: [94, 120] from Operation: 3*40=120\nCurrent State: 26:[94, 120], Operations: ['85+6=91', '17+77=94', '91-51=40', '3*40=120']\nExploring Operation: 120-94=26, Resulting Numbers: [26]\n26,26 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            49,
            82,
            6,
            38,
            71,
            56
        ],
        "target": 95,
        "solution": [
            "82-49=33",
            "38-33=5",
            "71-56=15",
            "6*15=90",
            "5+90=95"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 95:[49, 82, 6, 38, 71, 56], Operations: []\nExploring Operation: 82-49=33, Resulting Numbers: [6, 38, 71, 56, 33]\nGenerated Node #2: [6, 38, 71, 56, 33] from Operation: 82-49=33\nCurrent State: 95:[6, 38, 71, 56, 33], Operations: ['82-49=33']\nExploring Operation: 38-33=5, Resulting Numbers: [6, 71, 56, 5]\nGenerated Node #3: [6, 71, 56, 5] from Operation: 38-33=5\nCurrent State: 95:[6, 71, 56, 5], Operations: ['82-49=33', '38-33=5']\nExploring Operation: 71-56=15, Resulting Numbers: [6, 5, 15]\nGenerated Node #4: [6, 5, 15] from Operation: 71-56=15\nCurrent State: 95:[6, 5, 15], Operations: ['82-49=33', '38-33=5', '71-56=15']\nExploring Operation: 6*15=90, Resulting Numbers: [5, 90]\nGenerated Node #5: [5, 90] from Operation: 6*15=90\nCurrent State: 95:[5, 90], Operations: ['82-49=33', '38-33=5', '71-56=15', '6*15=90']\nExploring Operation: 5+90=95, Resulting Numbers: [95]\n95,95 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            81,
            78,
            4,
            45,
            45,
            99
        ],
        "target": 55,
        "solution": [
            "81+78=159",
            "4+99=103",
            "45/45=1",
            "159-103=56",
            "56-1=55"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 55:[81, 78, 4, 45, 45, 99], Operations: []\nExploring Operation: 81+78=159, Resulting Numbers: [4, 45, 45, 99, 159]\nGenerated Node #2: [4, 45, 45, 99, 159] from Operation: 81+78=159\nCurrent State: 55:[4, 45, 45, 99, 159], Operations: ['81+78=159']\nExploring Operation: 4+99=103, Resulting Numbers: [45, 45, 159, 103]\nGenerated Node #3: [45, 45, 159, 103] from Operation: 4+99=103\nCurrent State: 55:[45, 45, 159, 103], Operations: ['81+78=159', '4+99=103']\nExploring Operation: 45/45=1, Resulting Numbers: [159, 103, 1]\nGenerated Node #4: [159, 103, 1] from Operation: 45/45=1\nCurrent State: 55:[159, 103, 1], Operations: ['81+78=159', '4+99=103', '45/45=1']\nExploring Operation: 159-103=56, Resulting Numbers: [1, 56]\nGenerated Node #5: [1, 56] from Operation: 159-103=56\nCurrent State: 55:[1, 56], Operations: ['81+78=159', '4+99=103', '45/45=1', '159-103=56']\nExploring Operation: 56-1=55, Resulting Numbers: [55]\n55,55 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            87,
            96,
            90,
            90,
            50,
            7
        ],
        "target": 41,
        "solution": [
            "96-87=9",
            "90-90=0",
            "50-9=41",
            "7*0=0",
            "41+0=41"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 41:[87, 96, 90, 90, 50, 7], Operations: []\nExploring Operation: 96-87=9, Resulting Numbers: [90, 90, 50, 7, 9]\nGenerated Node #2: [90, 90, 50, 7, 9] from Operation: 96-87=9\nCurrent State: 41:[90, 90, 50, 7, 9], Operations: ['96-87=9']\nExploring Operation: 90-90=0, Resulting Numbers: [50, 7, 9, 0]\nGenerated Node #3: [50, 7, 9, 0] from Operation: 90-90=0\nCurrent State: 41:[50, 7, 9, 0], Operations: ['96-87=9', '90-90=0']\nExploring Operation: 50-9=41, Resulting Numbers: [7, 0, 41]\nGenerated Node #4: [7, 0, 41] from Operation: 50-9=41\nCurrent State: 41:[7, 0, 41], Operations: ['96-87=9', '90-90=0', '50-9=41']\nExploring Operation: 7*0=0, Resulting Numbers: [41, 0]\nGenerated Node #5: [41, 0] from Operation: 7*0=0\nCurrent State: 41:[41, 0], Operations: ['96-87=9', '90-90=0', '50-9=41', '7*0=0']\nExploring Operation: 41+0=41, Resulting Numbers: [41]\n41,41 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            4,
            49,
            43,
            34,
            46,
            76
        ],
        "target": 83,
        "solution": [
            "4+49=53",
            "34+46=80",
            "76+53=129",
            "129/43=3",
            "80+3=83"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 83:[4, 49, 43, 34, 46, 76], Operations: []\nExploring Operation: 4+49=53, Resulting Numbers: [43, 34, 46, 76, 53]\nGenerated Node #2: [43, 34, 46, 76, 53] from Operation: 4+49=53\nCurrent State: 83:[43, 34, 46, 76, 53], Operations: ['4+49=53']\nExploring Operation: 34+46=80, Resulting Numbers: [43, 76, 53, 80]\nGenerated Node #3: [43, 76, 53, 80] from Operation: 34+46=80\nCurrent State: 83:[43, 76, 53, 80], Operations: ['4+49=53', '34+46=80']\nExploring Operation: 76+53=129, Resulting Numbers: [43, 80, 129]\nGenerated Node #4: [43, 80, 129] from Operation: 76+53=129\nCurrent State: 83:[43, 80, 129], Operations: ['4+49=53', '34+46=80', '76+53=129']\nExploring Operation: 129/43=3, Resulting Numbers: [80, 3]\nGenerated Node #5: [80, 3] from Operation: 129/43=3\nCurrent State: 83:[80, 3], Operations: ['4+49=53', '34+46=80', '76+53=129', '129/43=3']\nExploring Operation: 80+3=83, Resulting Numbers: [83]\n83,83 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            28,
            69,
            52,
            10,
            17,
            53
        ],
        "target": 79,
        "solution": [
            "69-28=41",
            "52*17=884",
            "53+41=94",
            "884-94=790",
            "790/10=79"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 79:[28, 69, 52, 10, 17, 53], Operations: []\nExploring Operation: 69-28=41, Resulting Numbers: [52, 10, 17, 53, 41]\nGenerated Node #2: [52, 10, 17, 53, 41] from Operation: 69-28=41\nCurrent State: 79:[52, 10, 17, 53, 41], Operations: ['69-28=41']\nExploring Operation: 52*17=884, Resulting Numbers: [10, 53, 41, 884]\nGenerated Node #3: [10, 53, 41, 884] from Operation: 52*17=884\nCurrent State: 79:[10, 53, 41, 884], Operations: ['69-28=41', '52*17=884']\nExploring Operation: 53+41=94, Resulting Numbers: [10, 884, 94]\nGenerated Node #4: [10, 884, 94] from Operation: 53+41=94\nCurrent State: 79:[10, 884, 94], Operations: ['69-28=41', '52*17=884', '53+41=94']\nExploring Operation: 884-94=790, Resulting Numbers: [10, 790]\nGenerated Node #5: [10, 790] from Operation: 884-94=790\nCurrent State: 79:[10, 790], Operations: ['69-28=41', '52*17=884', '53+41=94', '884-94=790']\nExploring Operation: 790/10=79, Resulting Numbers: [79]\n79,79 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            3,
            36,
            58,
            15,
            33,
            18
        ],
        "target": 58,
        "solution": [
            "3+36=39",
            "33-15=18",
            "18-18=0",
            "39*0=0",
            "58+0=58"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 58:[3, 36, 58, 15, 33, 18], Operations: []\nExploring Operation: 3+36=39, Resulting Numbers: [58, 15, 33, 18, 39]\nGenerated Node #2: [58, 15, 33, 18, 39] from Operation: 3+36=39\nCurrent State: 58:[58, 15, 33, 18, 39], Operations: ['3+36=39']\nExploring Operation: 33-15=18, Resulting Numbers: [58, 18, 39, 18]\nGenerated Node #3: [58, 18, 39, 18] from Operation: 33-15=18\nCurrent State: 58:[58, 18, 39, 18], Operations: ['3+36=39', '33-15=18']\nExploring Operation: 18-18=0, Resulting Numbers: [58, 39, 0]\nGenerated Node #4: [58, 39, 0] from Operation: 18-18=0\nCurrent State: 58:[58, 39, 0], Operations: ['3+36=39', '33-15=18', '18-18=0']\nExploring Operation: 39*0=0, Resulting Numbers: [58, 0]\nGenerated Node #5: [58, 0] from Operation: 39*0=0\nCurrent State: 58:[58, 0], Operations: ['3+36=39', '33-15=18', '18-18=0', '39*0=0']\nExploring Operation: 58+0=58, Resulting Numbers: [58]\n58,58 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            32,
            21,
            84,
            84,
            14,
            15
        ],
        "target": 66,
        "solution": [
            "32-21=11",
            "84/14=6",
            "84+6=90",
            "90/15=6",
            "11*6=66"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 66:[32, 21, 84, 84, 14, 15], Operations: []\nExploring Operation: 32-21=11, Resulting Numbers: [84, 84, 14, 15, 11]\nGenerated Node #2: [84, 84, 14, 15, 11] from Operation: 32-21=11\nCurrent State: 66:[84, 84, 14, 15, 11], Operations: ['32-21=11']\nExploring Operation: 84/14=6, Resulting Numbers: [15, 11, 6]\nGenerated Node #3: [15, 11, 6] from Operation: 84/14=6\nCurrent State: 66:[15, 11, 6], Operations: ['32-21=11', '84/14=6']\nExploring Operation: 84+6=90, Resulting Numbers: [15, 11, 90]\nGenerated Node #4: [15, 11, 90] from Operation: 84+6=90\nCurrent State: 66:[15, 11, 90], Operations: ['32-21=11', '84/14=6', '84+6=90']\nExploring Operation: 90/15=6, Resulting Numbers: [11, 6]\nGenerated Node #5: [11, 6] from Operation: 90/15=6\nCurrent State: 66:[11, 6], Operations: ['32-21=11', '84/14=6', '84+6=90', '90/15=6']\nExploring Operation: 11*6=66, Resulting Numbers: [66]\n66,66 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            57,
            10,
            37,
            81,
            85,
            20
        ],
        "target": 47,
        "solution": [
            "57+37=94",
            "20/10=2",
            "85-81=4",
            "94*2=188",
            "188/4=47"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 47:[57, 10, 37, 81, 85, 20], Operations: []\nExploring Operation: 57+37=94, Resulting Numbers: [10, 81, 85, 20, 94]\nGenerated Node #2: [10, 81, 85, 20, 94] from Operation: 57+37=94\nCurrent State: 47:[10, 81, 85, 20, 94], Operations: ['57+37=94']\nExploring Operation: 20/10=2, Resulting Numbers: [81, 85, 94, 2]\nGenerated Node #3: [81, 85, 94, 2] from Operation: 20/10=2\nCurrent State: 47:[81, 85, 94, 2], Operations: ['57+37=94', '20/10=2']\nExploring Operation: 85-81=4, Resulting Numbers: [94, 2, 4]\nGenerated Node #4: [94, 2, 4] from Operation: 85-81=4\nCurrent State: 47:[94, 2, 4], Operations: ['57+37=94', '20/10=2', '85-81=4']\nExploring Operation: 94*2=188, Resulting Numbers: [4, 188]\nGenerated Node #5: [4, 188] from Operation: 94*2=188\nCurrent State: 47:[4, 188], Operations: ['57+37=94', '20/10=2', '85-81=4', '94*2=188']\nExploring Operation: 188/4=47, Resulting Numbers: [47]\n47,47 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            16,
            67,
            25,
            5,
            51,
            57
        ],
        "target": 43,
        "solution": [
            "16*67=1072",
            "51-5=46",
            "1072-46=1026",
            "1026/57=18",
            "25+18=43"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 43:[16, 67, 25, 5, 51, 57], Operations: []\nExploring Operation: 16*67=1072, Resulting Numbers: [25, 5, 51, 57, 1072]\nGenerated Node #2: [25, 5, 51, 57, 1072] from Operation: 16*67=1072\nCurrent State: 43:[25, 5, 51, 57, 1072], Operations: ['16*67=1072']\nExploring Operation: 51-5=46, Resulting Numbers: [25, 57, 1072, 46]\nGenerated Node #3: [25, 57, 1072, 46] from Operation: 51-5=46\nCurrent State: 43:[25, 57, 1072, 46], Operations: ['16*67=1072', '51-5=46']\nExploring Operation: 1072-46=1026, Resulting Numbers: [25, 57, 1026]\nGenerated Node #4: [25, 57, 1026] from Operation: 1072-46=1026\nCurrent State: 43:[25, 57, 1026], Operations: ['16*67=1072', '51-5=46', '1072-46=1026']\nExploring Operation: 1026/57=18, Resulting Numbers: [25, 18]\nGenerated Node #5: [25, 18] from Operation: 1026/57=18\nCurrent State: 43:[25, 18], Operations: ['16*67=1072', '51-5=46', '1072-46=1026', '1026/57=18']\nExploring Operation: 25+18=43, Resulting Numbers: [43]\n43,43 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            8,
            42,
            40,
            86,
            25,
            99
        ],
        "target": 11,
        "solution": [
            "8+42=50",
            "40+86=126",
            "99+50=149",
            "126+149=275",
            "275/25=11"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 11:[8, 42, 40, 86, 25, 99], Operations: []\nExploring Operation: 8+42=50, Resulting Numbers: [40, 86, 25, 99, 50]\nGenerated Node #2: [40, 86, 25, 99, 50] from Operation: 8+42=50\nCurrent State: 11:[40, 86, 25, 99, 50], Operations: ['8+42=50']\nExploring Operation: 40+86=126, Resulting Numbers: [25, 99, 50, 126]\nGenerated Node #3: [25, 99, 50, 126] from Operation: 40+86=126\nCurrent State: 11:[25, 99, 50, 126], Operations: ['8+42=50', '40+86=126']\nExploring Operation: 99+50=149, Resulting Numbers: [25, 126, 149]\nGenerated Node #4: [25, 126, 149] from Operation: 99+50=149\nCurrent State: 11:[25, 126, 149], Operations: ['8+42=50', '40+86=126', '99+50=149']\nExploring Operation: 126+149=275, Resulting Numbers: [25, 275]\nGenerated Node #5: [25, 275] from Operation: 126+149=275\nCurrent State: 11:[25, 275], Operations: ['8+42=50', '40+86=126', '99+50=149', '126+149=275']\nExploring Operation: 275/25=11, Resulting Numbers: [11]\n11,11 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            98,
            1,
            47,
            18,
            4,
            57
        ],
        "target": 73,
        "solution": [
            "98*1=98",
            "18+57=75",
            "98-4=94",
            "94/47=2",
            "75-2=73"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 73:[98, 1, 47, 18, 4, 57], Operations: []\nExploring Operation: 98*1=98, Resulting Numbers: [47, 18, 4, 57, 98]\nGenerated Node #2: [47, 18, 4, 57, 98] from Operation: 98*1=98\nCurrent State: 73:[47, 18, 4, 57, 98], Operations: ['98*1=98']\nExploring Operation: 18+57=75, Resulting Numbers: [47, 4, 98, 75]\nGenerated Node #3: [47, 4, 98, 75] from Operation: 18+57=75\nCurrent State: 73:[47, 4, 98, 75], Operations: ['98*1=98', '18+57=75']\nExploring Operation: 98-4=94, Resulting Numbers: [47, 75, 94]\nGenerated Node #4: [47, 75, 94] from Operation: 98-4=94\nCurrent State: 73:[47, 75, 94], Operations: ['98*1=98', '18+57=75', '98-4=94']\nExploring Operation: 94/47=2, Resulting Numbers: [75, 2]\nGenerated Node #5: [75, 2] from Operation: 94/47=2\nCurrent State: 73:[75, 2], Operations: ['98*1=98', '18+57=75', '98-4=94', '94/47=2']\nExploring Operation: 75-2=73, Resulting Numbers: [73]\n73,73 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            30,
            93,
            54,
            91,
            21,
            32
        ],
        "target": 85,
        "solution": [
            "93-30=63",
            "54*91=4914",
            "63-21=42",
            "4914/42=117",
            "117-32=85"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 85:[30, 93, 54, 91, 21, 32], Operations: []\nExploring Operation: 93-30=63, Resulting Numbers: [54, 91, 21, 32, 63]\nGenerated Node #2: [54, 91, 21, 32, 63] from Operation: 93-30=63\nCurrent State: 85:[54, 91, 21, 32, 63], Operations: ['93-30=63']\nExploring Operation: 54*91=4914, Resulting Numbers: [21, 32, 63, 4914]\nGenerated Node #3: [21, 32, 63, 4914] from Operation: 54*91=4914\nCurrent State: 85:[21, 32, 63, 4914], Operations: ['93-30=63', '54*91=4914']\nExploring Operation: 63-21=42, Resulting Numbers: [32, 4914, 42]\nGenerated Node #4: [32, 4914, 42] from Operation: 63-21=42\nCurrent State: 85:[32, 4914, 42], Operations: ['93-30=63', '54*91=4914', '63-21=42']\nExploring Operation: 4914/42=117, Resulting Numbers: [32, 117]\nGenerated Node #5: [32, 117] from Operation: 4914/42=117\nCurrent State: 85:[32, 117], Operations: ['93-30=63', '54*91=4914', '63-21=42', '4914/42=117']\nExploring Operation: 117-32=85, Resulting Numbers: [85]\n85,85 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            41,
            86,
            57,
            30,
            84,
            82
        ],
        "target": 23,
        "solution": [
            "41+86=127",
            "57+82=139",
            "139-127=12",
            "84/12=7",
            "30-7=23"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 23:[41, 86, 57, 30, 84, 82], Operations: []\nExploring Operation: 41+86=127, Resulting Numbers: [57, 30, 84, 82, 127]\nGenerated Node #2: [57, 30, 84, 82, 127] from Operation: 41+86=127\nCurrent State: 23:[57, 30, 84, 82, 127], Operations: ['41+86=127']\nExploring Operation: 57+82=139, Resulting Numbers: [30, 84, 127, 139]\nGenerated Node #3: [30, 84, 127, 139] from Operation: 57+82=139\nCurrent State: 23:[30, 84, 127, 139], Operations: ['41+86=127', '57+82=139']\nExploring Operation: 139-127=12, Resulting Numbers: [30, 84, 12]\nGenerated Node #4: [30, 84, 12] from Operation: 139-127=12\nCurrent State: 23:[30, 84, 12], Operations: ['41+86=127', '57+82=139', '139-127=12']\nExploring Operation: 84/12=7, Resulting Numbers: [30, 7]\nGenerated Node #5: [30, 7] from Operation: 84/12=7\nCurrent State: 23:[30, 7], Operations: ['41+86=127', '57+82=139', '139-127=12', '84/12=7']\nExploring Operation: 30-7=23, Resulting Numbers: [23]\n23,23 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            51,
            55,
            81,
            97,
            4,
            19
        ],
        "target": 67,
        "solution": [
            "51+55=106",
            "97-81=16",
            "4+19=23",
            "106-16=90",
            "90-23=67"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 67:[51, 55, 81, 97, 4, 19], Operations: []\nExploring Operation: 51+55=106, Resulting Numbers: [81, 97, 4, 19, 106]\nGenerated Node #2: [81, 97, 4, 19, 106] from Operation: 51+55=106\nCurrent State: 67:[81, 97, 4, 19, 106], Operations: ['51+55=106']\nExploring Operation: 97-81=16, Resulting Numbers: [4, 19, 106, 16]\nGenerated Node #3: [4, 19, 106, 16] from Operation: 97-81=16\nCurrent State: 67:[4, 19, 106, 16], Operations: ['51+55=106', '97-81=16']\nExploring Operation: 4+19=23, Resulting Numbers: [106, 16, 23]\nGenerated Node #4: [106, 16, 23] from Operation: 4+19=23\nCurrent State: 67:[106, 16, 23], Operations: ['51+55=106', '97-81=16', '4+19=23']\nExploring Operation: 106-16=90, Resulting Numbers: [23, 90]\nGenerated Node #5: [23, 90] from Operation: 106-16=90\nCurrent State: 67:[23, 90], Operations: ['51+55=106', '97-81=16', '4+19=23', '106-16=90']\nExploring Operation: 90-23=67, Resulting Numbers: [67]\n67,67 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            21,
            71,
            90,
            19,
            21,
            23
        ],
        "target": 76,
        "solution": [
            "21+71=92",
            "90+21=111",
            "23-19=4",
            "111-92=19",
            "4*19=76"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 76:[21, 71, 90, 19, 21, 23], Operations: []\nExploring Operation: 21+71=92, Resulting Numbers: [90, 19, 23, 92]\nGenerated Node #2: [90, 19, 23, 92] from Operation: 21+71=92\nCurrent State: 76:[90, 19, 23, 92], Operations: ['21+71=92']\nExploring Operation: 90+21=111, Resulting Numbers: [19, 23, 92, 111]\nGenerated Node #3: [19, 23, 92, 111] from Operation: 90+21=111\nCurrent State: 76:[19, 23, 92, 111], Operations: ['21+71=92', '90+21=111']\nExploring Operation: 23-19=4, Resulting Numbers: [92, 111, 4]\nGenerated Node #4: [92, 111, 4] from Operation: 23-19=4\nCurrent State: 76:[92, 111, 4], Operations: ['21+71=92', '90+21=111', '23-19=4']\nExploring Operation: 111-92=19, Resulting Numbers: [4, 19]\nGenerated Node #5: [4, 19] from Operation: 111-92=19\nCurrent State: 76:[4, 19], Operations: ['21+71=92', '90+21=111', '23-19=4', '111-92=19']\nExploring Operation: 4*19=76, Resulting Numbers: [76]\n76,76 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            2,
            98,
            33,
            54,
            75,
            67
        ],
        "target": 41,
        "solution": [
            "98-2=96",
            "33+54=87",
            "75+67=142",
            "96+87=183",
            "183-142=41"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 41:[2, 98, 33, 54, 75, 67], Operations: []\nExploring Operation: 98-2=96, Resulting Numbers: [33, 54, 75, 67, 96]\nGenerated Node #2: [33, 54, 75, 67, 96] from Operation: 98-2=96\nCurrent State: 41:[33, 54, 75, 67, 96], Operations: ['98-2=96']\nExploring Operation: 33+54=87, Resulting Numbers: [75, 67, 96, 87]\nGenerated Node #3: [75, 67, 96, 87] from Operation: 33+54=87\nCurrent State: 41:[75, 67, 96, 87], Operations: ['98-2=96', '33+54=87']\nExploring Operation: 75+67=142, Resulting Numbers: [96, 87, 142]\nGenerated Node #4: [96, 87, 142] from Operation: 75+67=142\nCurrent State: 41:[96, 87, 142], Operations: ['98-2=96', '33+54=87', '75+67=142']\nExploring Operation: 96+87=183, Resulting Numbers: [142, 183]\nGenerated Node #5: [142, 183] from Operation: 96+87=183\nCurrent State: 41:[142, 183], Operations: ['98-2=96', '33+54=87', '75+67=142', '96+87=183']\nExploring Operation: 183-142=41, Resulting Numbers: [41]\n41,41 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            58,
            58,
            14,
            76,
            40,
            42
        ],
        "target": 24,
        "solution": [
            "58+58=116",
            "14+76=90",
            "42-40=2",
            "116-90=26",
            "26-2=24"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 24:[58, 58, 14, 76, 40, 42], Operations: []\nExploring Operation: 58+58=116, Resulting Numbers: [14, 76, 40, 42, 116]\nGenerated Node #2: [14, 76, 40, 42, 116] from Operation: 58+58=116\nCurrent State: 24:[14, 76, 40, 42, 116], Operations: ['58+58=116']\nExploring Operation: 14+76=90, Resulting Numbers: [40, 42, 116, 90]\nGenerated Node #3: [40, 42, 116, 90] from Operation: 14+76=90\nCurrent State: 24:[40, 42, 116, 90], Operations: ['58+58=116', '14+76=90']\nExploring Operation: 42-40=2, Resulting Numbers: [116, 90, 2]\nGenerated Node #4: [116, 90, 2] from Operation: 42-40=2\nCurrent State: 24:[116, 90, 2], Operations: ['58+58=116', '14+76=90', '42-40=2']\nExploring Operation: 116-90=26, Resulting Numbers: [2, 26]\nGenerated Node #5: [2, 26] from Operation: 116-90=26\nCurrent State: 24:[2, 26], Operations: ['58+58=116', '14+76=90', '42-40=2', '116-90=26']\nExploring Operation: 26-2=24, Resulting Numbers: [24]\n24,24 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            77,
            51,
            83,
            34,
            87,
            61
        ],
        "target": 38,
        "solution": [
            "77+83=160",
            "51+34=85",
            "87-85=2",
            "61*2=122",
            "160-122=38"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 38:[77, 51, 83, 34, 87, 61], Operations: []\nExploring Operation: 77+83=160, Resulting Numbers: [51, 34, 87, 61, 160]\nGenerated Node #2: [51, 34, 87, 61, 160] from Operation: 77+83=160\nCurrent State: 38:[51, 34, 87, 61, 160], Operations: ['77+83=160']\nExploring Operation: 51+34=85, Resulting Numbers: [87, 61, 160, 85]\nGenerated Node #3: [87, 61, 160, 85] from Operation: 51+34=85\nCurrent State: 38:[87, 61, 160, 85], Operations: ['77+83=160', '51+34=85']\nExploring Operation: 87-85=2, Resulting Numbers: [61, 160, 2]\nGenerated Node #4: [61, 160, 2] from Operation: 87-85=2\nCurrent State: 38:[61, 160, 2], Operations: ['77+83=160', '51+34=85', '87-85=2']\nExploring Operation: 61*2=122, Resulting Numbers: [160, 122]\nGenerated Node #5: [160, 122] from Operation: 61*2=122\nCurrent State: 38:[160, 122], Operations: ['77+83=160', '51+34=85', '87-85=2', '61*2=122']\nExploring Operation: 160-122=38, Resulting Numbers: [38]\n38,38 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            7,
            52,
            95,
            53,
            68,
            48
        ],
        "target": 78,
        "solution": [
            "52-7=45",
            "95-53=42",
            "68-42=26",
            "48-45=3",
            "26*3=78"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 78:[7, 52, 95, 53, 68, 48], Operations: []\nExploring Operation: 52-7=45, Resulting Numbers: [95, 53, 68, 48, 45]\nGenerated Node #2: [95, 53, 68, 48, 45] from Operation: 52-7=45\nCurrent State: 78:[95, 53, 68, 48, 45], Operations: ['52-7=45']\nExploring Operation: 95-53=42, Resulting Numbers: [68, 48, 45, 42]\nGenerated Node #3: [68, 48, 45, 42] from Operation: 95-53=42\nCurrent State: 78:[68, 48, 45, 42], Operations: ['52-7=45', '95-53=42']\nExploring Operation: 68-42=26, Resulting Numbers: [48, 45, 26]\nGenerated Node #4: [48, 45, 26] from Operation: 68-42=26\nCurrent State: 78:[48, 45, 26], Operations: ['52-7=45', '95-53=42', '68-42=26']\nExploring Operation: 48-45=3, Resulting Numbers: [26, 3]\nGenerated Node #5: [26, 3] from Operation: 48-45=3\nCurrent State: 78:[26, 3], Operations: ['52-7=45', '95-53=42', '68-42=26', '48-45=3']\nExploring Operation: 26*3=78, Resulting Numbers: [78]\n78,78 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            60,
            46,
            57,
            83,
            19,
            89
        ],
        "target": 26,
        "solution": [
            "60+46=106",
            "57/19=3",
            "83+106=189",
            "189/3=63",
            "89-63=26"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 26:[60, 46, 57, 83, 19, 89], Operations: []\nExploring Operation: 60+46=106, Resulting Numbers: [57, 83, 19, 89, 106]\nGenerated Node #2: [57, 83, 19, 89, 106] from Operation: 60+46=106\nCurrent State: 26:[57, 83, 19, 89, 106], Operations: ['60+46=106']\nExploring Operation: 57/19=3, Resulting Numbers: [83, 89, 106, 3]\nGenerated Node #3: [83, 89, 106, 3] from Operation: 57/19=3\nCurrent State: 26:[83, 89, 106, 3], Operations: ['60+46=106', '57/19=3']\nExploring Operation: 83+106=189, Resulting Numbers: [89, 3, 189]\nGenerated Node #4: [89, 3, 189] from Operation: 83+106=189\nCurrent State: 26:[89, 3, 189], Operations: ['60+46=106', '57/19=3', '83+106=189']\nExploring Operation: 189/3=63, Resulting Numbers: [89, 63]\nGenerated Node #5: [89, 63] from Operation: 189/3=63\nCurrent State: 26:[89, 63], Operations: ['60+46=106', '57/19=3', '83+106=189', '189/3=63']\nExploring Operation: 89-63=26, Resulting Numbers: [26]\n26,26 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            85,
            95,
            22,
            28,
            50,
            56
        ],
        "target": 12,
        "solution": [
            "85+95=180",
            "22*56=1232",
            "28*50=1400",
            "180+1232=1412",
            "1412-1400=12"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 12:[85, 95, 22, 28, 50, 56], Operations: []\nExploring Operation: 85+95=180, Resulting Numbers: [22, 28, 50, 56, 180]\nGenerated Node #2: [22, 28, 50, 56, 180] from Operation: 85+95=180\nCurrent State: 12:[22, 28, 50, 56, 180], Operations: ['85+95=180']\nExploring Operation: 22*56=1232, Resulting Numbers: [28, 50, 180, 1232]\nGenerated Node #3: [28, 50, 180, 1232] from Operation: 22*56=1232\nCurrent State: 12:[28, 50, 180, 1232], Operations: ['85+95=180', '22*56=1232']\nExploring Operation: 28*50=1400, Resulting Numbers: [180, 1232, 1400]\nGenerated Node #4: [180, 1232, 1400] from Operation: 28*50=1400\nCurrent State: 12:[180, 1232, 1400], Operations: ['85+95=180', '22*56=1232', '28*50=1400']\nExploring Operation: 180+1232=1412, Resulting Numbers: [1400, 1412]\nGenerated Node #5: [1400, 1412] from Operation: 180+1232=1412\nCurrent State: 12:[1400, 1412], Operations: ['85+95=180', '22*56=1232', '28*50=1400', '180+1232=1412']\nExploring Operation: 1412-1400=12, Resulting Numbers: [12]\n12,12 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            97,
            73,
            64,
            21,
            49,
            29
        ],
        "target": 11,
        "solution": [
            "97-73=24",
            "64-21=43",
            "49+29=78",
            "24+43=67",
            "78-67=11"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 11:[97, 73, 64, 21, 49, 29], Operations: []\nExploring Operation: 97-73=24, Resulting Numbers: [64, 21, 49, 29, 24]\nGenerated Node #2: [64, 21, 49, 29, 24] from Operation: 97-73=24\nCurrent State: 11:[64, 21, 49, 29, 24], Operations: ['97-73=24']\nExploring Operation: 64-21=43, Resulting Numbers: [49, 29, 24, 43]\nGenerated Node #3: [49, 29, 24, 43] from Operation: 64-21=43\nCurrent State: 11:[49, 29, 24, 43], Operations: ['97-73=24', '64-21=43']\nExploring Operation: 49+29=78, Resulting Numbers: [24, 43, 78]\nGenerated Node #4: [24, 43, 78] from Operation: 49+29=78\nCurrent State: 11:[24, 43, 78], Operations: ['97-73=24', '64-21=43', '49+29=78']\nExploring Operation: 24+43=67, Resulting Numbers: [78, 67]\nGenerated Node #5: [78, 67] from Operation: 24+43=67\nCurrent State: 11:[78, 67], Operations: ['97-73=24', '64-21=43', '49+29=78', '24+43=67']\nExploring Operation: 78-67=11, Resulting Numbers: [11]\n11,11 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            87,
            95,
            59,
            85,
            12,
            43
        ],
        "target": 88,
        "solution": [
            "87+59=146",
            "95+85=180",
            "180/12=15",
            "146-43=103",
            "103-15=88"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 88:[87, 95, 59, 85, 12, 43], Operations: []\nExploring Operation: 87+59=146, Resulting Numbers: [95, 85, 12, 43, 146]\nGenerated Node #2: [95, 85, 12, 43, 146] from Operation: 87+59=146\nCurrent State: 88:[95, 85, 12, 43, 146], Operations: ['87+59=146']\nExploring Operation: 95+85=180, Resulting Numbers: [12, 43, 146, 180]\nGenerated Node #3: [12, 43, 146, 180] from Operation: 95+85=180\nCurrent State: 88:[12, 43, 146, 180], Operations: ['87+59=146', '95+85=180']\nExploring Operation: 180/12=15, Resulting Numbers: [43, 146, 15]\nGenerated Node #4: [43, 146, 15] from Operation: 180/12=15\nCurrent State: 88:[43, 146, 15], Operations: ['87+59=146', '95+85=180', '180/12=15']\nExploring Operation: 146-43=103, Resulting Numbers: [15, 103]\nGenerated Node #5: [15, 103] from Operation: 146-43=103\nCurrent State: 88:[15, 103], Operations: ['87+59=146', '95+85=180', '180/12=15', '146-43=103']\nExploring Operation: 103-15=88, Resulting Numbers: [88]\n88,88 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            78,
            26,
            11,
            95,
            60,
            26
        ],
        "target": 27,
        "solution": [
            "78+26=104",
            "11*26=286",
            "95+60=155",
            "286-104=182",
            "182-155=27"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 27:[78, 26, 11, 95, 60, 26], Operations: []\nExploring Operation: 78+26=104, Resulting Numbers: [11, 95, 60, 104]\nGenerated Node #2: [11, 95, 60, 104] from Operation: 78+26=104\nCurrent State: 27:[11, 95, 60, 104], Operations: ['78+26=104']\nExploring Operation: 11*26=286, Resulting Numbers: [95, 60, 104, 286]\nGenerated Node #3: [95, 60, 104, 286] from Operation: 11*26=286\nCurrent State: 27:[95, 60, 104, 286], Operations: ['78+26=104', '11*26=286']\nExploring Operation: 95+60=155, Resulting Numbers: [104, 286, 155]\nGenerated Node #4: [104, 286, 155] from Operation: 95+60=155\nCurrent State: 27:[104, 286, 155], Operations: ['78+26=104', '11*26=286', '95+60=155']\nExploring Operation: 286-104=182, Resulting Numbers: [155, 182]\nGenerated Node #5: [155, 182] from Operation: 286-104=182\nCurrent State: 27:[155, 182], Operations: ['78+26=104', '11*26=286', '95+60=155', '286-104=182']\nExploring Operation: 182-155=27, Resulting Numbers: [27]\n27,27 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            64,
            95,
            47,
            46,
            12,
            75
        ],
        "target": 67,
        "solution": [
            "95-64=31",
            "46-12=34",
            "75*31=2325",
            "2325-47=2278",
            "2278/34=67"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 67:[64, 95, 47, 46, 12, 75], Operations: []\nExploring Operation: 95-64=31, Resulting Numbers: [47, 46, 12, 75, 31]\nGenerated Node #2: [47, 46, 12, 75, 31] from Operation: 95-64=31\nCurrent State: 67:[47, 46, 12, 75, 31], Operations: ['95-64=31']\nExploring Operation: 46-12=34, Resulting Numbers: [47, 75, 31, 34]\nGenerated Node #3: [47, 75, 31, 34] from Operation: 46-12=34\nCurrent State: 67:[47, 75, 31, 34], Operations: ['95-64=31', '46-12=34']\nExploring Operation: 75*31=2325, Resulting Numbers: [47, 34, 2325]\nGenerated Node #4: [47, 34, 2325] from Operation: 75*31=2325\nCurrent State: 67:[47, 34, 2325], Operations: ['95-64=31', '46-12=34', '75*31=2325']\nExploring Operation: 2325-47=2278, Resulting Numbers: [34, 2278]\nGenerated Node #5: [34, 2278] from Operation: 2325-47=2278\nCurrent State: 67:[34, 2278], Operations: ['95-64=31', '46-12=34', '75*31=2325', '2325-47=2278']\nExploring Operation: 2278/34=67, Resulting Numbers: [67]\n67,67 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            80,
            28,
            4,
            46,
            61,
            51
        ],
        "target": 36,
        "solution": [
            "80+28=108",
            "4*46=184",
            "61+51=112",
            "184-108=76",
            "112-76=36"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 36:[80, 28, 4, 46, 61, 51], Operations: []\nExploring Operation: 80+28=108, Resulting Numbers: [4, 46, 61, 51, 108]\nGenerated Node #2: [4, 46, 61, 51, 108] from Operation: 80+28=108\nCurrent State: 36:[4, 46, 61, 51, 108], Operations: ['80+28=108']\nExploring Operation: 4*46=184, Resulting Numbers: [61, 51, 108, 184]\nGenerated Node #3: [61, 51, 108, 184] from Operation: 4*46=184\nCurrent State: 36:[61, 51, 108, 184], Operations: ['80+28=108', '4*46=184']\nExploring Operation: 61+51=112, Resulting Numbers: [108, 184, 112]\nGenerated Node #4: [108, 184, 112] from Operation: 61+51=112\nCurrent State: 36:[108, 184, 112], Operations: ['80+28=108', '4*46=184', '61+51=112']\nExploring Operation: 184-108=76, Resulting Numbers: [112, 76]\nGenerated Node #5: [112, 76] from Operation: 184-108=76\nCurrent State: 36:[112, 76], Operations: ['80+28=108', '4*46=184', '61+51=112', '184-108=76']\nExploring Operation: 112-76=36, Resulting Numbers: [36]\n36,36 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            56,
            74,
            51,
            60,
            10,
            83
        ],
        "target": 54,
        "solution": [
            "56+74=130",
            "51+60=111",
            "83-10=73",
            "130-111=19",
            "73-19=54"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 54:[56, 74, 51, 60, 10, 83], Operations: []\nExploring Operation: 56+74=130, Resulting Numbers: [51, 60, 10, 83, 130]\nGenerated Node #2: [51, 60, 10, 83, 130] from Operation: 56+74=130\nCurrent State: 54:[51, 60, 10, 83, 130], Operations: ['56+74=130']\nExploring Operation: 51+60=111, Resulting Numbers: [10, 83, 130, 111]\nGenerated Node #3: [10, 83, 130, 111] from Operation: 51+60=111\nCurrent State: 54:[10, 83, 130, 111], Operations: ['56+74=130', '51+60=111']\nExploring Operation: 83-10=73, Resulting Numbers: [130, 111, 73]\nGenerated Node #4: [130, 111, 73] from Operation: 83-10=73\nCurrent State: 54:[130, 111, 73], Operations: ['56+74=130', '51+60=111', '83-10=73']\nExploring Operation: 130-111=19, Resulting Numbers: [73, 19]\nGenerated Node #5: [73, 19] from Operation: 130-111=19\nCurrent State: 54:[73, 19], Operations: ['56+74=130', '51+60=111', '83-10=73', '130-111=19']\nExploring Operation: 73-19=54, Resulting Numbers: [54]\n54,54 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            14,
            35,
            65,
            63,
            71,
            83
        ],
        "target": 37,
        "solution": [
            "35-14=21",
            "65-63=2",
            "71+21=92",
            "92/2=46",
            "83-46=37"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 37:[14, 35, 65, 63, 71, 83], Operations: []\nExploring Operation: 35-14=21, Resulting Numbers: [65, 63, 71, 83, 21]\nGenerated Node #2: [65, 63, 71, 83, 21] from Operation: 35-14=21\nCurrent State: 37:[65, 63, 71, 83, 21], Operations: ['35-14=21']\nExploring Operation: 65-63=2, Resulting Numbers: [71, 83, 21, 2]\nGenerated Node #3: [71, 83, 21, 2] from Operation: 65-63=2\nCurrent State: 37:[71, 83, 21, 2], Operations: ['35-14=21', '65-63=2']\nExploring Operation: 71+21=92, Resulting Numbers: [83, 2, 92]\nGenerated Node #4: [83, 2, 92] from Operation: 71+21=92\nCurrent State: 37:[83, 2, 92], Operations: ['35-14=21', '65-63=2', '71+21=92']\nExploring Operation: 92/2=46, Resulting Numbers: [83, 46]\nGenerated Node #5: [83, 46] from Operation: 92/2=46\nCurrent State: 37:[83, 46], Operations: ['35-14=21', '65-63=2', '71+21=92', '92/2=46']\nExploring Operation: 83-46=37, Resulting Numbers: [37]\n37,37 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            38,
            69,
            77,
            54,
            62,
            50
        ],
        "target": 64,
        "solution": [
            "38+69=107",
            "77+107=184",
            "54-50=4",
            "62*4=248",
            "248-184=64"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 64:[38, 69, 77, 54, 62, 50], Operations: []\nExploring Operation: 38+69=107, Resulting Numbers: [77, 54, 62, 50, 107]\nGenerated Node #2: [77, 54, 62, 50, 107] from Operation: 38+69=107\nCurrent State: 64:[77, 54, 62, 50, 107], Operations: ['38+69=107']\nExploring Operation: 77+107=184, Resulting Numbers: [54, 62, 50, 184]\nGenerated Node #3: [54, 62, 50, 184] from Operation: 77+107=184\nCurrent State: 64:[54, 62, 50, 184], Operations: ['38+69=107', '77+107=184']\nExploring Operation: 54-50=4, Resulting Numbers: [62, 184, 4]\nGenerated Node #4: [62, 184, 4] from Operation: 54-50=4\nCurrent State: 64:[62, 184, 4], Operations: ['38+69=107', '77+107=184', '54-50=4']\nExploring Operation: 62*4=248, Resulting Numbers: [184, 248]\nGenerated Node #5: [184, 248] from Operation: 62*4=248\nCurrent State: 64:[184, 248], Operations: ['38+69=107', '77+107=184', '54-50=4', '62*4=248']\nExploring Operation: 248-184=64, Resulting Numbers: [64]\n64,64 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            52,
            77,
            56,
            22,
            1,
            19
        ],
        "target": 65,
        "solution": [
            "52+77=129",
            "56+1=57",
            "19*129=2451",
            "2451/57=43",
            "22+43=65"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 65:[52, 77, 56, 22, 1, 19], Operations: []\nExploring Operation: 52+77=129, Resulting Numbers: [56, 22, 1, 19, 129]\nGenerated Node #2: [56, 22, 1, 19, 129] from Operation: 52+77=129\nCurrent State: 65:[56, 22, 1, 19, 129], Operations: ['52+77=129']\nExploring Operation: 56+1=57, Resulting Numbers: [22, 19, 129, 57]\nGenerated Node #3: [22, 19, 129, 57] from Operation: 56+1=57\nCurrent State: 65:[22, 19, 129, 57], Operations: ['52+77=129', '56+1=57']\nExploring Operation: 19*129=2451, Resulting Numbers: [22, 57, 2451]\nGenerated Node #4: [22, 57, 2451] from Operation: 19*129=2451\nCurrent State: 65:[22, 57, 2451], Operations: ['52+77=129', '56+1=57', '19*129=2451']\nExploring Operation: 2451/57=43, Resulting Numbers: [22, 43]\nGenerated Node #5: [22, 43] from Operation: 2451/57=43\nCurrent State: 65:[22, 43], Operations: ['52+77=129', '56+1=57', '19*129=2451', '2451/57=43']\nExploring Operation: 22+43=65, Resulting Numbers: [65]\n65,65 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            39,
            95,
            11,
            14,
            65,
            55
        ],
        "target": 79,
        "solution": [
            "39+95=134",
            "11*65=715",
            "14*55=770",
            "134+715=849",
            "849-770=79"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 79:[39, 95, 11, 14, 65, 55], Operations: []\nExploring Operation: 39+95=134, Resulting Numbers: [11, 14, 65, 55, 134]\nGenerated Node #2: [11, 14, 65, 55, 134] from Operation: 39+95=134\nCurrent State: 79:[11, 14, 65, 55, 134], Operations: ['39+95=134']\nExploring Operation: 11*65=715, Resulting Numbers: [14, 55, 134, 715]\nGenerated Node #3: [14, 55, 134, 715] from Operation: 11*65=715\nCurrent State: 79:[14, 55, 134, 715], Operations: ['39+95=134', '11*65=715']\nExploring Operation: 14*55=770, Resulting Numbers: [134, 715, 770]\nGenerated Node #4: [134, 715, 770] from Operation: 14*55=770\nCurrent State: 79:[134, 715, 770], Operations: ['39+95=134', '11*65=715', '14*55=770']\nExploring Operation: 134+715=849, Resulting Numbers: [770, 849]\nGenerated Node #5: [770, 849] from Operation: 134+715=849\nCurrent State: 79:[770, 849], Operations: ['39+95=134', '11*65=715', '14*55=770', '134+715=849']\nExploring Operation: 849-770=79, Resulting Numbers: [79]\n79,79 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            50,
            17,
            5,
            25,
            80,
            39
        ],
        "target": 14,
        "solution": [
            "50-17=33",
            "39-33=6",
            "25*6=150",
            "150-80=70",
            "70/5=14"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 14:[50, 17, 5, 25, 80, 39], Operations: []\nExploring Operation: 50-17=33, Resulting Numbers: [5, 25, 80, 39, 33]\nGenerated Node #2: [5, 25, 80, 39, 33] from Operation: 50-17=33\nCurrent State: 14:[5, 25, 80, 39, 33], Operations: ['50-17=33']\nExploring Operation: 39-33=6, Resulting Numbers: [5, 25, 80, 6]\nGenerated Node #3: [5, 25, 80, 6] from Operation: 39-33=6\nCurrent State: 14:[5, 25, 80, 6], Operations: ['50-17=33', '39-33=6']\nExploring Operation: 25*6=150, Resulting Numbers: [5, 80, 150]\nGenerated Node #4: [5, 80, 150] from Operation: 25*6=150\nCurrent State: 14:[5, 80, 150], Operations: ['50-17=33', '39-33=6', '25*6=150']\nExploring Operation: 150-80=70, Resulting Numbers: [5, 70]\nGenerated Node #5: [5, 70] from Operation: 150-80=70\nCurrent State: 14:[5, 70], Operations: ['50-17=33', '39-33=6', '25*6=150', '150-80=70']\nExploring Operation: 70/5=14, Resulting Numbers: [14]\n14,14 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            48,
            3,
            2,
            1,
            19,
            33
        ],
        "target": 91,
        "solution": [
            "48*3=144",
            "2-1=1",
            "19+33=52",
            "144-1=143",
            "143-52=91"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 91:[48, 3, 2, 1, 19, 33], Operations: []\nExploring Operation: 48*3=144, Resulting Numbers: [2, 1, 19, 33, 144]\nGenerated Node #2: [2, 1, 19, 33, 144] from Operation: 48*3=144\nCurrent State: 91:[2, 1, 19, 33, 144], Operations: ['48*3=144']\nExploring Operation: 2-1=1, Resulting Numbers: [19, 33, 144, 1]\nGenerated Node #3: [19, 33, 144, 1] from Operation: 2-1=1\nCurrent State: 91:[19, 33, 144, 1], Operations: ['48*3=144', '2-1=1']\nExploring Operation: 19+33=52, Resulting Numbers: [144, 1, 52]\nGenerated Node #4: [144, 1, 52] from Operation: 19+33=52\nCurrent State: 91:[144, 1, 52], Operations: ['48*3=144', '2-1=1', '19+33=52']\nExploring Operation: 144-1=143, Resulting Numbers: [52, 143]\nGenerated Node #5: [52, 143] from Operation: 144-1=143\nCurrent State: 91:[52, 143], Operations: ['48*3=144', '2-1=1', '19+33=52', '144-1=143']\nExploring Operation: 143-52=91, Resulting Numbers: [91]\n91,91 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            79,
            68,
            26,
            36,
            38,
            21
        ],
        "target": 42,
        "solution": [
            "79+68=147",
            "38-26=12",
            "36/12=3",
            "147-21=126",
            "126/3=42"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 42:[79, 68, 26, 36, 38, 21], Operations: []\nExploring Operation: 79+68=147, Resulting Numbers: [26, 36, 38, 21, 147]\nGenerated Node #2: [26, 36, 38, 21, 147] from Operation: 79+68=147\nCurrent State: 42:[26, 36, 38, 21, 147], Operations: ['79+68=147']\nExploring Operation: 38-26=12, Resulting Numbers: [36, 21, 147, 12]\nGenerated Node #3: [36, 21, 147, 12] from Operation: 38-26=12\nCurrent State: 42:[36, 21, 147, 12], Operations: ['79+68=147', '38-26=12']\nExploring Operation: 36/12=3, Resulting Numbers: [21, 147, 3]\nGenerated Node #4: [21, 147, 3] from Operation: 36/12=3\nCurrent State: 42:[21, 147, 3], Operations: ['79+68=147', '38-26=12', '36/12=3']\nExploring Operation: 147-21=126, Resulting Numbers: [3, 126]\nGenerated Node #5: [3, 126] from Operation: 147-21=126\nCurrent State: 42:[3, 126], Operations: ['79+68=147', '38-26=12', '36/12=3', '147-21=126']\nExploring Operation: 126/3=42, Resulting Numbers: [42]\n42,42 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            26,
            73,
            27,
            9,
            63,
            17
        ],
        "target": 17,
        "solution": [
            "26+73=99",
            "27+9=36",
            "63+17=80",
            "99-36=63",
            "80-63=17"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 17:[26, 73, 27, 9, 63, 17], Operations: []\nExploring Operation: 26+73=99, Resulting Numbers: [27, 9, 63, 17, 99]\nGenerated Node #2: [27, 9, 63, 17, 99] from Operation: 26+73=99\nCurrent State: 17:[27, 9, 63, 17, 99], Operations: ['26+73=99']\nExploring Operation: 27+9=36, Resulting Numbers: [63, 17, 99, 36]\nGenerated Node #3: [63, 17, 99, 36] from Operation: 27+9=36\nCurrent State: 17:[63, 17, 99, 36], Operations: ['26+73=99', '27+9=36']\nExploring Operation: 63+17=80, Resulting Numbers: [99, 36, 80]\nGenerated Node #4: [99, 36, 80] from Operation: 63+17=80\nCurrent State: 17:[99, 36, 80], Operations: ['26+73=99', '27+9=36', '63+17=80']\nExploring Operation: 99-36=63, Resulting Numbers: [80, 63]\nGenerated Node #5: [80, 63] from Operation: 99-36=63\nCurrent State: 17:[80, 63], Operations: ['26+73=99', '27+9=36', '63+17=80', '99-36=63']\nExploring Operation: 80-63=17, Resulting Numbers: [17]\n17,17 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            78,
            11,
            41,
            42,
            69,
            59
        ],
        "target": 89,
        "solution": [
            "78*11=858",
            "59-41=18",
            "858-18=840",
            "840/42=20",
            "69+20=89"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 89:[78, 11, 41, 42, 69, 59], Operations: []\nExploring Operation: 78*11=858, Resulting Numbers: [41, 42, 69, 59, 858]\nGenerated Node #2: [41, 42, 69, 59, 858] from Operation: 78*11=858\nCurrent State: 89:[41, 42, 69, 59, 858], Operations: ['78*11=858']\nExploring Operation: 59-41=18, Resulting Numbers: [42, 69, 858, 18]\nGenerated Node #3: [42, 69, 858, 18] from Operation: 59-41=18\nCurrent State: 89:[42, 69, 858, 18], Operations: ['78*11=858', '59-41=18']\nExploring Operation: 858-18=840, Resulting Numbers: [42, 69, 840]\nGenerated Node #4: [42, 69, 840] from Operation: 858-18=840\nCurrent State: 89:[42, 69, 840], Operations: ['78*11=858', '59-41=18', '858-18=840']\nExploring Operation: 840/42=20, Resulting Numbers: [69, 20]\nGenerated Node #5: [69, 20] from Operation: 840/42=20\nCurrent State: 89:[69, 20], Operations: ['78*11=858', '59-41=18', '858-18=840', '840/42=20']\nExploring Operation: 69+20=89, Resulting Numbers: [89]\n89,89 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            90,
            43,
            21,
            31,
            29,
            82
        ],
        "target": 83,
        "solution": [
            "90-31=59",
            "82-29=53",
            "59-53=6",
            "21*6=126",
            "126-43=83"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 83:[90, 43, 21, 31, 29, 82], Operations: []\nExploring Operation: 90-31=59, Resulting Numbers: [43, 21, 29, 82, 59]\nGenerated Node #2: [43, 21, 29, 82, 59] from Operation: 90-31=59\nCurrent State: 83:[43, 21, 29, 82, 59], Operations: ['90-31=59']\nExploring Operation: 82-29=53, Resulting Numbers: [43, 21, 59, 53]\nGenerated Node #3: [43, 21, 59, 53] from Operation: 82-29=53\nCurrent State: 83:[43, 21, 59, 53], Operations: ['90-31=59', '82-29=53']\nExploring Operation: 59-53=6, Resulting Numbers: [43, 21, 6]\nGenerated Node #4: [43, 21, 6] from Operation: 59-53=6\nCurrent State: 83:[43, 21, 6], Operations: ['90-31=59', '82-29=53', '59-53=6']\nExploring Operation: 21*6=126, Resulting Numbers: [43, 126]\nGenerated Node #5: [43, 126] from Operation: 21*6=126\nCurrent State: 83:[43, 126], Operations: ['90-31=59', '82-29=53', '59-53=6', '21*6=126']\nExploring Operation: 126-43=83, Resulting Numbers: [83]\n83,83 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            16,
            24,
            7,
            53,
            72,
            4
        ],
        "target": 67,
        "solution": [
            "16+24=40",
            "7+53=60",
            "60-40=20",
            "20/4=5",
            "72-5=67"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 67:[16, 24, 7, 53, 72, 4], Operations: []\nExploring Operation: 16+24=40, Resulting Numbers: [7, 53, 72, 4, 40]\nGenerated Node #2: [7, 53, 72, 4, 40] from Operation: 16+24=40\nCurrent State: 67:[7, 53, 72, 4, 40], Operations: ['16+24=40']\nExploring Operation: 7+53=60, Resulting Numbers: [72, 4, 40, 60]\nGenerated Node #3: [72, 4, 40, 60] from Operation: 7+53=60\nCurrent State: 67:[72, 4, 40, 60], Operations: ['16+24=40', '7+53=60']\nExploring Operation: 60-40=20, Resulting Numbers: [72, 4, 20]\nGenerated Node #4: [72, 4, 20] from Operation: 60-40=20\nCurrent State: 67:[72, 4, 20], Operations: ['16+24=40', '7+53=60', '60-40=20']\nExploring Operation: 20/4=5, Resulting Numbers: [72, 5]\nGenerated Node #5: [72, 5] from Operation: 20/4=5\nCurrent State: 67:[72, 5], Operations: ['16+24=40', '7+53=60', '60-40=20', '20/4=5']\nExploring Operation: 72-5=67, Resulting Numbers: [67]\n67,67 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            55,
            81,
            75,
            38,
            70,
            4
        ],
        "target": 89,
        "solution": [
            "55+81=136",
            "75+38=113",
            "70-4=66",
            "136-113=23",
            "66+23=89"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 89:[55, 81, 75, 38, 70, 4], Operations: []\nExploring Operation: 55+81=136, Resulting Numbers: [75, 38, 70, 4, 136]\nGenerated Node #2: [75, 38, 70, 4, 136] from Operation: 55+81=136\nCurrent State: 89:[75, 38, 70, 4, 136], Operations: ['55+81=136']\nExploring Operation: 75+38=113, Resulting Numbers: [70, 4, 136, 113]\nGenerated Node #3: [70, 4, 136, 113] from Operation: 75+38=113\nCurrent State: 89:[70, 4, 136, 113], Operations: ['55+81=136', '75+38=113']\nExploring Operation: 70-4=66, Resulting Numbers: [136, 113, 66]\nGenerated Node #4: [136, 113, 66] from Operation: 70-4=66\nCurrent State: 89:[136, 113, 66], Operations: ['55+81=136', '75+38=113', '70-4=66']\nExploring Operation: 136-113=23, Resulting Numbers: [66, 23]\nGenerated Node #5: [66, 23] from Operation: 136-113=23\nCurrent State: 89:[66, 23], Operations: ['55+81=136', '75+38=113', '70-4=66', '136-113=23']\nExploring Operation: 66+23=89, Resulting Numbers: [89]\n89,89 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            5,
            63,
            53,
            60,
            57,
            48
        ],
        "target": 16,
        "solution": [
            "5+63=68",
            "57-53=4",
            "60+68=128",
            "128/4=32",
            "48-32=16"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 16:[5, 63, 53, 60, 57, 48], Operations: []\nExploring Operation: 5+63=68, Resulting Numbers: [53, 60, 57, 48, 68]\nGenerated Node #2: [53, 60, 57, 48, 68] from Operation: 5+63=68\nCurrent State: 16:[53, 60, 57, 48, 68], Operations: ['5+63=68']\nExploring Operation: 57-53=4, Resulting Numbers: [60, 48, 68, 4]\nGenerated Node #3: [60, 48, 68, 4] from Operation: 57-53=4\nCurrent State: 16:[60, 48, 68, 4], Operations: ['5+63=68', '57-53=4']\nExploring Operation: 60+68=128, Resulting Numbers: [48, 4, 128]\nGenerated Node #4: [48, 4, 128] from Operation: 60+68=128\nCurrent State: 16:[48, 4, 128], Operations: ['5+63=68', '57-53=4', '60+68=128']\nExploring Operation: 128/4=32, Resulting Numbers: [48, 32]\nGenerated Node #5: [48, 32] from Operation: 128/4=32\nCurrent State: 16:[48, 32], Operations: ['5+63=68', '57-53=4', '60+68=128', '128/4=32']\nExploring Operation: 48-32=16, Resulting Numbers: [16]\n16,16 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            1,
            5,
            52,
            72,
            90,
            97
        ],
        "target": 62,
        "solution": [
            "1+5=6",
            "72-52=20",
            "97-90=7",
            "6*7=42",
            "20+42=62"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 62:[1, 5, 52, 72, 90, 97], Operations: []\nExploring Operation: 1+5=6, Resulting Numbers: [52, 72, 90, 97, 6]\nGenerated Node #2: [52, 72, 90, 97, 6] from Operation: 1+5=6\nCurrent State: 62:[52, 72, 90, 97, 6], Operations: ['1+5=6']\nExploring Operation: 72-52=20, Resulting Numbers: [90, 97, 6, 20]\nGenerated Node #3: [90, 97, 6, 20] from Operation: 72-52=20\nCurrent State: 62:[90, 97, 6, 20], Operations: ['1+5=6', '72-52=20']\nExploring Operation: 97-90=7, Resulting Numbers: [6, 20, 7]\nGenerated Node #4: [6, 20, 7] from Operation: 97-90=7\nCurrent State: 62:[6, 20, 7], Operations: ['1+5=6', '72-52=20', '97-90=7']\nExploring Operation: 6*7=42, Resulting Numbers: [20, 42]\nGenerated Node #5: [20, 42] from Operation: 6*7=42\nCurrent State: 62:[20, 42], Operations: ['1+5=6', '72-52=20', '97-90=7', '6*7=42']\nExploring Operation: 20+42=62, Resulting Numbers: [62]\n62,62 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            40,
            23,
            67,
            94,
            10,
            39
        ],
        "target": 36,
        "solution": [
            "40+67=107",
            "23+10=33",
            "107-94=13",
            "39/13=3",
            "33+3=36"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 36:[40, 23, 67, 94, 10, 39], Operations: []\nExploring Operation: 40+67=107, Resulting Numbers: [23, 94, 10, 39, 107]\nGenerated Node #2: [23, 94, 10, 39, 107] from Operation: 40+67=107\nCurrent State: 36:[23, 94, 10, 39, 107], Operations: ['40+67=107']\nExploring Operation: 23+10=33, Resulting Numbers: [94, 39, 107, 33]\nGenerated Node #3: [94, 39, 107, 33] from Operation: 23+10=33\nCurrent State: 36:[94, 39, 107, 33], Operations: ['40+67=107', '23+10=33']\nExploring Operation: 107-94=13, Resulting Numbers: [39, 33, 13]\nGenerated Node #4: [39, 33, 13] from Operation: 107-94=13\nCurrent State: 36:[39, 33, 13], Operations: ['40+67=107', '23+10=33', '107-94=13']\nExploring Operation: 39/13=3, Resulting Numbers: [33, 3]\nGenerated Node #5: [33, 3] from Operation: 39/13=3\nCurrent State: 36:[33, 3], Operations: ['40+67=107', '23+10=33', '107-94=13', '39/13=3']\nExploring Operation: 33+3=36, Resulting Numbers: [36]\n36,36 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            64,
            35,
            23,
            89,
            2,
            27
        ],
        "target": 27,
        "solution": [
            "64-35=29",
            "23+89=112",
            "2*29=58",
            "112-27=85",
            "85-58=27"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 27:[64, 35, 23, 89, 2, 27], Operations: []\nExploring Operation: 64-35=29, Resulting Numbers: [23, 89, 2, 27, 29]\nGenerated Node #2: [23, 89, 2, 27, 29] from Operation: 64-35=29\nCurrent State: 27:[23, 89, 2, 27, 29], Operations: ['64-35=29']\nExploring Operation: 23+89=112, Resulting Numbers: [2, 27, 29, 112]\nGenerated Node #3: [2, 27, 29, 112] from Operation: 23+89=112\nCurrent State: 27:[2, 27, 29, 112], Operations: ['64-35=29', '23+89=112']\nExploring Operation: 2*29=58, Resulting Numbers: [27, 112, 58]\nGenerated Node #4: [27, 112, 58] from Operation: 2*29=58\nCurrent State: 27:[27, 112, 58], Operations: ['64-35=29', '23+89=112', '2*29=58']\nExploring Operation: 112-27=85, Resulting Numbers: [58, 85]\nGenerated Node #5: [58, 85] from Operation: 112-27=85\nCurrent State: 27:[58, 85], Operations: ['64-35=29', '23+89=112', '2*29=58', '112-27=85']\nExploring Operation: 85-58=27, Resulting Numbers: [27]\n27,27 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            35,
            21,
            24,
            29,
            60,
            42
        ],
        "target": 77,
        "solution": [
            "35+21=56",
            "60-24=36",
            "56*36=2016",
            "2016/42=48",
            "29+48=77"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 77:[35, 21, 24, 29, 60, 42], Operations: []\nExploring Operation: 35+21=56, Resulting Numbers: [24, 29, 60, 42, 56]\nGenerated Node #2: [24, 29, 60, 42, 56] from Operation: 35+21=56\nCurrent State: 77:[24, 29, 60, 42, 56], Operations: ['35+21=56']\nExploring Operation: 60-24=36, Resulting Numbers: [29, 42, 56, 36]\nGenerated Node #3: [29, 42, 56, 36] from Operation: 60-24=36\nCurrent State: 77:[29, 42, 56, 36], Operations: ['35+21=56', '60-24=36']\nExploring Operation: 56*36=2016, Resulting Numbers: [29, 42, 2016]\nGenerated Node #4: [29, 42, 2016] from Operation: 56*36=2016\nCurrent State: 77:[29, 42, 2016], Operations: ['35+21=56', '60-24=36', '56*36=2016']\nExploring Operation: 2016/42=48, Resulting Numbers: [29, 48]\nGenerated Node #5: [29, 48] from Operation: 2016/42=48\nCurrent State: 77:[29, 48], Operations: ['35+21=56', '60-24=36', '56*36=2016', '2016/42=48']\nExploring Operation: 29+48=77, Resulting Numbers: [77]\n77,77 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            51,
            7,
            99,
            44,
            98,
            88
        ],
        "target": 57,
        "solution": [
            "51+7=58",
            "99-98=1",
            "88/44=2",
            "58+1=59",
            "59-2=57"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 57:[51, 7, 99, 44, 98, 88], Operations: []\nExploring Operation: 51+7=58, Resulting Numbers: [99, 44, 98, 88, 58]\nGenerated Node #2: [99, 44, 98, 88, 58] from Operation: 51+7=58\nCurrent State: 57:[99, 44, 98, 88, 58], Operations: ['51+7=58']\nExploring Operation: 99-98=1, Resulting Numbers: [44, 88, 58, 1]\nGenerated Node #3: [44, 88, 58, 1] from Operation: 99-98=1\nCurrent State: 57:[44, 88, 58, 1], Operations: ['51+7=58', '99-98=1']\nExploring Operation: 88/44=2, Resulting Numbers: [58, 1, 2]\nGenerated Node #4: [58, 1, 2] from Operation: 88/44=2\nCurrent State: 57:[58, 1, 2], Operations: ['51+7=58', '99-98=1', '88/44=2']\nExploring Operation: 58+1=59, Resulting Numbers: [2, 59]\nGenerated Node #5: [2, 59] from Operation: 58+1=59\nCurrent State: 57:[2, 59], Operations: ['51+7=58', '99-98=1', '88/44=2', '58+1=59']\nExploring Operation: 59-2=57, Resulting Numbers: [57]\n57,57 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            5,
            94,
            71,
            32,
            13,
            94
        ],
        "target": 91,
        "solution": [
            "94-5=89",
            "89-71=18",
            "32+94=126",
            "13*126=1638",
            "1638/18=91"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 91:[5, 94, 71, 32, 13, 94], Operations: []\nExploring Operation: 94-5=89, Resulting Numbers: [71, 32, 13, 89]\nGenerated Node #2: [71, 32, 13, 89] from Operation: 94-5=89\nCurrent State: 91:[71, 32, 13, 89], Operations: ['94-5=89']\nExploring Operation: 89-71=18, Resulting Numbers: [32, 13, 18]\nGenerated Node #3: [32, 13, 18] from Operation: 89-71=18\nCurrent State: 91:[32, 13, 18], Operations: ['94-5=89', '89-71=18']\nExploring Operation: 32+94=126, Resulting Numbers: [13, 18, 126]\nGenerated Node #4: [13, 18, 126] from Operation: 32+94=126\nCurrent State: 91:[13, 18, 126], Operations: ['94-5=89', '89-71=18', '32+94=126']\nExploring Operation: 13*126=1638, Resulting Numbers: [18, 1638]\nGenerated Node #5: [18, 1638] from Operation: 13*126=1638\nCurrent State: 91:[18, 1638], Operations: ['94-5=89', '89-71=18', '32+94=126', '13*126=1638']\nExploring Operation: 1638/18=91, Resulting Numbers: [91]\n91,91 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            56,
            41,
            83,
            82,
            90,
            81
        ],
        "target": 72,
        "solution": [
            "83-56=27",
            "82/41=2",
            "90+81=171",
            "171-27=144",
            "144/2=72"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 72:[56, 41, 83, 82, 90, 81], Operations: []\nExploring Operation: 83-56=27, Resulting Numbers: [41, 82, 90, 81, 27]\nGenerated Node #2: [41, 82, 90, 81, 27] from Operation: 83-56=27\nCurrent State: 72:[41, 82, 90, 81, 27], Operations: ['83-56=27']\nExploring Operation: 82/41=2, Resulting Numbers: [90, 81, 27, 2]\nGenerated Node #3: [90, 81, 27, 2] from Operation: 82/41=2\nCurrent State: 72:[90, 81, 27, 2], Operations: ['83-56=27', '82/41=2']\nExploring Operation: 90+81=171, Resulting Numbers: [27, 2, 171]\nGenerated Node #4: [27, 2, 171] from Operation: 90+81=171\nCurrent State: 72:[27, 2, 171], Operations: ['83-56=27', '82/41=2', '90+81=171']\nExploring Operation: 171-27=144, Resulting Numbers: [2, 144]\nGenerated Node #5: [2, 144] from Operation: 171-27=144\nCurrent State: 72:[2, 144], Operations: ['83-56=27', '82/41=2', '90+81=171', '171-27=144']\nExploring Operation: 144/2=72, Resulting Numbers: [72]\n72,72 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            81,
            64,
            14,
            79,
            4,
            68
        ],
        "target": 32,
        "solution": [
            "81+64=145",
            "79+68=147",
            "147-145=2",
            "14*2=28",
            "4+28=32"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 32:[81, 64, 14, 79, 4, 68], Operations: []\nExploring Operation: 81+64=145, Resulting Numbers: [14, 79, 4, 68, 145]\nGenerated Node #2: [14, 79, 4, 68, 145] from Operation: 81+64=145\nCurrent State: 32:[14, 79, 4, 68, 145], Operations: ['81+64=145']\nExploring Operation: 79+68=147, Resulting Numbers: [14, 4, 145, 147]\nGenerated Node #3: [14, 4, 145, 147] from Operation: 79+68=147\nCurrent State: 32:[14, 4, 145, 147], Operations: ['81+64=145', '79+68=147']\nExploring Operation: 147-145=2, Resulting Numbers: [14, 4, 2]\nGenerated Node #4: [14, 4, 2] from Operation: 147-145=2\nCurrent State: 32:[14, 4, 2], Operations: ['81+64=145', '79+68=147', '147-145=2']\nExploring Operation: 14*2=28, Resulting Numbers: [4, 28]\nGenerated Node #5: [4, 28] from Operation: 14*2=28\nCurrent State: 32:[4, 28], Operations: ['81+64=145', '79+68=147', '147-145=2', '14*2=28']\nExploring Operation: 4+28=32, Resulting Numbers: [32]\n32,32 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            63,
            61,
            34,
            66,
            52,
            17
        ],
        "target": 62,
        "solution": [
            "63-61=2",
            "34+66=100",
            "52+17=69",
            "100-69=31",
            "2*31=62"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 62:[63, 61, 34, 66, 52, 17], Operations: []\nExploring Operation: 63-61=2, Resulting Numbers: [34, 66, 52, 17, 2]\nGenerated Node #2: [34, 66, 52, 17, 2] from Operation: 63-61=2\nCurrent State: 62:[34, 66, 52, 17, 2], Operations: ['63-61=2']\nExploring Operation: 34+66=100, Resulting Numbers: [52, 17, 2, 100]\nGenerated Node #3: [52, 17, 2, 100] from Operation: 34+66=100\nCurrent State: 62:[52, 17, 2, 100], Operations: ['63-61=2', '34+66=100']\nExploring Operation: 52+17=69, Resulting Numbers: [2, 100, 69]\nGenerated Node #4: [2, 100, 69] from Operation: 52+17=69\nCurrent State: 62:[2, 100, 69], Operations: ['63-61=2', '34+66=100', '52+17=69']\nExploring Operation: 100-69=31, Resulting Numbers: [2, 31]\nGenerated Node #5: [2, 31] from Operation: 100-69=31\nCurrent State: 62:[2, 31], Operations: ['63-61=2', '34+66=100', '52+17=69', '100-69=31']\nExploring Operation: 2*31=62, Resulting Numbers: [62]\n62,62 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            67,
            80,
            54,
            9,
            69,
            23
        ],
        "target": 18,
        "solution": [
            "67+80=147",
            "54*23=1242",
            "9+69=78",
            "147-78=69",
            "1242/69=18"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 18:[67, 80, 54, 9, 69, 23], Operations: []\nExploring Operation: 67+80=147, Resulting Numbers: [54, 9, 69, 23, 147]\nGenerated Node #2: [54, 9, 69, 23, 147] from Operation: 67+80=147\nCurrent State: 18:[54, 9, 69, 23, 147], Operations: ['67+80=147']\nExploring Operation: 54*23=1242, Resulting Numbers: [9, 69, 147, 1242]\nGenerated Node #3: [9, 69, 147, 1242] from Operation: 54*23=1242\nCurrent State: 18:[9, 69, 147, 1242], Operations: ['67+80=147', '54*23=1242']\nExploring Operation: 9+69=78, Resulting Numbers: [147, 1242, 78]\nGenerated Node #4: [147, 1242, 78] from Operation: 9+69=78\nCurrent State: 18:[147, 1242, 78], Operations: ['67+80=147', '54*23=1242', '9+69=78']\nExploring Operation: 147-78=69, Resulting Numbers: [1242, 69]\nGenerated Node #5: [1242, 69] from Operation: 147-78=69\nCurrent State: 18:[1242, 69], Operations: ['67+80=147', '54*23=1242', '9+69=78', '147-78=69']\nExploring Operation: 1242/69=18, Resulting Numbers: [18]\n18,18 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            97,
            48,
            33,
            59,
            93,
            79
        ],
        "target": 72,
        "solution": [
            "97*48=4656",
            "59*79=4661",
            "4661-4656=5",
            "33*5=165",
            "165-93=72"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 72:[97, 48, 33, 59, 93, 79], Operations: []\nExploring Operation: 97*48=4656, Resulting Numbers: [33, 59, 93, 79, 4656]\nGenerated Node #2: [33, 59, 93, 79, 4656] from Operation: 97*48=4656\nCurrent State: 72:[33, 59, 93, 79, 4656], Operations: ['97*48=4656']\nExploring Operation: 59*79=4661, Resulting Numbers: [33, 93, 4656, 4661]\nGenerated Node #3: [33, 93, 4656, 4661] from Operation: 59*79=4661\nCurrent State: 72:[33, 93, 4656, 4661], Operations: ['97*48=4656', '59*79=4661']\nExploring Operation: 4661-4656=5, Resulting Numbers: [33, 93, 5]\nGenerated Node #4: [33, 93, 5] from Operation: 4661-4656=5\nCurrent State: 72:[33, 93, 5], Operations: ['97*48=4656', '59*79=4661', '4661-4656=5']\nExploring Operation: 33*5=165, Resulting Numbers: [93, 165]\nGenerated Node #5: [93, 165] from Operation: 33*5=165\nCurrent State: 72:[93, 165], Operations: ['97*48=4656', '59*79=4661', '4661-4656=5', '33*5=165']\nExploring Operation: 165-93=72, Resulting Numbers: [72]\n72,72 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            24,
            46,
            9,
            13,
            37,
            54
        ],
        "target": 33,
        "solution": [
            "24+46=70",
            "13-9=4",
            "70-54=16",
            "16/4=4",
            "37-4=33"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 33:[24, 46, 9, 13, 37, 54], Operations: []\nExploring Operation: 24+46=70, Resulting Numbers: [9, 13, 37, 54, 70]\nGenerated Node #2: [9, 13, 37, 54, 70] from Operation: 24+46=70\nCurrent State: 33:[9, 13, 37, 54, 70], Operations: ['24+46=70']\nExploring Operation: 13-9=4, Resulting Numbers: [37, 54, 70, 4]\nGenerated Node #3: [37, 54, 70, 4] from Operation: 13-9=4\nCurrent State: 33:[37, 54, 70, 4], Operations: ['24+46=70', '13-9=4']\nExploring Operation: 70-54=16, Resulting Numbers: [37, 4, 16]\nGenerated Node #4: [37, 4, 16] from Operation: 70-54=16\nCurrent State: 33:[37, 4, 16], Operations: ['24+46=70', '13-9=4', '70-54=16']\nExploring Operation: 16/4=4, Resulting Numbers: [37, 4]\nGenerated Node #5: [37, 4] from Operation: 16/4=4\nCurrent State: 33:[37, 4], Operations: ['24+46=70', '13-9=4', '70-54=16', '16/4=4']\nExploring Operation: 37-4=33, Resulting Numbers: [33]\n33,33 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            71,
            44,
            17,
            54,
            33,
            49
        ],
        "target": 23,
        "solution": [
            "71+44=115",
            "115-17=98",
            "54-33=21",
            "98/49=2",
            "21+2=23"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 23:[71, 44, 17, 54, 33, 49], Operations: []\nExploring Operation: 71+44=115, Resulting Numbers: [17, 54, 33, 49, 115]\nGenerated Node #2: [17, 54, 33, 49, 115] from Operation: 71+44=115\nCurrent State: 23:[17, 54, 33, 49, 115], Operations: ['71+44=115']\nExploring Operation: 115-17=98, Resulting Numbers: [54, 33, 49, 98]\nGenerated Node #3: [54, 33, 49, 98] from Operation: 115-17=98\nCurrent State: 23:[54, 33, 49, 98], Operations: ['71+44=115', '115-17=98']\nExploring Operation: 54-33=21, Resulting Numbers: [49, 98, 21]\nGenerated Node #4: [49, 98, 21] from Operation: 54-33=21\nCurrent State: 23:[49, 98, 21], Operations: ['71+44=115', '115-17=98', '54-33=21']\nExploring Operation: 98/49=2, Resulting Numbers: [21, 2]\nGenerated Node #5: [21, 2] from Operation: 98/49=2\nCurrent State: 23:[21, 2], Operations: ['71+44=115', '115-17=98', '54-33=21', '98/49=2']\nExploring Operation: 21+2=23, Resulting Numbers: [23]\n23,23 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            84,
            93,
            95,
            49,
            51,
            5
        ],
        "target": 97,
        "solution": [
            "93-84=9",
            "95+49=144",
            "51+5=56",
            "9+144=153",
            "153-56=97"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 97:[84, 93, 95, 49, 51, 5], Operations: []\nExploring Operation: 93-84=9, Resulting Numbers: [95, 49, 51, 5, 9]\nGenerated Node #2: [95, 49, 51, 5, 9] from Operation: 93-84=9\nCurrent State: 97:[95, 49, 51, 5, 9], Operations: ['93-84=9']\nExploring Operation: 95+49=144, Resulting Numbers: [51, 5, 9, 144]\nGenerated Node #3: [51, 5, 9, 144] from Operation: 95+49=144\nCurrent State: 97:[51, 5, 9, 144], Operations: ['93-84=9', '95+49=144']\nExploring Operation: 51+5=56, Resulting Numbers: [9, 144, 56]\nGenerated Node #4: [9, 144, 56] from Operation: 51+5=56\nCurrent State: 97:[9, 144, 56], Operations: ['93-84=9', '95+49=144', '51+5=56']\nExploring Operation: 9+144=153, Resulting Numbers: [56, 153]\nGenerated Node #5: [56, 153] from Operation: 9+144=153\nCurrent State: 97:[56, 153], Operations: ['93-84=9', '95+49=144', '51+5=56', '9+144=153']\nExploring Operation: 153-56=97, Resulting Numbers: [97]\n97,97 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            23,
            51,
            33,
            67,
            83,
            54
        ],
        "target": 82,
        "solution": [
            "23+51=74",
            "83-33=50",
            "67*54=3618",
            "74*50=3700",
            "3700-3618=82"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 82:[23, 51, 33, 67, 83, 54], Operations: []\nExploring Operation: 23+51=74, Resulting Numbers: [33, 67, 83, 54, 74]\nGenerated Node #2: [33, 67, 83, 54, 74] from Operation: 23+51=74\nCurrent State: 82:[33, 67, 83, 54, 74], Operations: ['23+51=74']\nExploring Operation: 83-33=50, Resulting Numbers: [67, 54, 74, 50]\nGenerated Node #3: [67, 54, 74, 50] from Operation: 83-33=50\nCurrent State: 82:[67, 54, 74, 50], Operations: ['23+51=74', '83-33=50']\nExploring Operation: 67*54=3618, Resulting Numbers: [74, 50, 3618]\nGenerated Node #4: [74, 50, 3618] from Operation: 67*54=3618\nCurrent State: 82:[74, 50, 3618], Operations: ['23+51=74', '83-33=50', '67*54=3618']\nExploring Operation: 74*50=3700, Resulting Numbers: [3618, 3700]\nGenerated Node #5: [3618, 3700] from Operation: 74*50=3700\nCurrent State: 82:[3618, 3700], Operations: ['23+51=74', '83-33=50', '67*54=3618', '74*50=3700']\nExploring Operation: 3700-3618=82, Resulting Numbers: [82]\n82,82 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            76,
            30,
            3,
            85,
            1,
            95
        ],
        "target": 27,
        "solution": [
            "76*30=2280",
            "3+85=88",
            "1+95=96",
            "2280+96=2376",
            "2376/88=27"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 27:[76, 30, 3, 85, 1, 95], Operations: []\nExploring Operation: 76*30=2280, Resulting Numbers: [3, 85, 1, 95, 2280]\nGenerated Node #2: [3, 85, 1, 95, 2280] from Operation: 76*30=2280\nCurrent State: 27:[3, 85, 1, 95, 2280], Operations: ['76*30=2280']\nExploring Operation: 3+85=88, Resulting Numbers: [1, 95, 2280, 88]\nGenerated Node #3: [1, 95, 2280, 88] from Operation: 3+85=88\nCurrent State: 27:[1, 95, 2280, 88], Operations: ['76*30=2280', '3+85=88']\nExploring Operation: 1+95=96, Resulting Numbers: [2280, 88, 96]\nGenerated Node #4: [2280, 88, 96] from Operation: 1+95=96\nCurrent State: 27:[2280, 88, 96], Operations: ['76*30=2280', '3+85=88', '1+95=96']\nExploring Operation: 2280+96=2376, Resulting Numbers: [88, 2376]\nGenerated Node #5: [88, 2376] from Operation: 2280+96=2376\nCurrent State: 27:[88, 2376], Operations: ['76*30=2280', '3+85=88', '1+95=96', '2280+96=2376']\nExploring Operation: 2376/88=27, Resulting Numbers: [27]\n27,27 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            99,
            95,
            52,
            72,
            8,
            34
        ],
        "target": 63,
        "solution": [
            "99+95=194",
            "72+34=106",
            "194-106=88",
            "88/8=11",
            "52+11=63"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 63:[99, 95, 52, 72, 8, 34], Operations: []\nExploring Operation: 99+95=194, Resulting Numbers: [52, 72, 8, 34, 194]\nGenerated Node #2: [52, 72, 8, 34, 194] from Operation: 99+95=194\nCurrent State: 63:[52, 72, 8, 34, 194], Operations: ['99+95=194']\nExploring Operation: 72+34=106, Resulting Numbers: [52, 8, 194, 106]\nGenerated Node #3: [52, 8, 194, 106] from Operation: 72+34=106\nCurrent State: 63:[52, 8, 194, 106], Operations: ['99+95=194', '72+34=106']\nExploring Operation: 194-106=88, Resulting Numbers: [52, 8, 88]\nGenerated Node #4: [52, 8, 88] from Operation: 194-106=88\nCurrent State: 63:[52, 8, 88], Operations: ['99+95=194', '72+34=106', '194-106=88']\nExploring Operation: 88/8=11, Resulting Numbers: [52, 11]\nGenerated Node #5: [52, 11] from Operation: 88/8=11\nCurrent State: 63:[52, 11], Operations: ['99+95=194', '72+34=106', '194-106=88', '88/8=11']\nExploring Operation: 52+11=63, Resulting Numbers: [63]\n63,63 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            58,
            38,
            1,
            6,
            55,
            56
        ],
        "target": 64,
        "solution": [
            "58+1=59",
            "38-6=32",
            "59-55=4",
            "32/4=8",
            "56+8=64"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 64:[58, 38, 1, 6, 55, 56], Operations: []\nExploring Operation: 58+1=59, Resulting Numbers: [38, 6, 55, 56, 59]\nGenerated Node #2: [38, 6, 55, 56, 59] from Operation: 58+1=59\nCurrent State: 64:[38, 6, 55, 56, 59], Operations: ['58+1=59']\nExploring Operation: 38-6=32, Resulting Numbers: [55, 56, 59, 32]\nGenerated Node #3: [55, 56, 59, 32] from Operation: 38-6=32\nCurrent State: 64:[55, 56, 59, 32], Operations: ['58+1=59', '38-6=32']\nExploring Operation: 59-55=4, Resulting Numbers: [56, 32, 4]\nGenerated Node #4: [56, 32, 4] from Operation: 59-55=4\nCurrent State: 64:[56, 32, 4], Operations: ['58+1=59', '38-6=32', '59-55=4']\nExploring Operation: 32/4=8, Resulting Numbers: [56, 8]\nGenerated Node #5: [56, 8] from Operation: 32/4=8\nCurrent State: 64:[56, 8], Operations: ['58+1=59', '38-6=32', '59-55=4', '32/4=8']\nExploring Operation: 56+8=64, Resulting Numbers: [64]\n64,64 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            14,
            95,
            88,
            62,
            67,
            79
        ],
        "target": 28,
        "solution": [
            "14*95=1330",
            "62+1330=1392",
            "79-67=12",
            "1392/12=116",
            "116-88=28"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 28:[14, 95, 88, 62, 67, 79], Operations: []\nExploring Operation: 14*95=1330, Resulting Numbers: [88, 62, 67, 79, 1330]\nGenerated Node #2: [88, 62, 67, 79, 1330] from Operation: 14*95=1330\nCurrent State: 28:[88, 62, 67, 79, 1330], Operations: ['14*95=1330']\nExploring Operation: 62+1330=1392, Resulting Numbers: [88, 67, 79, 1392]\nGenerated Node #3: [88, 67, 79, 1392] from Operation: 62+1330=1392\nCurrent State: 28:[88, 67, 79, 1392], Operations: ['14*95=1330', '62+1330=1392']\nExploring Operation: 79-67=12, Resulting Numbers: [88, 1392, 12]\nGenerated Node #4: [88, 1392, 12] from Operation: 79-67=12\nCurrent State: 28:[88, 1392, 12], Operations: ['14*95=1330', '62+1330=1392', '79-67=12']\nExploring Operation: 1392/12=116, Resulting Numbers: [88, 116]\nGenerated Node #5: [88, 116] from Operation: 1392/12=116\nCurrent State: 28:[88, 116], Operations: ['14*95=1330', '62+1330=1392', '79-67=12', '1392/12=116']\nExploring Operation: 116-88=28, Resulting Numbers: [28]\n28,28 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            94,
            29,
            84,
            71,
            14,
            4
        ],
        "target": 34,
        "solution": [
            "94-29=65",
            "84+71=155",
            "14*4=56",
            "155-65=90",
            "90-56=34"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 34:[94, 29, 84, 71, 14, 4], Operations: []\nExploring Operation: 94-29=65, Resulting Numbers: [84, 71, 14, 4, 65]\nGenerated Node #2: [84, 71, 14, 4, 65] from Operation: 94-29=65\nCurrent State: 34:[84, 71, 14, 4, 65], Operations: ['94-29=65']\nExploring Operation: 84+71=155, Resulting Numbers: [14, 4, 65, 155]\nGenerated Node #3: [14, 4, 65, 155] from Operation: 84+71=155\nCurrent State: 34:[14, 4, 65, 155], Operations: ['94-29=65', '84+71=155']\nExploring Operation: 14*4=56, Resulting Numbers: [65, 155, 56]\nGenerated Node #4: [65, 155, 56] from Operation: 14*4=56\nCurrent State: 34:[65, 155, 56], Operations: ['94-29=65', '84+71=155', '14*4=56']\nExploring Operation: 155-65=90, Resulting Numbers: [56, 90]\nGenerated Node #5: [56, 90] from Operation: 155-65=90\nCurrent State: 34:[56, 90], Operations: ['94-29=65', '84+71=155', '14*4=56', '155-65=90']\nExploring Operation: 90-56=34, Resulting Numbers: [34]\n34,34 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            15,
            17,
            80,
            82,
            68,
            80
        ],
        "target": 41,
        "solution": [
            "15*17=255",
            "82-80=2",
            "68+80=148",
            "2*148=296",
            "296-255=41"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 41:[15, 17, 80, 82, 68, 80], Operations: []\nExploring Operation: 15*17=255, Resulting Numbers: [80, 82, 68, 80, 255]\nGenerated Node #2: [80, 82, 68, 80, 255] from Operation: 15*17=255\nCurrent State: 41:[80, 82, 68, 80, 255], Operations: ['15*17=255']\nExploring Operation: 82-80=2, Resulting Numbers: [68, 255, 2]\nGenerated Node #3: [68, 255, 2] from Operation: 82-80=2\nCurrent State: 41:[68, 255, 2], Operations: ['15*17=255', '82-80=2']\nExploring Operation: 68+80=148, Resulting Numbers: [255, 2, 148]\nGenerated Node #4: [255, 2, 148] from Operation: 68+80=148\nCurrent State: 41:[255, 2, 148], Operations: ['15*17=255', '82-80=2', '68+80=148']\nExploring Operation: 2*148=296, Resulting Numbers: [255, 296]\nGenerated Node #5: [255, 296] from Operation: 2*148=296\nCurrent State: 41:[255, 296], Operations: ['15*17=255', '82-80=2', '68+80=148', '2*148=296']\nExploring Operation: 296-255=41, Resulting Numbers: [41]\n41,41 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            70,
            63,
            15,
            31,
            78,
            45
        ],
        "target": 46,
        "solution": [
            "70-63=7",
            "45/15=3",
            "7-3=4",
            "31*4=124",
            "124-78=46"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 46:[70, 63, 15, 31, 78, 45], Operations: []\nExploring Operation: 70-63=7, Resulting Numbers: [15, 31, 78, 45, 7]\nGenerated Node #2: [15, 31, 78, 45, 7] from Operation: 70-63=7\nCurrent State: 46:[15, 31, 78, 45, 7], Operations: ['70-63=7']\nExploring Operation: 45/15=3, Resulting Numbers: [31, 78, 7, 3]\nGenerated Node #3: [31, 78, 7, 3] from Operation: 45/15=3\nCurrent State: 46:[31, 78, 7, 3], Operations: ['70-63=7', '45/15=3']\nExploring Operation: 7-3=4, Resulting Numbers: [31, 78, 4]\nGenerated Node #4: [31, 78, 4] from Operation: 7-3=4\nCurrent State: 46:[31, 78, 4], Operations: ['70-63=7', '45/15=3', '7-3=4']\nExploring Operation: 31*4=124, Resulting Numbers: [78, 124]\nGenerated Node #5: [78, 124] from Operation: 31*4=124\nCurrent State: 46:[78, 124], Operations: ['70-63=7', '45/15=3', '7-3=4', '31*4=124']\nExploring Operation: 124-78=46, Resulting Numbers: [46]\n46,46 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            39,
            19,
            95,
            79,
            35,
            27
        ],
        "target": 65,
        "solution": [
            "39+19=58",
            "95+79=174",
            "35+27=62",
            "174/58=3",
            "62+3=65"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 65:[39, 19, 95, 79, 35, 27], Operations: []\nExploring Operation: 39+19=58, Resulting Numbers: [95, 79, 35, 27, 58]\nGenerated Node #2: [95, 79, 35, 27, 58] from Operation: 39+19=58\nCurrent State: 65:[95, 79, 35, 27, 58], Operations: ['39+19=58']\nExploring Operation: 95+79=174, Resulting Numbers: [35, 27, 58, 174]\nGenerated Node #3: [35, 27, 58, 174] from Operation: 95+79=174\nCurrent State: 65:[35, 27, 58, 174], Operations: ['39+19=58', '95+79=174']\nExploring Operation: 35+27=62, Resulting Numbers: [58, 174, 62]\nGenerated Node #4: [58, 174, 62] from Operation: 35+27=62\nCurrent State: 65:[58, 174, 62], Operations: ['39+19=58', '95+79=174', '35+27=62']\nExploring Operation: 174/58=3, Resulting Numbers: [62, 3]\nGenerated Node #5: [62, 3] from Operation: 174/58=3\nCurrent State: 65:[62, 3], Operations: ['39+19=58', '95+79=174', '35+27=62', '174/58=3']\nExploring Operation: 62+3=65, Resulting Numbers: [65]\n65,65 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            86,
            21,
            40,
            3,
            46,
            74
        ],
        "target": 77,
        "solution": [
            "86+21=107",
            "40+46=86",
            "3*86=258",
            "74+107=181",
            "258-181=77"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 77:[86, 21, 40, 3, 46, 74], Operations: []\nExploring Operation: 86+21=107, Resulting Numbers: [40, 3, 46, 74, 107]\nGenerated Node #2: [40, 3, 46, 74, 107] from Operation: 86+21=107\nCurrent State: 77:[40, 3, 46, 74, 107], Operations: ['86+21=107']\nExploring Operation: 40+46=86, Resulting Numbers: [3, 74, 107, 86]\nGenerated Node #3: [3, 74, 107, 86] from Operation: 40+46=86\nCurrent State: 77:[3, 74, 107, 86], Operations: ['86+21=107', '40+46=86']\nExploring Operation: 3*86=258, Resulting Numbers: [74, 107, 258]\nGenerated Node #4: [74, 107, 258] from Operation: 3*86=258\nCurrent State: 77:[74, 107, 258], Operations: ['86+21=107', '40+46=86', '3*86=258']\nExploring Operation: 74+107=181, Resulting Numbers: [258, 181]\nGenerated Node #5: [258, 181] from Operation: 74+107=181\nCurrent State: 77:[258, 181], Operations: ['86+21=107', '40+46=86', '3*86=258', '74+107=181']\nExploring Operation: 258-181=77, Resulting Numbers: [77]\n77,77 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            87,
            1,
            54,
            17,
            19,
            63
        ],
        "target": 42,
        "solution": [
            "87+1=88",
            "88-54=34",
            "34/17=2",
            "63-19=44",
            "44-2=42"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 42:[87, 1, 54, 17, 19, 63], Operations: []\nExploring Operation: 87+1=88, Resulting Numbers: [54, 17, 19, 63, 88]\nGenerated Node #2: [54, 17, 19, 63, 88] from Operation: 87+1=88\nCurrent State: 42:[54, 17, 19, 63, 88], Operations: ['87+1=88']\nExploring Operation: 88-54=34, Resulting Numbers: [17, 19, 63, 34]\nGenerated Node #3: [17, 19, 63, 34] from Operation: 88-54=34\nCurrent State: 42:[17, 19, 63, 34], Operations: ['87+1=88', '88-54=34']\nExploring Operation: 34/17=2, Resulting Numbers: [19, 63, 2]\nGenerated Node #4: [19, 63, 2] from Operation: 34/17=2\nCurrent State: 42:[19, 63, 2], Operations: ['87+1=88', '88-54=34', '34/17=2']\nExploring Operation: 63-19=44, Resulting Numbers: [2, 44]\nGenerated Node #5: [2, 44] from Operation: 63-19=44\nCurrent State: 42:[2, 44], Operations: ['87+1=88', '88-54=34', '34/17=2', '63-19=44']\nExploring Operation: 44-2=42, Resulting Numbers: [42]\n42,42 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            20,
            50,
            59,
            34,
            45,
            36
        ],
        "target": 81,
        "solution": [
            "20+50=70",
            "59-34=25",
            "36*70=2520",
            "2520/45=56",
            "25+56=81"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 81:[20, 50, 59, 34, 45, 36], Operations: []\nExploring Operation: 20+50=70, Resulting Numbers: [59, 34, 45, 36, 70]\nGenerated Node #2: [59, 34, 45, 36, 70] from Operation: 20+50=70\nCurrent State: 81:[59, 34, 45, 36, 70], Operations: ['20+50=70']\nExploring Operation: 59-34=25, Resulting Numbers: [45, 36, 70, 25]\nGenerated Node #3: [45, 36, 70, 25] from Operation: 59-34=25\nCurrent State: 81:[45, 36, 70, 25], Operations: ['20+50=70', '59-34=25']\nExploring Operation: 36*70=2520, Resulting Numbers: [45, 25, 2520]\nGenerated Node #4: [45, 25, 2520] from Operation: 36*70=2520\nCurrent State: 81:[45, 25, 2520], Operations: ['20+50=70', '59-34=25', '36*70=2520']\nExploring Operation: 2520/45=56, Resulting Numbers: [25, 56]\nGenerated Node #5: [25, 56] from Operation: 2520/45=56\nCurrent State: 81:[25, 56], Operations: ['20+50=70', '59-34=25', '36*70=2520', '2520/45=56']\nExploring Operation: 25+56=81, Resulting Numbers: [81]\n81,81 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            71,
            95,
            56,
            75,
            59,
            63
        ],
        "target": 48,
        "solution": [
            "95-71=24",
            "59-24=35",
            "75*35=2625",
            "63+2625=2688",
            "2688/56=48"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 48:[71, 95, 56, 75, 59, 63], Operations: []\nExploring Operation: 95-71=24, Resulting Numbers: [56, 75, 59, 63, 24]\nGenerated Node #2: [56, 75, 59, 63, 24] from Operation: 95-71=24\nCurrent State: 48:[56, 75, 59, 63, 24], Operations: ['95-71=24']\nExploring Operation: 59-24=35, Resulting Numbers: [56, 75, 63, 35]\nGenerated Node #3: [56, 75, 63, 35] from Operation: 59-24=35\nCurrent State: 48:[56, 75, 63, 35], Operations: ['95-71=24', '59-24=35']\nExploring Operation: 75*35=2625, Resulting Numbers: [56, 63, 2625]\nGenerated Node #4: [56, 63, 2625] from Operation: 75*35=2625\nCurrent State: 48:[56, 63, 2625], Operations: ['95-71=24', '59-24=35', '75*35=2625']\nExploring Operation: 63+2625=2688, Resulting Numbers: [56, 2688]\nGenerated Node #5: [56, 2688] from Operation: 63+2625=2688\nCurrent State: 48:[56, 2688], Operations: ['95-71=24', '59-24=35', '75*35=2625', '63+2625=2688']\nExploring Operation: 2688/56=48, Resulting Numbers: [48]\n48,48 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            99,
            31,
            79,
            4,
            76,
            66
        ],
        "target": 39,
        "solution": [
            "99-31=68",
            "79-76=3",
            "68/4=17",
            "66/3=22",
            "17+22=39"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 39:[99, 31, 79, 4, 76, 66], Operations: []\nExploring Operation: 99-31=68, Resulting Numbers: [79, 4, 76, 66, 68]\nGenerated Node #2: [79, 4, 76, 66, 68] from Operation: 99-31=68\nCurrent State: 39:[79, 4, 76, 66, 68], Operations: ['99-31=68']\nExploring Operation: 79-76=3, Resulting Numbers: [4, 66, 68, 3]\nGenerated Node #3: [4, 66, 68, 3] from Operation: 79-76=3\nCurrent State: 39:[4, 66, 68, 3], Operations: ['99-31=68', '79-76=3']\nExploring Operation: 68/4=17, Resulting Numbers: [66, 3, 17]\nGenerated Node #4: [66, 3, 17] from Operation: 68/4=17\nCurrent State: 39:[66, 3, 17], Operations: ['99-31=68', '79-76=3', '68/4=17']\nExploring Operation: 66/3=22, Resulting Numbers: [17, 22]\nGenerated Node #5: [17, 22] from Operation: 66/3=22\nCurrent State: 39:[17, 22], Operations: ['99-31=68', '79-76=3', '68/4=17', '66/3=22']\nExploring Operation: 17+22=39, Resulting Numbers: [39]\n39,39 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            5,
            64,
            42,
            40,
            60,
            7
        ],
        "target": 45,
        "solution": [
            "5+64=69",
            "42-40=2",
            "69-60=9",
            "7-2=5",
            "9*5=45"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 45:[5, 64, 42, 40, 60, 7], Operations: []\nExploring Operation: 5+64=69, Resulting Numbers: [42, 40, 60, 7, 69]\nGenerated Node #2: [42, 40, 60, 7, 69] from Operation: 5+64=69\nCurrent State: 45:[42, 40, 60, 7, 69], Operations: ['5+64=69']\nExploring Operation: 42-40=2, Resulting Numbers: [60, 7, 69, 2]\nGenerated Node #3: [60, 7, 69, 2] from Operation: 42-40=2\nCurrent State: 45:[60, 7, 69, 2], Operations: ['5+64=69', '42-40=2']\nExploring Operation: 69-60=9, Resulting Numbers: [7, 2, 9]\nGenerated Node #4: [7, 2, 9] from Operation: 69-60=9\nCurrent State: 45:[7, 2, 9], Operations: ['5+64=69', '42-40=2', '69-60=9']\nExploring Operation: 7-2=5, Resulting Numbers: [9, 5]\nGenerated Node #5: [9, 5] from Operation: 7-2=5\nCurrent State: 45:[9, 5], Operations: ['5+64=69', '42-40=2', '69-60=9', '7-2=5']\nExploring Operation: 9*5=45, Resulting Numbers: [45]\n45,45 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            36,
            1,
            18,
            63,
            43,
            29
        ],
        "target": 35,
        "solution": [
            "36+1=37",
            "63-43=20",
            "29-20=9",
            "18/9=2",
            "37-2=35"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 35:[36, 1, 18, 63, 43, 29], Operations: []\nExploring Operation: 36+1=37, Resulting Numbers: [18, 63, 43, 29, 37]\nGenerated Node #2: [18, 63, 43, 29, 37] from Operation: 36+1=37\nCurrent State: 35:[18, 63, 43, 29, 37], Operations: ['36+1=37']\nExploring Operation: 63-43=20, Resulting Numbers: [18, 29, 37, 20]\nGenerated Node #3: [18, 29, 37, 20] from Operation: 63-43=20\nCurrent State: 35:[18, 29, 37, 20], Operations: ['36+1=37', '63-43=20']\nExploring Operation: 29-20=9, Resulting Numbers: [18, 37, 9]\nGenerated Node #4: [18, 37, 9] from Operation: 29-20=9\nCurrent State: 35:[18, 37, 9], Operations: ['36+1=37', '63-43=20', '29-20=9']\nExploring Operation: 18/9=2, Resulting Numbers: [37, 2]\nGenerated Node #5: [37, 2] from Operation: 18/9=2\nCurrent State: 35:[37, 2], Operations: ['36+1=37', '63-43=20', '29-20=9', '18/9=2']\nExploring Operation: 37-2=35, Resulting Numbers: [35]\n35,35 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            97,
            87,
            26,
            16,
            64,
            51
        ],
        "target": 45,
        "solution": [
            "97-87=10",
            "26+16=42",
            "64-51=13",
            "42-10=32",
            "13+32=45"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 45:[97, 87, 26, 16, 64, 51], Operations: []\nExploring Operation: 97-87=10, Resulting Numbers: [26, 16, 64, 51, 10]\nGenerated Node #2: [26, 16, 64, 51, 10] from Operation: 97-87=10\nCurrent State: 45:[26, 16, 64, 51, 10], Operations: ['97-87=10']\nExploring Operation: 26+16=42, Resulting Numbers: [64, 51, 10, 42]\nGenerated Node #3: [64, 51, 10, 42] from Operation: 26+16=42\nCurrent State: 45:[64, 51, 10, 42], Operations: ['97-87=10', '26+16=42']\nExploring Operation: 64-51=13, Resulting Numbers: [10, 42, 13]\nGenerated Node #4: [10, 42, 13] from Operation: 64-51=13\nCurrent State: 45:[10, 42, 13], Operations: ['97-87=10', '26+16=42', '64-51=13']\nExploring Operation: 42-10=32, Resulting Numbers: [13, 32]\nGenerated Node #5: [13, 32] from Operation: 42-10=32\nCurrent State: 45:[13, 32], Operations: ['97-87=10', '26+16=42', '64-51=13', '42-10=32']\nExploring Operation: 13+32=45, Resulting Numbers: [45]\n45,45 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            35,
            26,
            65,
            71,
            91,
            15
        ],
        "target": 85,
        "solution": [
            "35*26=910",
            "65*15=975",
            "91-71=20",
            "975-910=65",
            "20+65=85"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 85:[35, 26, 65, 71, 91, 15], Operations: []\nExploring Operation: 35*26=910, Resulting Numbers: [65, 71, 91, 15, 910]\nGenerated Node #2: [65, 71, 91, 15, 910] from Operation: 35*26=910\nCurrent State: 85:[65, 71, 91, 15, 910], Operations: ['35*26=910']\nExploring Operation: 65*15=975, Resulting Numbers: [71, 91, 910, 975]\nGenerated Node #3: [71, 91, 910, 975] from Operation: 65*15=975\nCurrent State: 85:[71, 91, 910, 975], Operations: ['35*26=910', '65*15=975']\nExploring Operation: 91-71=20, Resulting Numbers: [910, 975, 20]\nGenerated Node #4: [910, 975, 20] from Operation: 91-71=20\nCurrent State: 85:[910, 975, 20], Operations: ['35*26=910', '65*15=975', '91-71=20']\nExploring Operation: 975-910=65, Resulting Numbers: [20, 65]\nGenerated Node #5: [20, 65] from Operation: 975-910=65\nCurrent State: 85:[20, 65], Operations: ['35*26=910', '65*15=975', '91-71=20', '975-910=65']\nExploring Operation: 20+65=85, Resulting Numbers: [85]\n85,85 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            34,
            93,
            10,
            98,
            21,
            76
        ],
        "target": 67,
        "solution": [
            "34-10=24",
            "98-93=5",
            "21+24=45",
            "45/5=9",
            "76-9=67"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 67:[34, 93, 10, 98, 21, 76], Operations: []\nExploring Operation: 34-10=24, Resulting Numbers: [93, 98, 21, 76, 24]\nGenerated Node #2: [93, 98, 21, 76, 24] from Operation: 34-10=24\nCurrent State: 67:[93, 98, 21, 76, 24], Operations: ['34-10=24']\nExploring Operation: 98-93=5, Resulting Numbers: [21, 76, 24, 5]\nGenerated Node #3: [21, 76, 24, 5] from Operation: 98-93=5\nCurrent State: 67:[21, 76, 24, 5], Operations: ['34-10=24', '98-93=5']\nExploring Operation: 21+24=45, Resulting Numbers: [76, 5, 45]\nGenerated Node #4: [76, 5, 45] from Operation: 21+24=45\nCurrent State: 67:[76, 5, 45], Operations: ['34-10=24', '98-93=5', '21+24=45']\nExploring Operation: 45/5=9, Resulting Numbers: [76, 9]\nGenerated Node #5: [76, 9] from Operation: 45/5=9\nCurrent State: 67:[76, 9], Operations: ['34-10=24', '98-93=5', '21+24=45', '45/5=9']\nExploring Operation: 76-9=67, Resulting Numbers: [67]\n67,67 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            26,
            68,
            38,
            89,
            55,
            14
        ],
        "target": 13,
        "solution": [
            "26+68=94",
            "38*14=532",
            "89+94=183",
            "532+183=715",
            "715/55=13"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 13:[26, 68, 38, 89, 55, 14], Operations: []\nExploring Operation: 26+68=94, Resulting Numbers: [38, 89, 55, 14, 94]\nGenerated Node #2: [38, 89, 55, 14, 94] from Operation: 26+68=94\nCurrent State: 13:[38, 89, 55, 14, 94], Operations: ['26+68=94']\nExploring Operation: 38*14=532, Resulting Numbers: [89, 55, 94, 532]\nGenerated Node #3: [89, 55, 94, 532] from Operation: 38*14=532\nCurrent State: 13:[89, 55, 94, 532], Operations: ['26+68=94', '38*14=532']\nExploring Operation: 89+94=183, Resulting Numbers: [55, 532, 183]\nGenerated Node #4: [55, 532, 183] from Operation: 89+94=183\nCurrent State: 13:[55, 532, 183], Operations: ['26+68=94', '38*14=532', '89+94=183']\nExploring Operation: 532+183=715, Resulting Numbers: [55, 715]\nGenerated Node #5: [55, 715] from Operation: 532+183=715\nCurrent State: 13:[55, 715], Operations: ['26+68=94', '38*14=532', '89+94=183', '532+183=715']\nExploring Operation: 715/55=13, Resulting Numbers: [13]\n13,13 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            93,
            5,
            3,
            54,
            72,
            11
        ],
        "target": 13,
        "solution": [
            "93+5=98",
            "54+72=126",
            "98-11=87",
            "126-87=39",
            "39/3=13"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 13:[93, 5, 3, 54, 72, 11], Operations: []\nExploring Operation: 93+5=98, Resulting Numbers: [3, 54, 72, 11, 98]\nGenerated Node #2: [3, 54, 72, 11, 98] from Operation: 93+5=98\nCurrent State: 13:[3, 54, 72, 11, 98], Operations: ['93+5=98']\nExploring Operation: 54+72=126, Resulting Numbers: [3, 11, 98, 126]\nGenerated Node #3: [3, 11, 98, 126] from Operation: 54+72=126\nCurrent State: 13:[3, 11, 98, 126], Operations: ['93+5=98', '54+72=126']\nExploring Operation: 98-11=87, Resulting Numbers: [3, 126, 87]\nGenerated Node #4: [3, 126, 87] from Operation: 98-11=87\nCurrent State: 13:[3, 126, 87], Operations: ['93+5=98', '54+72=126', '98-11=87']\nExploring Operation: 126-87=39, Resulting Numbers: [3, 39]\nGenerated Node #5: [3, 39] from Operation: 126-87=39\nCurrent State: 13:[3, 39], Operations: ['93+5=98', '54+72=126', '98-11=87', '126-87=39']\nExploring Operation: 39/3=13, Resulting Numbers: [13]\n13,13 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            18,
            41,
            85,
            96,
            36,
            63
        ],
        "target": 76,
        "solution": [
            "85-18=67",
            "96-41=55",
            "55-36=19",
            "67-63=4",
            "19*4=76"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 76:[18, 41, 85, 96, 36, 63], Operations: []\nExploring Operation: 85-18=67, Resulting Numbers: [41, 96, 36, 63, 67]\nGenerated Node #2: [41, 96, 36, 63, 67] from Operation: 85-18=67\nCurrent State: 76:[41, 96, 36, 63, 67], Operations: ['85-18=67']\nExploring Operation: 96-41=55, Resulting Numbers: [36, 63, 67, 55]\nGenerated Node #3: [36, 63, 67, 55] from Operation: 96-41=55\nCurrent State: 76:[36, 63, 67, 55], Operations: ['85-18=67', '96-41=55']\nExploring Operation: 55-36=19, Resulting Numbers: [63, 67, 19]\nGenerated Node #4: [63, 67, 19] from Operation: 55-36=19\nCurrent State: 76:[63, 67, 19], Operations: ['85-18=67', '96-41=55', '55-36=19']\nExploring Operation: 67-63=4, Resulting Numbers: [19, 4]\nGenerated Node #5: [19, 4] from Operation: 67-63=4\nCurrent State: 76:[19, 4], Operations: ['85-18=67', '96-41=55', '55-36=19', '67-63=4']\nExploring Operation: 19*4=76, Resulting Numbers: [76]\n76,76 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            88,
            53,
            35,
            49,
            94,
            27
        ],
        "target": 29,
        "solution": [
            "88+53=141",
            "35+49=84",
            "94*84=7896",
            "7896/141=56",
            "56-27=29"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 29:[88, 53, 35, 49, 94, 27], Operations: []\nExploring Operation: 88+53=141, Resulting Numbers: [35, 49, 94, 27, 141]\nGenerated Node #2: [35, 49, 94, 27, 141] from Operation: 88+53=141\nCurrent State: 29:[35, 49, 94, 27, 141], Operations: ['88+53=141']\nExploring Operation: 35+49=84, Resulting Numbers: [94, 27, 141, 84]\nGenerated Node #3: [94, 27, 141, 84] from Operation: 35+49=84\nCurrent State: 29:[94, 27, 141, 84], Operations: ['88+53=141', '35+49=84']\nExploring Operation: 94*84=7896, Resulting Numbers: [27, 141, 7896]\nGenerated Node #4: [27, 141, 7896] from Operation: 94*84=7896\nCurrent State: 29:[27, 141, 7896], Operations: ['88+53=141', '35+49=84', '94*84=7896']\nExploring Operation: 7896/141=56, Resulting Numbers: [27, 56]\nGenerated Node #5: [27, 56] from Operation: 7896/141=56\nCurrent State: 29:[27, 56], Operations: ['88+53=141', '35+49=84', '94*84=7896', '7896/141=56']\nExploring Operation: 56-27=29, Resulting Numbers: [29]\n29,29 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            62,
            63,
            89,
            65,
            41,
            64
        ],
        "target": 99,
        "solution": [
            "65-62=3",
            "63+41=104",
            "89*3=267",
            "64+104=168",
            "267-168=99"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 99:[62, 63, 89, 65, 41, 64], Operations: []\nExploring Operation: 65-62=3, Resulting Numbers: [63, 89, 41, 64, 3]\nGenerated Node #2: [63, 89, 41, 64, 3] from Operation: 65-62=3\nCurrent State: 99:[63, 89, 41, 64, 3], Operations: ['65-62=3']\nExploring Operation: 63+41=104, Resulting Numbers: [89, 64, 3, 104]\nGenerated Node #3: [89, 64, 3, 104] from Operation: 63+41=104\nCurrent State: 99:[89, 64, 3, 104], Operations: ['65-62=3', '63+41=104']\nExploring Operation: 89*3=267, Resulting Numbers: [64, 104, 267]\nGenerated Node #4: [64, 104, 267] from Operation: 89*3=267\nCurrent State: 99:[64, 104, 267], Operations: ['65-62=3', '63+41=104', '89*3=267']\nExploring Operation: 64+104=168, Resulting Numbers: [267, 168]\nGenerated Node #5: [267, 168] from Operation: 64+104=168\nCurrent State: 99:[267, 168], Operations: ['65-62=3', '63+41=104', '89*3=267', '64+104=168']\nExploring Operation: 267-168=99, Resulting Numbers: [99]\n99,99 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            70,
            27,
            82,
            1,
            86,
            18
        ],
        "target": 13,
        "solution": [
            "70+82=152",
            "18-1=17",
            "86+152=238",
            "238/17=14",
            "27-14=13"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 13:[70, 27, 82, 1, 86, 18], Operations: []\nExploring Operation: 70+82=152, Resulting Numbers: [27, 1, 86, 18, 152]\nGenerated Node #2: [27, 1, 86, 18, 152] from Operation: 70+82=152\nCurrent State: 13:[27, 1, 86, 18, 152], Operations: ['70+82=152']\nExploring Operation: 18-1=17, Resulting Numbers: [27, 86, 152, 17]\nGenerated Node #3: [27, 86, 152, 17] from Operation: 18-1=17\nCurrent State: 13:[27, 86, 152, 17], Operations: ['70+82=152', '18-1=17']\nExploring Operation: 86+152=238, Resulting Numbers: [27, 17, 238]\nGenerated Node #4: [27, 17, 238] from Operation: 86+152=238\nCurrent State: 13:[27, 17, 238], Operations: ['70+82=152', '18-1=17', '86+152=238']\nExploring Operation: 238/17=14, Resulting Numbers: [27, 14]\nGenerated Node #5: [27, 14] from Operation: 238/17=14\nCurrent State: 13:[27, 14], Operations: ['70+82=152', '18-1=17', '86+152=238', '238/17=14']\nExploring Operation: 27-14=13, Resulting Numbers: [13]\n13,13 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            46,
            99,
            61,
            81,
            67,
            97
        ],
        "target": 84,
        "solution": [
            "46+67=113",
            "99-97=2",
            "61+81=142",
            "113*2=226",
            "226-142=84"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 84:[46, 99, 61, 81, 67, 97], Operations: []\nExploring Operation: 46+67=113, Resulting Numbers: [99, 61, 81, 97, 113]\nGenerated Node #2: [99, 61, 81, 97, 113] from Operation: 46+67=113\nCurrent State: 84:[99, 61, 81, 97, 113], Operations: ['46+67=113']\nExploring Operation: 99-97=2, Resulting Numbers: [61, 81, 113, 2]\nGenerated Node #3: [61, 81, 113, 2] from Operation: 99-97=2\nCurrent State: 84:[61, 81, 113, 2], Operations: ['46+67=113', '99-97=2']\nExploring Operation: 61+81=142, Resulting Numbers: [113, 2, 142]\nGenerated Node #4: [113, 2, 142] from Operation: 61+81=142\nCurrent State: 84:[113, 2, 142], Operations: ['46+67=113', '99-97=2', '61+81=142']\nExploring Operation: 113*2=226, Resulting Numbers: [142, 226]\nGenerated Node #5: [142, 226] from Operation: 113*2=226\nCurrent State: 84:[142, 226], Operations: ['46+67=113', '99-97=2', '61+81=142', '113*2=226']\nExploring Operation: 226-142=84, Resulting Numbers: [84]\n84,84 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            85,
            95,
            62,
            47,
            87,
            61
        ],
        "target": 78,
        "solution": [
            "87-85=2",
            "95*62=5890",
            "47*61=2867",
            "5890/2=2945",
            "2945-2867=78"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 78:[85, 95, 62, 47, 87, 61], Operations: []\nExploring Operation: 87-85=2, Resulting Numbers: [95, 62, 47, 61, 2]\nGenerated Node #2: [95, 62, 47, 61, 2] from Operation: 87-85=2\nCurrent State: 78:[95, 62, 47, 61, 2], Operations: ['87-85=2']\nExploring Operation: 95*62=5890, Resulting Numbers: [47, 61, 2, 5890]\nGenerated Node #3: [47, 61, 2, 5890] from Operation: 95*62=5890\nCurrent State: 78:[47, 61, 2, 5890], Operations: ['87-85=2', '95*62=5890']\nExploring Operation: 47*61=2867, Resulting Numbers: [2, 5890, 2867]\nGenerated Node #4: [2, 5890, 2867] from Operation: 47*61=2867\nCurrent State: 78:[2, 5890, 2867], Operations: ['87-85=2', '95*62=5890', '47*61=2867']\nExploring Operation: 5890/2=2945, Resulting Numbers: [2867, 2945]\nGenerated Node #5: [2867, 2945] from Operation: 5890/2=2945\nCurrent State: 78:[2867, 2945], Operations: ['87-85=2', '95*62=5890', '47*61=2867', '5890/2=2945']\nExploring Operation: 2945-2867=78, Resulting Numbers: [78]\n78,78 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            61,
            16,
            66,
            58,
            61,
            23
        ],
        "target": 15,
        "solution": [
            "61+16=77",
            "66-58=8",
            "61+23=84",
            "77-8=69",
            "84-69=15"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 15:[61, 16, 66, 58, 61, 23], Operations: []\nExploring Operation: 61+16=77, Resulting Numbers: [66, 58, 23, 77]\nGenerated Node #2: [66, 58, 23, 77] from Operation: 61+16=77\nCurrent State: 15:[66, 58, 23, 77], Operations: ['61+16=77']\nExploring Operation: 66-58=8, Resulting Numbers: [23, 77, 8]\nGenerated Node #3: [23, 77, 8] from Operation: 66-58=8\nCurrent State: 15:[23, 77, 8], Operations: ['61+16=77', '66-58=8']\nExploring Operation: 61+23=84, Resulting Numbers: [77, 8, 84]\nGenerated Node #4: [77, 8, 84] from Operation: 61+23=84\nCurrent State: 15:[77, 8, 84], Operations: ['61+16=77', '66-58=8', '61+23=84']\nExploring Operation: 77-8=69, Resulting Numbers: [84, 69]\nGenerated Node #5: [84, 69] from Operation: 77-8=69\nCurrent State: 15:[84, 69], Operations: ['61+16=77', '66-58=8', '61+23=84', '77-8=69']\nExploring Operation: 84-69=15, Resulting Numbers: [15]\n15,15 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            61,
            31,
            11,
            92,
            68,
            34
        ],
        "target": 33,
        "solution": [
            "61+31=92",
            "92/92=1",
            "68/34=2",
            "1+2=3",
            "11*3=33"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 33:[61, 31, 11, 92, 68, 34], Operations: []\nExploring Operation: 61+31=92, Resulting Numbers: [11, 92, 68, 34, 92]\nGenerated Node #2: [11, 92, 68, 34, 92] from Operation: 61+31=92\nCurrent State: 33:[11, 92, 68, 34, 92], Operations: ['61+31=92']\nExploring Operation: 92/92=1, Resulting Numbers: [11, 68, 34, 1]\nGenerated Node #3: [11, 68, 34, 1] from Operation: 92/92=1\nCurrent State: 33:[11, 68, 34, 1], Operations: ['61+31=92', '92/92=1']\nExploring Operation: 68/34=2, Resulting Numbers: [11, 1, 2]\nGenerated Node #4: [11, 1, 2] from Operation: 68/34=2\nCurrent State: 33:[11, 1, 2], Operations: ['61+31=92', '92/92=1', '68/34=2']\nExploring Operation: 1+2=3, Resulting Numbers: [11, 3]\nGenerated Node #5: [11, 3] from Operation: 1+2=3\nCurrent State: 33:[11, 3], Operations: ['61+31=92', '92/92=1', '68/34=2', '1+2=3']\nExploring Operation: 11*3=33, Resulting Numbers: [33]\n33,33 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            54,
            20,
            94,
            4,
            58,
            56
        ],
        "target": 60,
        "solution": [
            "54*20=1080",
            "94+58=152",
            "152/4=38",
            "56-38=18",
            "1080/18=60"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 60:[54, 20, 94, 4, 58, 56], Operations: []\nExploring Operation: 54*20=1080, Resulting Numbers: [94, 4, 58, 56, 1080]\nGenerated Node #2: [94, 4, 58, 56, 1080] from Operation: 54*20=1080\nCurrent State: 60:[94, 4, 58, 56, 1080], Operations: ['54*20=1080']\nExploring Operation: 94+58=152, Resulting Numbers: [4, 56, 1080, 152]\nGenerated Node #3: [4, 56, 1080, 152] from Operation: 94+58=152\nCurrent State: 60:[4, 56, 1080, 152], Operations: ['54*20=1080', '94+58=152']\nExploring Operation: 152/4=38, Resulting Numbers: [56, 1080, 38]\nGenerated Node #4: [56, 1080, 38] from Operation: 152/4=38\nCurrent State: 60:[56, 1080, 38], Operations: ['54*20=1080', '94+58=152', '152/4=38']\nExploring Operation: 56-38=18, Resulting Numbers: [1080, 18]\nGenerated Node #5: [1080, 18] from Operation: 56-38=18\nCurrent State: 60:[1080, 18], Operations: ['54*20=1080', '94+58=152', '152/4=38', '56-38=18']\nExploring Operation: 1080/18=60, Resulting Numbers: [60]\n60,60 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            69,
            44,
            16,
            68,
            32,
            98
        ],
        "target": 31,
        "solution": [
            "69-16=53",
            "68+32=100",
            "100-98=2",
            "44/2=22",
            "53-22=31"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 31:[69, 44, 16, 68, 32, 98], Operations: []\nExploring Operation: 69-16=53, Resulting Numbers: [44, 68, 32, 98, 53]\nGenerated Node #2: [44, 68, 32, 98, 53] from Operation: 69-16=53\nCurrent State: 31:[44, 68, 32, 98, 53], Operations: ['69-16=53']\nExploring Operation: 68+32=100, Resulting Numbers: [44, 98, 53, 100]\nGenerated Node #3: [44, 98, 53, 100] from Operation: 68+32=100\nCurrent State: 31:[44, 98, 53, 100], Operations: ['69-16=53', '68+32=100']\nExploring Operation: 100-98=2, Resulting Numbers: [44, 53, 2]\nGenerated Node #4: [44, 53, 2] from Operation: 100-98=2\nCurrent State: 31:[44, 53, 2], Operations: ['69-16=53', '68+32=100', '100-98=2']\nExploring Operation: 44/2=22, Resulting Numbers: [53, 22]\nGenerated Node #5: [53, 22] from Operation: 44/2=22\nCurrent State: 31:[53, 22], Operations: ['69-16=53', '68+32=100', '100-98=2', '44/2=22']\nExploring Operation: 53-22=31, Resulting Numbers: [31]\n31,31 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            75,
            6,
            13,
            46,
            85,
            60
        ],
        "target": 37,
        "solution": [
            "75+6=81",
            "46+85=131",
            "60*81=4860",
            "4860-13=4847",
            "4847/131=37"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 37:[75, 6, 13, 46, 85, 60], Operations: []\nExploring Operation: 75+6=81, Resulting Numbers: [13, 46, 85, 60, 81]\nGenerated Node #2: [13, 46, 85, 60, 81] from Operation: 75+6=81\nCurrent State: 37:[13, 46, 85, 60, 81], Operations: ['75+6=81']\nExploring Operation: 46+85=131, Resulting Numbers: [13, 60, 81, 131]\nGenerated Node #3: [13, 60, 81, 131] from Operation: 46+85=131\nCurrent State: 37:[13, 60, 81, 131], Operations: ['75+6=81', '46+85=131']\nExploring Operation: 60*81=4860, Resulting Numbers: [13, 131, 4860]\nGenerated Node #4: [13, 131, 4860] from Operation: 60*81=4860\nCurrent State: 37:[13, 131, 4860], Operations: ['75+6=81', '46+85=131', '60*81=4860']\nExploring Operation: 4860-13=4847, Resulting Numbers: [131, 4847]\nGenerated Node #5: [131, 4847] from Operation: 4860-13=4847\nCurrent State: 37:[131, 4847], Operations: ['75+6=81', '46+85=131', '60*81=4860', '4860-13=4847']\nExploring Operation: 4847/131=37, Resulting Numbers: [37]\n37,37 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            17,
            38,
            15,
            62,
            94,
            31
        ],
        "target": 49,
        "solution": [
            "17-15=2",
            "38*2=76",
            "62+94=156",
            "31+76=107",
            "156-107=49"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 49:[17, 38, 15, 62, 94, 31], Operations: []\nExploring Operation: 17-15=2, Resulting Numbers: [38, 62, 94, 31, 2]\nGenerated Node #2: [38, 62, 94, 31, 2] from Operation: 17-15=2\nCurrent State: 49:[38, 62, 94, 31, 2], Operations: ['17-15=2']\nExploring Operation: 38*2=76, Resulting Numbers: [62, 94, 31, 76]\nGenerated Node #3: [62, 94, 31, 76] from Operation: 38*2=76\nCurrent State: 49:[62, 94, 31, 76], Operations: ['17-15=2', '38*2=76']\nExploring Operation: 62+94=156, Resulting Numbers: [31, 76, 156]\nGenerated Node #4: [31, 76, 156] from Operation: 62+94=156\nCurrent State: 49:[31, 76, 156], Operations: ['17-15=2', '38*2=76', '62+94=156']\nExploring Operation: 31+76=107, Resulting Numbers: [156, 107]\nGenerated Node #5: [156, 107] from Operation: 31+76=107\nCurrent State: 49:[156, 107], Operations: ['17-15=2', '38*2=76', '62+94=156', '31+76=107']\nExploring Operation: 156-107=49, Resulting Numbers: [49]\n49,49 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            35,
            93,
            45,
            71,
            26,
            28
        ],
        "target": 33,
        "solution": [
            "35+93=128",
            "71+26=97",
            "128+97=225",
            "225/45=5",
            "28+5=33"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 33:[35, 93, 45, 71, 26, 28], Operations: []\nExploring Operation: 35+93=128, Resulting Numbers: [45, 71, 26, 28, 128]\nGenerated Node #2: [45, 71, 26, 28, 128] from Operation: 35+93=128\nCurrent State: 33:[45, 71, 26, 28, 128], Operations: ['35+93=128']\nExploring Operation: 71+26=97, Resulting Numbers: [45, 28, 128, 97]\nGenerated Node #3: [45, 28, 128, 97] from Operation: 71+26=97\nCurrent State: 33:[45, 28, 128, 97], Operations: ['35+93=128', '71+26=97']\nExploring Operation: 128+97=225, Resulting Numbers: [45, 28, 225]\nGenerated Node #4: [45, 28, 225] from Operation: 128+97=225\nCurrent State: 33:[45, 28, 225], Operations: ['35+93=128', '71+26=97', '128+97=225']\nExploring Operation: 225/45=5, Resulting Numbers: [28, 5]\nGenerated Node #5: [28, 5] from Operation: 225/45=5\nCurrent State: 33:[28, 5], Operations: ['35+93=128', '71+26=97', '128+97=225', '225/45=5']\nExploring Operation: 28+5=33, Resulting Numbers: [33]\n33,33 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            6,
            4,
            63,
            61,
            10,
            74
        ],
        "target": 83,
        "solution": [
            "6*4=24",
            "63-61=2",
            "10*24=240",
            "240-74=166",
            "166/2=83"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 83:[6, 4, 63, 61, 10, 74], Operations: []\nExploring Operation: 6*4=24, Resulting Numbers: [63, 61, 10, 74, 24]\nGenerated Node #2: [63, 61, 10, 74, 24] from Operation: 6*4=24\nCurrent State: 83:[63, 61, 10, 74, 24], Operations: ['6*4=24']\nExploring Operation: 63-61=2, Resulting Numbers: [10, 74, 24, 2]\nGenerated Node #3: [10, 74, 24, 2] from Operation: 63-61=2\nCurrent State: 83:[10, 74, 24, 2], Operations: ['6*4=24', '63-61=2']\nExploring Operation: 10*24=240, Resulting Numbers: [74, 2, 240]\nGenerated Node #4: [74, 2, 240] from Operation: 10*24=240\nCurrent State: 83:[74, 2, 240], Operations: ['6*4=24', '63-61=2', '10*24=240']\nExploring Operation: 240-74=166, Resulting Numbers: [2, 166]\nGenerated Node #5: [2, 166] from Operation: 240-74=166\nCurrent State: 83:[2, 166], Operations: ['6*4=24', '63-61=2', '10*24=240', '240-74=166']\nExploring Operation: 166/2=83, Resulting Numbers: [83]\n83,83 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            60,
            79,
            99,
            84,
            22,
            5
        ],
        "target": 98,
        "solution": [
            "60+79=139",
            "99+84=183",
            "22+183=205",
            "205/5=41",
            "139-41=98"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 98:[60, 79, 99, 84, 22, 5], Operations: []\nExploring Operation: 60+79=139, Resulting Numbers: [99, 84, 22, 5, 139]\nGenerated Node #2: [99, 84, 22, 5, 139] from Operation: 60+79=139\nCurrent State: 98:[99, 84, 22, 5, 139], Operations: ['60+79=139']\nExploring Operation: 99+84=183, Resulting Numbers: [22, 5, 139, 183]\nGenerated Node #3: [22, 5, 139, 183] from Operation: 99+84=183\nCurrent State: 98:[22, 5, 139, 183], Operations: ['60+79=139', '99+84=183']\nExploring Operation: 22+183=205, Resulting Numbers: [5, 139, 205]\nGenerated Node #4: [5, 139, 205] from Operation: 22+183=205\nCurrent State: 98:[5, 139, 205], Operations: ['60+79=139', '99+84=183', '22+183=205']\nExploring Operation: 205/5=41, Resulting Numbers: [139, 41]\nGenerated Node #5: [139, 41] from Operation: 205/5=41\nCurrent State: 98:[139, 41], Operations: ['60+79=139', '99+84=183', '22+183=205', '205/5=41']\nExploring Operation: 139-41=98, Resulting Numbers: [98]\n98,98 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            57,
            89,
            20,
            63,
            33,
            63
        ],
        "target": 41,
        "solution": [
            "89-57=32",
            "63-20=43",
            "63-33=30",
            "43-32=11",
            "30+11=41"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 41:[57, 89, 20, 63, 33, 63], Operations: []\nExploring Operation: 89-57=32, Resulting Numbers: [20, 63, 33, 63, 32]\nGenerated Node #2: [20, 63, 33, 63, 32] from Operation: 89-57=32\nCurrent State: 41:[20, 63, 33, 63, 32], Operations: ['89-57=32']\nExploring Operation: 63-20=43, Resulting Numbers: [33, 32, 43]\nGenerated Node #3: [33, 32, 43] from Operation: 63-20=43\nCurrent State: 41:[33, 32, 43], Operations: ['89-57=32', '63-20=43']\nExploring Operation: 63-33=30, Resulting Numbers: [32, 43, 30]\nGenerated Node #4: [32, 43, 30] from Operation: 63-33=30\nCurrent State: 41:[32, 43, 30], Operations: ['89-57=32', '63-20=43', '63-33=30']\nExploring Operation: 43-32=11, Resulting Numbers: [30, 11]\nGenerated Node #5: [30, 11] from Operation: 43-32=11\nCurrent State: 41:[30, 11], Operations: ['89-57=32', '63-20=43', '63-33=30', '43-32=11']\nExploring Operation: 30+11=41, Resulting Numbers: [41]\n41,41 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            57,
            14,
            96,
            33,
            46,
            37
        ],
        "target": 67,
        "solution": [
            "57+14=71",
            "96+33=129",
            "46-37=9",
            "129-71=58",
            "9+58=67"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 67:[57, 14, 96, 33, 46, 37], Operations: []\nExploring Operation: 57+14=71, Resulting Numbers: [96, 33, 46, 37, 71]\nGenerated Node #2: [96, 33, 46, 37, 71] from Operation: 57+14=71\nCurrent State: 67:[96, 33, 46, 37, 71], Operations: ['57+14=71']\nExploring Operation: 96+33=129, Resulting Numbers: [46, 37, 71, 129]\nGenerated Node #3: [46, 37, 71, 129] from Operation: 96+33=129\nCurrent State: 67:[46, 37, 71, 129], Operations: ['57+14=71', '96+33=129']\nExploring Operation: 46-37=9, Resulting Numbers: [71, 129, 9]\nGenerated Node #4: [71, 129, 9] from Operation: 46-37=9\nCurrent State: 67:[71, 129, 9], Operations: ['57+14=71', '96+33=129', '46-37=9']\nExploring Operation: 129-71=58, Resulting Numbers: [9, 58]\nGenerated Node #5: [9, 58] from Operation: 129-71=58\nCurrent State: 67:[9, 58], Operations: ['57+14=71', '96+33=129', '46-37=9', '129-71=58']\nExploring Operation: 9+58=67, Resulting Numbers: [67]\n67,67 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            8,
            43,
            21,
            98,
            35,
            79
        ],
        "target": 11,
        "solution": [
            "8+43=51",
            "98-21=77",
            "79-35=44",
            "51-44=7",
            "77/7=11"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 11:[8, 43, 21, 98, 35, 79], Operations: []\nExploring Operation: 8+43=51, Resulting Numbers: [21, 98, 35, 79, 51]\nGenerated Node #2: [21, 98, 35, 79, 51] from Operation: 8+43=51\nCurrent State: 11:[21, 98, 35, 79, 51], Operations: ['8+43=51']\nExploring Operation: 98-21=77, Resulting Numbers: [35, 79, 51, 77]\nGenerated Node #3: [35, 79, 51, 77] from Operation: 98-21=77\nCurrent State: 11:[35, 79, 51, 77], Operations: ['8+43=51', '98-21=77']\nExploring Operation: 79-35=44, Resulting Numbers: [51, 77, 44]\nGenerated Node #4: [51, 77, 44] from Operation: 79-35=44\nCurrent State: 11:[51, 77, 44], Operations: ['8+43=51', '98-21=77', '79-35=44']\nExploring Operation: 51-44=7, Resulting Numbers: [77, 7]\nGenerated Node #5: [77, 7] from Operation: 51-44=7\nCurrent State: 11:[77, 7], Operations: ['8+43=51', '98-21=77', '79-35=44', '51-44=7']\nExploring Operation: 77/7=11, Resulting Numbers: [11]\n11,11 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            19,
            24,
            71,
            33,
            70,
            4
        ],
        "target": 25,
        "solution": [
            "24-19=5",
            "71+33=104",
            "70+4=74",
            "104-5=99",
            "99-74=25"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 25:[19, 24, 71, 33, 70, 4], Operations: []\nExploring Operation: 24-19=5, Resulting Numbers: [71, 33, 70, 4, 5]\nGenerated Node #2: [71, 33, 70, 4, 5] from Operation: 24-19=5\nCurrent State: 25:[71, 33, 70, 4, 5], Operations: ['24-19=5']\nExploring Operation: 71+33=104, Resulting Numbers: [70, 4, 5, 104]\nGenerated Node #3: [70, 4, 5, 104] from Operation: 71+33=104\nCurrent State: 25:[70, 4, 5, 104], Operations: ['24-19=5', '71+33=104']\nExploring Operation: 70+4=74, Resulting Numbers: [5, 104, 74]\nGenerated Node #4: [5, 104, 74] from Operation: 70+4=74\nCurrent State: 25:[5, 104, 74], Operations: ['24-19=5', '71+33=104', '70+4=74']\nExploring Operation: 104-5=99, Resulting Numbers: [74, 99]\nGenerated Node #5: [74, 99] from Operation: 104-5=99\nCurrent State: 25:[74, 99], Operations: ['24-19=5', '71+33=104', '70+4=74', '104-5=99']\nExploring Operation: 99-74=25, Resulting Numbers: [25]\n25,25 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            3,
            33,
            19,
            57,
            98,
            21
        ],
        "target": 51,
        "solution": [
            "33-3=30",
            "57-19=38",
            "98+21=119",
            "30+38=68",
            "119-68=51"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 51:[3, 33, 19, 57, 98, 21], Operations: []\nExploring Operation: 33-3=30, Resulting Numbers: [19, 57, 98, 21, 30]\nGenerated Node #2: [19, 57, 98, 21, 30] from Operation: 33-3=30\nCurrent State: 51:[19, 57, 98, 21, 30], Operations: ['33-3=30']\nExploring Operation: 57-19=38, Resulting Numbers: [98, 21, 30, 38]\nGenerated Node #3: [98, 21, 30, 38] from Operation: 57-19=38\nCurrent State: 51:[98, 21, 30, 38], Operations: ['33-3=30', '57-19=38']\nExploring Operation: 98+21=119, Resulting Numbers: [30, 38, 119]\nGenerated Node #4: [30, 38, 119] from Operation: 98+21=119\nCurrent State: 51:[30, 38, 119], Operations: ['33-3=30', '57-19=38', '98+21=119']\nExploring Operation: 30+38=68, Resulting Numbers: [119, 68]\nGenerated Node #5: [119, 68] from Operation: 30+38=68\nCurrent State: 51:[119, 68], Operations: ['33-3=30', '57-19=38', '98+21=119', '30+38=68']\nExploring Operation: 119-68=51, Resulting Numbers: [51]\n51,51 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            53,
            13,
            88,
            20,
            19,
            1
        ],
        "target": 13,
        "solution": [
            "53+88=141",
            "19-13=6",
            "141-1=140",
            "140/20=7",
            "6+7=13"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 13:[53, 13, 88, 20, 19, 1], Operations: []\nExploring Operation: 53+88=141, Resulting Numbers: [13, 20, 19, 1, 141]\nGenerated Node #2: [13, 20, 19, 1, 141] from Operation: 53+88=141\nCurrent State: 13:[13, 20, 19, 1, 141], Operations: ['53+88=141']\nExploring Operation: 19-13=6, Resulting Numbers: [20, 1, 141, 6]\nGenerated Node #3: [20, 1, 141, 6] from Operation: 19-13=6\nCurrent State: 13:[20, 1, 141, 6], Operations: ['53+88=141', '19-13=6']\nExploring Operation: 141-1=140, Resulting Numbers: [20, 6, 140]\nGenerated Node #4: [20, 6, 140] from Operation: 141-1=140\nCurrent State: 13:[20, 6, 140], Operations: ['53+88=141', '19-13=6', '141-1=140']\nExploring Operation: 140/20=7, Resulting Numbers: [6, 7]\nGenerated Node #5: [6, 7] from Operation: 140/20=7\nCurrent State: 13:[6, 7], Operations: ['53+88=141', '19-13=6', '141-1=140', '140/20=7']\nExploring Operation: 6+7=13, Resulting Numbers: [13]\n13,13 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            28,
            60,
            76,
            73,
            26,
            60
        ],
        "target": 88,
        "solution": [
            "60-28=32",
            "76-32=44",
            "73-60=13",
            "26*44=1144",
            "1144/13=88"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 88:[28, 60, 76, 73, 26, 60], Operations: []\nExploring Operation: 60-28=32, Resulting Numbers: [76, 73, 26, 32]\nGenerated Node #2: [76, 73, 26, 32] from Operation: 60-28=32\nCurrent State: 88:[76, 73, 26, 32], Operations: ['60-28=32']\nExploring Operation: 76-32=44, Resulting Numbers: [73, 26, 44]\nGenerated Node #3: [73, 26, 44] from Operation: 76-32=44\nCurrent State: 88:[73, 26, 44], Operations: ['60-28=32', '76-32=44']\nExploring Operation: 73-60=13, Resulting Numbers: [26, 44, 13]\nGenerated Node #4: [26, 44, 13] from Operation: 73-60=13\nCurrent State: 88:[26, 44, 13], Operations: ['60-28=32', '76-32=44', '73-60=13']\nExploring Operation: 26*44=1144, Resulting Numbers: [13, 1144]\nGenerated Node #5: [13, 1144] from Operation: 26*44=1144\nCurrent State: 88:[13, 1144], Operations: ['60-28=32', '76-32=44', '73-60=13', '26*44=1144']\nExploring Operation: 1144/13=88, Resulting Numbers: [88]\n88,88 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            92,
            43,
            76,
            14,
            72,
            26
        ],
        "target": 89,
        "solution": [
            "76-14=62",
            "62-26=36",
            "92*36=3312",
            "3312/72=46",
            "43+46=89"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 89:[92, 43, 76, 14, 72, 26], Operations: []\nExploring Operation: 76-14=62, Resulting Numbers: [92, 43, 72, 26, 62]\nGenerated Node #2: [92, 43, 72, 26, 62] from Operation: 76-14=62\nCurrent State: 89:[92, 43, 72, 26, 62], Operations: ['76-14=62']\nExploring Operation: 62-26=36, Resulting Numbers: [92, 43, 72, 36]\nGenerated Node #3: [92, 43, 72, 36] from Operation: 62-26=36\nCurrent State: 89:[92, 43, 72, 36], Operations: ['76-14=62', '62-26=36']\nExploring Operation: 92*36=3312, Resulting Numbers: [43, 72, 3312]\nGenerated Node #4: [43, 72, 3312] from Operation: 92*36=3312\nCurrent State: 89:[43, 72, 3312], Operations: ['76-14=62', '62-26=36', '92*36=3312']\nExploring Operation: 3312/72=46, Resulting Numbers: [43, 46]\nGenerated Node #5: [43, 46] from Operation: 3312/72=46\nCurrent State: 89:[43, 46], Operations: ['76-14=62', '62-26=36', '92*36=3312', '3312/72=46']\nExploring Operation: 43+46=89, Resulting Numbers: [89]\n89,89 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            35,
            33,
            56,
            97,
            46,
            79
        ],
        "target": 67,
        "solution": [
            "97-33=64",
            "79-56=23",
            "46/23=2",
            "64/2=32",
            "35+32=67"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 67:[35, 33, 56, 97, 46, 79], Operations: []\nExploring Operation: 97-33=64, Resulting Numbers: [35, 56, 46, 79, 64]\nGenerated Node #2: [35, 56, 46, 79, 64] from Operation: 97-33=64\nCurrent State: 67:[35, 56, 46, 79, 64], Operations: ['97-33=64']\nExploring Operation: 79-56=23, Resulting Numbers: [35, 46, 64, 23]\nGenerated Node #3: [35, 46, 64, 23] from Operation: 79-56=23\nCurrent State: 67:[35, 46, 64, 23], Operations: ['97-33=64', '79-56=23']\nExploring Operation: 46/23=2, Resulting Numbers: [35, 64, 2]\nGenerated Node #4: [35, 64, 2] from Operation: 46/23=2\nCurrent State: 67:[35, 64, 2], Operations: ['97-33=64', '79-56=23', '46/23=2']\nExploring Operation: 64/2=32, Resulting Numbers: [35, 32]\nGenerated Node #5: [35, 32] from Operation: 64/2=32\nCurrent State: 67:[35, 32], Operations: ['97-33=64', '79-56=23', '46/23=2', '64/2=32']\nExploring Operation: 35+32=67, Resulting Numbers: [67]\n67,67 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            14,
            72,
            72,
            8,
            4,
            44
        ],
        "target": 93,
        "solution": [
            "14+72=86",
            "72-44=28",
            "8-4=4",
            "28/4=7",
            "86+7=93"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 93:[14, 72, 72, 8, 4, 44], Operations: []\nExploring Operation: 14+72=86, Resulting Numbers: [8, 4, 44, 86]\nGenerated Node #2: [8, 4, 44, 86] from Operation: 14+72=86\nCurrent State: 93:[8, 4, 44, 86], Operations: ['14+72=86']\nExploring Operation: 72-44=28, Resulting Numbers: [8, 4, 86, 28]\nGenerated Node #3: [8, 4, 86, 28] from Operation: 72-44=28\nCurrent State: 93:[8, 4, 86, 28], Operations: ['14+72=86', '72-44=28']\nExploring Operation: 8-4=4, Resulting Numbers: [86, 28, 4]\nGenerated Node #4: [86, 28, 4] from Operation: 8-4=4\nCurrent State: 93:[86, 28, 4], Operations: ['14+72=86', '72-44=28', '8-4=4']\nExploring Operation: 28/4=7, Resulting Numbers: [86, 7]\nGenerated Node #5: [86, 7] from Operation: 28/4=7\nCurrent State: 93:[86, 7], Operations: ['14+72=86', '72-44=28', '8-4=4', '28/4=7']\nExploring Operation: 86+7=93, Resulting Numbers: [93]\n93,93 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            44,
            54,
            28,
            69,
            33,
            93
        ],
        "target": 57,
        "solution": [
            "44+28=72",
            "54+33=87",
            "93-87=6",
            "72/6=12",
            "69-12=57"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 57:[44, 54, 28, 69, 33, 93], Operations: []\nExploring Operation: 44+28=72, Resulting Numbers: [54, 69, 33, 93, 72]\nGenerated Node #2: [54, 69, 33, 93, 72] from Operation: 44+28=72\nCurrent State: 57:[54, 69, 33, 93, 72], Operations: ['44+28=72']\nExploring Operation: 54+33=87, Resulting Numbers: [69, 93, 72, 87]\nGenerated Node #3: [69, 93, 72, 87] from Operation: 54+33=87\nCurrent State: 57:[69, 93, 72, 87], Operations: ['44+28=72', '54+33=87']\nExploring Operation: 93-87=6, Resulting Numbers: [69, 72, 6]\nGenerated Node #4: [69, 72, 6] from Operation: 93-87=6\nCurrent State: 57:[69, 72, 6], Operations: ['44+28=72', '54+33=87', '93-87=6']\nExploring Operation: 72/6=12, Resulting Numbers: [69, 12]\nGenerated Node #5: [69, 12] from Operation: 72/6=12\nCurrent State: 57:[69, 12], Operations: ['44+28=72', '54+33=87', '93-87=6', '72/6=12']\nExploring Operation: 69-12=57, Resulting Numbers: [57]\n57,57 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            33,
            74,
            14,
            67,
            10,
            76
        ],
        "target": 51,
        "solution": [
            "33*14=462",
            "462-67=395",
            "10*395=3950",
            "3950-74=3876",
            "3876/76=51"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 51:[33, 74, 14, 67, 10, 76], Operations: []\nExploring Operation: 33*14=462, Resulting Numbers: [74, 67, 10, 76, 462]\nGenerated Node #2: [74, 67, 10, 76, 462] from Operation: 33*14=462\nCurrent State: 51:[74, 67, 10, 76, 462], Operations: ['33*14=462']\nExploring Operation: 462-67=395, Resulting Numbers: [74, 10, 76, 395]\nGenerated Node #3: [74, 10, 76, 395] from Operation: 462-67=395\nCurrent State: 51:[74, 10, 76, 395], Operations: ['33*14=462', '462-67=395']\nExploring Operation: 10*395=3950, Resulting Numbers: [74, 76, 3950]\nGenerated Node #4: [74, 76, 3950] from Operation: 10*395=3950\nCurrent State: 51:[74, 76, 3950], Operations: ['33*14=462', '462-67=395', '10*395=3950']\nExploring Operation: 3950-74=3876, Resulting Numbers: [76, 3876]\nGenerated Node #5: [76, 3876] from Operation: 3950-74=3876\nCurrent State: 51:[76, 3876], Operations: ['33*14=462', '462-67=395', '10*395=3950', '3950-74=3876']\nExploring Operation: 3876/76=51, Resulting Numbers: [51]\n51,51 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            44,
            13,
            88,
            1,
            31,
            30
        ],
        "target": 77,
        "solution": [
            "88/44=2",
            "13+1=14",
            "31+30=61",
            "2+14=16",
            "61+16=77"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 77:[44, 13, 88, 1, 31, 30], Operations: []\nExploring Operation: 88/44=2, Resulting Numbers: [13, 1, 31, 30, 2]\nGenerated Node #2: [13, 1, 31, 30, 2] from Operation: 88/44=2\nCurrent State: 77:[13, 1, 31, 30, 2], Operations: ['88/44=2']\nExploring Operation: 13+1=14, Resulting Numbers: [31, 30, 2, 14]\nGenerated Node #3: [31, 30, 2, 14] from Operation: 13+1=14\nCurrent State: 77:[31, 30, 2, 14], Operations: ['88/44=2', '13+1=14']\nExploring Operation: 31+30=61, Resulting Numbers: [2, 14, 61]\nGenerated Node #4: [2, 14, 61] from Operation: 31+30=61\nCurrent State: 77:[2, 14, 61], Operations: ['88/44=2', '13+1=14', '31+30=61']\nExploring Operation: 2+14=16, Resulting Numbers: [61, 16]\nGenerated Node #5: [61, 16] from Operation: 2+14=16\nCurrent State: 77:[61, 16], Operations: ['88/44=2', '13+1=14', '31+30=61', '2+14=16']\nExploring Operation: 61+16=77, Resulting Numbers: [77]\n77,77 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            63,
            75,
            92,
            87,
            28,
            55
        ],
        "target": 45,
        "solution": [
            "75-63=12",
            "92+28=120",
            "87-55=32",
            "12*120=1440",
            "1440/32=45"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 45:[63, 75, 92, 87, 28, 55], Operations: []\nExploring Operation: 75-63=12, Resulting Numbers: [92, 87, 28, 55, 12]\nGenerated Node #2: [92, 87, 28, 55, 12] from Operation: 75-63=12\nCurrent State: 45:[92, 87, 28, 55, 12], Operations: ['75-63=12']\nExploring Operation: 92+28=120, Resulting Numbers: [87, 55, 12, 120]\nGenerated Node #3: [87, 55, 12, 120] from Operation: 92+28=120\nCurrent State: 45:[87, 55, 12, 120], Operations: ['75-63=12', '92+28=120']\nExploring Operation: 87-55=32, Resulting Numbers: [12, 120, 32]\nGenerated Node #4: [12, 120, 32] from Operation: 87-55=32\nCurrent State: 45:[12, 120, 32], Operations: ['75-63=12', '92+28=120', '87-55=32']\nExploring Operation: 12*120=1440, Resulting Numbers: [32, 1440]\nGenerated Node #5: [32, 1440] from Operation: 12*120=1440\nCurrent State: 45:[32, 1440], Operations: ['75-63=12', '92+28=120', '87-55=32', '12*120=1440']\nExploring Operation: 1440/32=45, Resulting Numbers: [45]\n45,45 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            93,
            11,
            28,
            82,
            67,
            99
        ],
        "target": 33,
        "solution": [
            "93+82=175",
            "11*28=308",
            "67+99=166",
            "308-175=133",
            "166-133=33"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 33:[93, 11, 28, 82, 67, 99], Operations: []\nExploring Operation: 93+82=175, Resulting Numbers: [11, 28, 67, 99, 175]\nGenerated Node #2: [11, 28, 67, 99, 175] from Operation: 93+82=175\nCurrent State: 33:[11, 28, 67, 99, 175], Operations: ['93+82=175']\nExploring Operation: 11*28=308, Resulting Numbers: [67, 99, 175, 308]\nGenerated Node #3: [67, 99, 175, 308] from Operation: 11*28=308\nCurrent State: 33:[67, 99, 175, 308], Operations: ['93+82=175', '11*28=308']\nExploring Operation: 67+99=166, Resulting Numbers: [175, 308, 166]\nGenerated Node #4: [175, 308, 166] from Operation: 67+99=166\nCurrent State: 33:[175, 308, 166], Operations: ['93+82=175', '11*28=308', '67+99=166']\nExploring Operation: 308-175=133, Resulting Numbers: [166, 133]\nGenerated Node #5: [166, 133] from Operation: 308-175=133\nCurrent State: 33:[166, 133], Operations: ['93+82=175', '11*28=308', '67+99=166', '308-175=133']\nExploring Operation: 166-133=33, Resulting Numbers: [33]\n33,33 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            52,
            88,
            2,
            82,
            7,
            68
        ],
        "target": 99,
        "solution": [
            "52+88=140",
            "2*82=164",
            "7+68=75",
            "164-140=24",
            "75+24=99"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 99:[52, 88, 2, 82, 7, 68], Operations: []\nExploring Operation: 52+88=140, Resulting Numbers: [2, 82, 7, 68, 140]\nGenerated Node #2: [2, 82, 7, 68, 140] from Operation: 52+88=140\nCurrent State: 99:[2, 82, 7, 68, 140], Operations: ['52+88=140']\nExploring Operation: 2*82=164, Resulting Numbers: [7, 68, 140, 164]\nGenerated Node #3: [7, 68, 140, 164] from Operation: 2*82=164\nCurrent State: 99:[7, 68, 140, 164], Operations: ['52+88=140', '2*82=164']\nExploring Operation: 7+68=75, Resulting Numbers: [140, 164, 75]\nGenerated Node #4: [140, 164, 75] from Operation: 7+68=75\nCurrent State: 99:[140, 164, 75], Operations: ['52+88=140', '2*82=164', '7+68=75']\nExploring Operation: 164-140=24, Resulting Numbers: [75, 24]\nGenerated Node #5: [75, 24] from Operation: 164-140=24\nCurrent State: 99:[75, 24], Operations: ['52+88=140', '2*82=164', '7+68=75', '164-140=24']\nExploring Operation: 75+24=99, Resulting Numbers: [99]\n99,99 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            19,
            45,
            86,
            46,
            47,
            39
        ],
        "target": 46,
        "solution": [
            "19+45=64",
            "86-47=39",
            "39-39=0",
            "64*0=0",
            "46+0=46"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 46:[19, 45, 86, 46, 47, 39], Operations: []\nExploring Operation: 19+45=64, Resulting Numbers: [86, 46, 47, 39, 64]\nGenerated Node #2: [86, 46, 47, 39, 64] from Operation: 19+45=64\nCurrent State: 46:[86, 46, 47, 39, 64], Operations: ['19+45=64']\nExploring Operation: 86-47=39, Resulting Numbers: [46, 39, 64, 39]\nGenerated Node #3: [46, 39, 64, 39] from Operation: 86-47=39\nCurrent State: 46:[46, 39, 64, 39], Operations: ['19+45=64', '86-47=39']\nExploring Operation: 39-39=0, Resulting Numbers: [46, 64, 0]\nGenerated Node #4: [46, 64, 0] from Operation: 39-39=0\nCurrent State: 46:[46, 64, 0], Operations: ['19+45=64', '86-47=39', '39-39=0']\nExploring Operation: 64*0=0, Resulting Numbers: [46, 0]\nGenerated Node #5: [46, 0] from Operation: 64*0=0\nCurrent State: 46:[46, 0], Operations: ['19+45=64', '86-47=39', '39-39=0', '64*0=0']\nExploring Operation: 46+0=46, Resulting Numbers: [46]\n46,46 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            6,
            69,
            21,
            75,
            20,
            11
        ],
        "target": 39,
        "solution": [
            "6+69=75",
            "75+75=150",
            "20-11=9",
            "21*9=189",
            "189-150=39"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 39:[6, 69, 21, 75, 20, 11], Operations: []\nExploring Operation: 6+69=75, Resulting Numbers: [21, 75, 20, 11, 75]\nGenerated Node #2: [21, 75, 20, 11, 75] from Operation: 6+69=75\nCurrent State: 39:[21, 75, 20, 11, 75], Operations: ['6+69=75']\nExploring Operation: 75+75=150, Resulting Numbers: [21, 20, 11, 150]\nGenerated Node #3: [21, 20, 11, 150] from Operation: 75+75=150\nCurrent State: 39:[21, 20, 11, 150], Operations: ['6+69=75', '75+75=150']\nExploring Operation: 20-11=9, Resulting Numbers: [21, 150, 9]\nGenerated Node #4: [21, 150, 9] from Operation: 20-11=9\nCurrent State: 39:[21, 150, 9], Operations: ['6+69=75', '75+75=150', '20-11=9']\nExploring Operation: 21*9=189, Resulting Numbers: [150, 189]\nGenerated Node #5: [150, 189] from Operation: 21*9=189\nCurrent State: 39:[150, 189], Operations: ['6+69=75', '75+75=150', '20-11=9', '21*9=189']\nExploring Operation: 189-150=39, Resulting Numbers: [39]\n39,39 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            74,
            10,
            61,
            15,
            48,
            56
        ],
        "target": 73,
        "solution": [
            "74+10=84",
            "61+48=109",
            "56+109=165",
            "165/15=11",
            "84-11=73"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 73:[74, 10, 61, 15, 48, 56], Operations: []\nExploring Operation: 74+10=84, Resulting Numbers: [61, 15, 48, 56, 84]\nGenerated Node #2: [61, 15, 48, 56, 84] from Operation: 74+10=84\nCurrent State: 73:[61, 15, 48, 56, 84], Operations: ['74+10=84']\nExploring Operation: 61+48=109, Resulting Numbers: [15, 56, 84, 109]\nGenerated Node #3: [15, 56, 84, 109] from Operation: 61+48=109\nCurrent State: 73:[15, 56, 84, 109], Operations: ['74+10=84', '61+48=109']\nExploring Operation: 56+109=165, Resulting Numbers: [15, 84, 165]\nGenerated Node #4: [15, 84, 165] from Operation: 56+109=165\nCurrent State: 73:[15, 84, 165], Operations: ['74+10=84', '61+48=109', '56+109=165']\nExploring Operation: 165/15=11, Resulting Numbers: [84, 11]\nGenerated Node #5: [84, 11] from Operation: 165/15=11\nCurrent State: 73:[84, 11], Operations: ['74+10=84', '61+48=109', '56+109=165', '165/15=11']\nExploring Operation: 84-11=73, Resulting Numbers: [73]\n73,73 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            98,
            50,
            17,
            72,
            81,
            57
        ],
        "target": 13,
        "solution": [
            "98-50=48",
            "17*57=969",
            "81-48=33",
            "969-33=936",
            "936/72=13"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 13:[98, 50, 17, 72, 81, 57], Operations: []\nExploring Operation: 98-50=48, Resulting Numbers: [17, 72, 81, 57, 48]\nGenerated Node #2: [17, 72, 81, 57, 48] from Operation: 98-50=48\nCurrent State: 13:[17, 72, 81, 57, 48], Operations: ['98-50=48']\nExploring Operation: 17*57=969, Resulting Numbers: [72, 81, 48, 969]\nGenerated Node #3: [72, 81, 48, 969] from Operation: 17*57=969\nCurrent State: 13:[72, 81, 48, 969], Operations: ['98-50=48', '17*57=969']\nExploring Operation: 81-48=33, Resulting Numbers: [72, 969, 33]\nGenerated Node #4: [72, 969, 33] from Operation: 81-48=33\nCurrent State: 13:[72, 969, 33], Operations: ['98-50=48', '17*57=969', '81-48=33']\nExploring Operation: 969-33=936, Resulting Numbers: [72, 936]\nGenerated Node #5: [72, 936] from Operation: 969-33=936\nCurrent State: 13:[72, 936], Operations: ['98-50=48', '17*57=969', '81-48=33', '969-33=936']\nExploring Operation: 936/72=13, Resulting Numbers: [13]\n13,13 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            99,
            25,
            35,
            10,
            18,
            60
        ],
        "target": 84,
        "solution": [
            "99+35=134",
            "25-10=15",
            "60*15=900",
            "900/18=50",
            "134-50=84"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 84:[99, 25, 35, 10, 18, 60], Operations: []\nExploring Operation: 99+35=134, Resulting Numbers: [25, 10, 18, 60, 134]\nGenerated Node #2: [25, 10, 18, 60, 134] from Operation: 99+35=134\nCurrent State: 84:[25, 10, 18, 60, 134], Operations: ['99+35=134']\nExploring Operation: 25-10=15, Resulting Numbers: [18, 60, 134, 15]\nGenerated Node #3: [18, 60, 134, 15] from Operation: 25-10=15\nCurrent State: 84:[18, 60, 134, 15], Operations: ['99+35=134', '25-10=15']\nExploring Operation: 60*15=900, Resulting Numbers: [18, 134, 900]\nGenerated Node #4: [18, 134, 900] from Operation: 60*15=900\nCurrent State: 84:[18, 134, 900], Operations: ['99+35=134', '25-10=15', '60*15=900']\nExploring Operation: 900/18=50, Resulting Numbers: [134, 50]\nGenerated Node #5: [134, 50] from Operation: 900/18=50\nCurrent State: 84:[134, 50], Operations: ['99+35=134', '25-10=15', '60*15=900', '900/18=50']\nExploring Operation: 134-50=84, Resulting Numbers: [84]\n84,84 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            32,
            50,
            92,
            8,
            45,
            43
        ],
        "target": 25,
        "solution": [
            "32/8=4",
            "92-50=42",
            "45-43=2",
            "42/2=21",
            "4+21=25"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 25:[32, 50, 92, 8, 45, 43], Operations: []\nExploring Operation: 32/8=4, Resulting Numbers: [50, 92, 45, 43, 4]\nGenerated Node #2: [50, 92, 45, 43, 4] from Operation: 32/8=4\nCurrent State: 25:[50, 92, 45, 43, 4], Operations: ['32/8=4']\nExploring Operation: 92-50=42, Resulting Numbers: [45, 43, 4, 42]\nGenerated Node #3: [45, 43, 4, 42] from Operation: 92-50=42\nCurrent State: 25:[45, 43, 4, 42], Operations: ['32/8=4', '92-50=42']\nExploring Operation: 45-43=2, Resulting Numbers: [4, 42, 2]\nGenerated Node #4: [4, 42, 2] from Operation: 45-43=2\nCurrent State: 25:[4, 42, 2], Operations: ['32/8=4', '92-50=42', '45-43=2']\nExploring Operation: 42/2=21, Resulting Numbers: [4, 21]\nGenerated Node #5: [4, 21] from Operation: 42/2=21\nCurrent State: 25:[4, 21], Operations: ['32/8=4', '92-50=42', '45-43=2', '42/2=21']\nExploring Operation: 4+21=25, Resulting Numbers: [25]\n25,25 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            87,
            12,
            93,
            11,
            81,
            12
        ],
        "target": 20,
        "solution": [
            "87+12=99",
            "99-93=6",
            "11+81=92",
            "12*6=72",
            "92-72=20"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 20:[87, 12, 93, 11, 81, 12], Operations: []\nExploring Operation: 87+12=99, Resulting Numbers: [93, 11, 81, 99]\nGenerated Node #2: [93, 11, 81, 99] from Operation: 87+12=99\nCurrent State: 20:[93, 11, 81, 99], Operations: ['87+12=99']\nExploring Operation: 99-93=6, Resulting Numbers: [11, 81, 6]\nGenerated Node #3: [11, 81, 6] from Operation: 99-93=6\nCurrent State: 20:[11, 81, 6], Operations: ['87+12=99', '99-93=6']\nExploring Operation: 11+81=92, Resulting Numbers: [6, 92]\nGenerated Node #4: [6, 92] from Operation: 11+81=92\nCurrent State: 20:[6, 92], Operations: ['87+12=99', '99-93=6', '11+81=92']\nExploring Operation: 12*6=72, Resulting Numbers: [92, 72]\nGenerated Node #5: [92, 72] from Operation: 12*6=72\nCurrent State: 20:[92, 72], Operations: ['87+12=99', '99-93=6', '11+81=92', '12*6=72']\nExploring Operation: 92-72=20, Resulting Numbers: [20]\n20,20 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            91,
            34,
            17,
            4,
            27,
            47
        ],
        "target": 77,
        "solution": [
            "91+34=125",
            "17*4=68",
            "47-27=20",
            "125-68=57",
            "20+57=77"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 77:[91, 34, 17, 4, 27, 47], Operations: []\nExploring Operation: 91+34=125, Resulting Numbers: [17, 4, 27, 47, 125]\nGenerated Node #2: [17, 4, 27, 47, 125] from Operation: 91+34=125\nCurrent State: 77:[17, 4, 27, 47, 125], Operations: ['91+34=125']\nExploring Operation: 17*4=68, Resulting Numbers: [27, 47, 125, 68]\nGenerated Node #3: [27, 47, 125, 68] from Operation: 17*4=68\nCurrent State: 77:[27, 47, 125, 68], Operations: ['91+34=125', '17*4=68']\nExploring Operation: 47-27=20, Resulting Numbers: [125, 68, 20]\nGenerated Node #4: [125, 68, 20] from Operation: 47-27=20\nCurrent State: 77:[125, 68, 20], Operations: ['91+34=125', '17*4=68', '47-27=20']\nExploring Operation: 125-68=57, Resulting Numbers: [20, 57]\nGenerated Node #5: [20, 57] from Operation: 125-68=57\nCurrent State: 77:[20, 57], Operations: ['91+34=125', '17*4=68', '47-27=20', '125-68=57']\nExploring Operation: 20+57=77, Resulting Numbers: [77]\n77,77 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            54,
            41,
            78,
            44,
            30,
            43
        ],
        "target": 98,
        "solution": [
            "54*41=2214",
            "78+30=108",
            "2214+108=2322",
            "2322/43=54",
            "44+54=98"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 98:[54, 41, 78, 44, 30, 43], Operations: []\nExploring Operation: 54*41=2214, Resulting Numbers: [78, 44, 30, 43, 2214]\nGenerated Node #2: [78, 44, 30, 43, 2214] from Operation: 54*41=2214\nCurrent State: 98:[78, 44, 30, 43, 2214], Operations: ['54*41=2214']\nExploring Operation: 78+30=108, Resulting Numbers: [44, 43, 2214, 108]\nGenerated Node #3: [44, 43, 2214, 108] from Operation: 78+30=108\nCurrent State: 98:[44, 43, 2214, 108], Operations: ['54*41=2214', '78+30=108']\nExploring Operation: 2214+108=2322, Resulting Numbers: [44, 43, 2322]\nGenerated Node #4: [44, 43, 2322] from Operation: 2214+108=2322\nCurrent State: 98:[44, 43, 2322], Operations: ['54*41=2214', '78+30=108', '2214+108=2322']\nExploring Operation: 2322/43=54, Resulting Numbers: [44, 54]\nGenerated Node #5: [44, 54] from Operation: 2322/43=54\nCurrent State: 98:[44, 54], Operations: ['54*41=2214', '78+30=108', '2214+108=2322', '2322/43=54']\nExploring Operation: 44+54=98, Resulting Numbers: [98]\n98,98 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            1,
            33,
            51,
            68,
            75,
            91
        ],
        "target": 21,
        "solution": [
            "1+33=34",
            "51*34=1734",
            "68+91=159",
            "1734-159=1575",
            "1575/75=21"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 21:[1, 33, 51, 68, 75, 91], Operations: []\nExploring Operation: 1+33=34, Resulting Numbers: [51, 68, 75, 91, 34]\nGenerated Node #2: [51, 68, 75, 91, 34] from Operation: 1+33=34\nCurrent State: 21:[51, 68, 75, 91, 34], Operations: ['1+33=34']\nExploring Operation: 51*34=1734, Resulting Numbers: [68, 75, 91, 1734]\nGenerated Node #3: [68, 75, 91, 1734] from Operation: 51*34=1734\nCurrent State: 21:[68, 75, 91, 1734], Operations: ['1+33=34', '51*34=1734']\nExploring Operation: 68+91=159, Resulting Numbers: [75, 1734, 159]\nGenerated Node #4: [75, 1734, 159] from Operation: 68+91=159\nCurrent State: 21:[75, 1734, 159], Operations: ['1+33=34', '51*34=1734', '68+91=159']\nExploring Operation: 1734-159=1575, Resulting Numbers: [75, 1575]\nGenerated Node #5: [75, 1575] from Operation: 1734-159=1575\nCurrent State: 21:[75, 1575], Operations: ['1+33=34', '51*34=1734', '68+91=159', '1734-159=1575']\nExploring Operation: 1575/75=21, Resulting Numbers: [21]\n21,21 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            75,
            9,
            33,
            36,
            68,
            48
        ],
        "target": 67,
        "solution": [
            "75+9=84",
            "36-33=3",
            "68-48=20",
            "84+3=87",
            "87-20=67"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 67:[75, 9, 33, 36, 68, 48], Operations: []\nExploring Operation: 75+9=84, Resulting Numbers: [33, 36, 68, 48, 84]\nGenerated Node #2: [33, 36, 68, 48, 84] from Operation: 75+9=84\nCurrent State: 67:[33, 36, 68, 48, 84], Operations: ['75+9=84']\nExploring Operation: 36-33=3, Resulting Numbers: [68, 48, 84, 3]\nGenerated Node #3: [68, 48, 84, 3] from Operation: 36-33=3\nCurrent State: 67:[68, 48, 84, 3], Operations: ['75+9=84', '36-33=3']\nExploring Operation: 68-48=20, Resulting Numbers: [84, 3, 20]\nGenerated Node #4: [84, 3, 20] from Operation: 68-48=20\nCurrent State: 67:[84, 3, 20], Operations: ['75+9=84', '36-33=3', '68-48=20']\nExploring Operation: 84+3=87, Resulting Numbers: [20, 87]\nGenerated Node #5: [20, 87] from Operation: 84+3=87\nCurrent State: 67:[20, 87], Operations: ['75+9=84', '36-33=3', '68-48=20', '84+3=87']\nExploring Operation: 87-20=67, Resulting Numbers: [67]\n67,67 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            43,
            95,
            6,
            70,
            36,
            18
        ],
        "target": 58,
        "solution": [
            "43+95=138",
            "6*138=828",
            "70*18=1260",
            "828+1260=2088",
            "2088/36=58"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 58:[43, 95, 6, 70, 36, 18], Operations: []\nExploring Operation: 43+95=138, Resulting Numbers: [6, 70, 36, 18, 138]\nGenerated Node #2: [6, 70, 36, 18, 138] from Operation: 43+95=138\nCurrent State: 58:[6, 70, 36, 18, 138], Operations: ['43+95=138']\nExploring Operation: 6*138=828, Resulting Numbers: [70, 36, 18, 828]\nGenerated Node #3: [70, 36, 18, 828] from Operation: 6*138=828\nCurrent State: 58:[70, 36, 18, 828], Operations: ['43+95=138', '6*138=828']\nExploring Operation: 70*18=1260, Resulting Numbers: [36, 828, 1260]\nGenerated Node #4: [36, 828, 1260] from Operation: 70*18=1260\nCurrent State: 58:[36, 828, 1260], Operations: ['43+95=138', '6*138=828', '70*18=1260']\nExploring Operation: 828+1260=2088, Resulting Numbers: [36, 2088]\nGenerated Node #5: [36, 2088] from Operation: 828+1260=2088\nCurrent State: 58:[36, 2088], Operations: ['43+95=138', '6*138=828', '70*18=1260', '828+1260=2088']\nExploring Operation: 2088/36=58, Resulting Numbers: [58]\n58,58 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            45,
            23,
            2,
            30,
            47,
            10
        ],
        "target": 77,
        "solution": [
            "45+23=68",
            "30-2=28",
            "47-10=37",
            "68-28=40",
            "37+40=77"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 77:[45, 23, 2, 30, 47, 10], Operations: []\nExploring Operation: 45+23=68, Resulting Numbers: [2, 30, 47, 10, 68]\nGenerated Node #2: [2, 30, 47, 10, 68] from Operation: 45+23=68\nCurrent State: 77:[2, 30, 47, 10, 68], Operations: ['45+23=68']\nExploring Operation: 30-2=28, Resulting Numbers: [47, 10, 68, 28]\nGenerated Node #3: [47, 10, 68, 28] from Operation: 30-2=28\nCurrent State: 77:[47, 10, 68, 28], Operations: ['45+23=68', '30-2=28']\nExploring Operation: 47-10=37, Resulting Numbers: [68, 28, 37]\nGenerated Node #4: [68, 28, 37] from Operation: 47-10=37\nCurrent State: 77:[68, 28, 37], Operations: ['45+23=68', '30-2=28', '47-10=37']\nExploring Operation: 68-28=40, Resulting Numbers: [37, 40]\nGenerated Node #5: [37, 40] from Operation: 68-28=40\nCurrent State: 77:[37, 40], Operations: ['45+23=68', '30-2=28', '47-10=37', '68-28=40']\nExploring Operation: 37+40=77, Resulting Numbers: [77]\n77,77 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            6,
            66,
            28,
            92,
            57,
            86
        ],
        "target": 16,
        "solution": [
            "6*66=396",
            "92-57=35",
            "28*35=980",
            "396+980=1376",
            "1376/86=16"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 16:[6, 66, 28, 92, 57, 86], Operations: []\nExploring Operation: 6*66=396, Resulting Numbers: [28, 92, 57, 86, 396]\nGenerated Node #2: [28, 92, 57, 86, 396] from Operation: 6*66=396\nCurrent State: 16:[28, 92, 57, 86, 396], Operations: ['6*66=396']\nExploring Operation: 92-57=35, Resulting Numbers: [28, 86, 396, 35]\nGenerated Node #3: [28, 86, 396, 35] from Operation: 92-57=35\nCurrent State: 16:[28, 86, 396, 35], Operations: ['6*66=396', '92-57=35']\nExploring Operation: 28*35=980, Resulting Numbers: [86, 396, 980]\nGenerated Node #4: [86, 396, 980] from Operation: 28*35=980\nCurrent State: 16:[86, 396, 980], Operations: ['6*66=396', '92-57=35', '28*35=980']\nExploring Operation: 396+980=1376, Resulting Numbers: [86, 1376]\nGenerated Node #5: [86, 1376] from Operation: 396+980=1376\nCurrent State: 16:[86, 1376], Operations: ['6*66=396', '92-57=35', '28*35=980', '396+980=1376']\nExploring Operation: 1376/86=16, Resulting Numbers: [16]\n16,16 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            19,
            15,
            66,
            42,
            41,
            88
        ],
        "target": 75,
        "solution": [
            "19-15=4",
            "66-42=24",
            "88-41=47",
            "4+24=28",
            "47+28=75"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 75:[19, 15, 66, 42, 41, 88], Operations: []\nExploring Operation: 19-15=4, Resulting Numbers: [66, 42, 41, 88, 4]\nGenerated Node #2: [66, 42, 41, 88, 4] from Operation: 19-15=4\nCurrent State: 75:[66, 42, 41, 88, 4], Operations: ['19-15=4']\nExploring Operation: 66-42=24, Resulting Numbers: [41, 88, 4, 24]\nGenerated Node #3: [41, 88, 4, 24] from Operation: 66-42=24\nCurrent State: 75:[41, 88, 4, 24], Operations: ['19-15=4', '66-42=24']\nExploring Operation: 88-41=47, Resulting Numbers: [4, 24, 47]\nGenerated Node #4: [4, 24, 47] from Operation: 88-41=47\nCurrent State: 75:[4, 24, 47], Operations: ['19-15=4', '66-42=24', '88-41=47']\nExploring Operation: 4+24=28, Resulting Numbers: [47, 28]\nGenerated Node #5: [47, 28] from Operation: 4+24=28\nCurrent State: 75:[47, 28], Operations: ['19-15=4', '66-42=24', '88-41=47', '4+24=28']\nExploring Operation: 47+28=75, Resulting Numbers: [75]\n75,75 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            38,
            1,
            90,
            58,
            80,
            60
        ],
        "target": 64,
        "solution": [
            "38*1=38",
            "58+38=96",
            "90*96=8640",
            "8640/60=144",
            "144-80=64"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 64:[38, 1, 90, 58, 80, 60], Operations: []\nExploring Operation: 38*1=38, Resulting Numbers: [90, 58, 80, 60, 38]\nGenerated Node #2: [90, 58, 80, 60, 38] from Operation: 38*1=38\nCurrent State: 64:[90, 58, 80, 60, 38], Operations: ['38*1=38']\nExploring Operation: 58+38=96, Resulting Numbers: [90, 80, 60, 96]\nGenerated Node #3: [90, 80, 60, 96] from Operation: 58+38=96\nCurrent State: 64:[90, 80, 60, 96], Operations: ['38*1=38', '58+38=96']\nExploring Operation: 90*96=8640, Resulting Numbers: [80, 60, 8640]\nGenerated Node #4: [80, 60, 8640] from Operation: 90*96=8640\nCurrent State: 64:[80, 60, 8640], Operations: ['38*1=38', '58+38=96', '90*96=8640']\nExploring Operation: 8640/60=144, Resulting Numbers: [80, 144]\nGenerated Node #5: [80, 144] from Operation: 8640/60=144\nCurrent State: 64:[80, 144], Operations: ['38*1=38', '58+38=96', '90*96=8640', '8640/60=144']\nExploring Operation: 144-80=64, Resulting Numbers: [64]\n64,64 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            58,
            69,
            83,
            18,
            54,
            44
        ],
        "target": 79,
        "solution": [
            "58*18=1044",
            "1044-69=975",
            "83-44=39",
            "975/39=25",
            "54+25=79"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 79:[58, 69, 83, 18, 54, 44], Operations: []\nExploring Operation: 58*18=1044, Resulting Numbers: [69, 83, 54, 44, 1044]\nGenerated Node #2: [69, 83, 54, 44, 1044] from Operation: 58*18=1044\nCurrent State: 79:[69, 83, 54, 44, 1044], Operations: ['58*18=1044']\nExploring Operation: 1044-69=975, Resulting Numbers: [83, 54, 44, 975]\nGenerated Node #3: [83, 54, 44, 975] from Operation: 1044-69=975\nCurrent State: 79:[83, 54, 44, 975], Operations: ['58*18=1044', '1044-69=975']\nExploring Operation: 83-44=39, Resulting Numbers: [54, 975, 39]\nGenerated Node #4: [54, 975, 39] from Operation: 83-44=39\nCurrent State: 79:[54, 975, 39], Operations: ['58*18=1044', '1044-69=975', '83-44=39']\nExploring Operation: 975/39=25, Resulting Numbers: [54, 25]\nGenerated Node #5: [54, 25] from Operation: 975/39=25\nCurrent State: 79:[54, 25], Operations: ['58*18=1044', '1044-69=975', '83-44=39', '975/39=25']\nExploring Operation: 54+25=79, Resulting Numbers: [79]\n79,79 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            40,
            36,
            29,
            2,
            64,
            46
        ],
        "target": 65,
        "solution": [
            "40+36=76",
            "29+2=31",
            "64+46=110",
            "76-31=45",
            "110-45=65"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 65:[40, 36, 29, 2, 64, 46], Operations: []\nExploring Operation: 40+36=76, Resulting Numbers: [29, 2, 64, 46, 76]\nGenerated Node #2: [29, 2, 64, 46, 76] from Operation: 40+36=76\nCurrent State: 65:[29, 2, 64, 46, 76], Operations: ['40+36=76']\nExploring Operation: 29+2=31, Resulting Numbers: [64, 46, 76, 31]\nGenerated Node #3: [64, 46, 76, 31] from Operation: 29+2=31\nCurrent State: 65:[64, 46, 76, 31], Operations: ['40+36=76', '29+2=31']\nExploring Operation: 64+46=110, Resulting Numbers: [76, 31, 110]\nGenerated Node #4: [76, 31, 110] from Operation: 64+46=110\nCurrent State: 65:[76, 31, 110], Operations: ['40+36=76', '29+2=31', '64+46=110']\nExploring Operation: 76-31=45, Resulting Numbers: [110, 45]\nGenerated Node #5: [110, 45] from Operation: 76-31=45\nCurrent State: 65:[110, 45], Operations: ['40+36=76', '29+2=31', '64+46=110', '76-31=45']\nExploring Operation: 110-45=65, Resulting Numbers: [65]\n65,65 equal: Goal Reached\n",
        "start_size": 6
    },
    {
        "nums": [
            21,
            93,
            58,
            2,
            21,
            1
        ],
        "target": 99,
        "solution": [
            "21+93=114",
            "58-1=57",
            "2*21=42",
            "114-57=57",
            "42+57=99"
        ],
        "complexity": 0.5,
        "optimal_path": "Current State: 99:[21, 93, 58, 2, 21, 1], Operations: []\nExploring Operation: 21+93=114, Resulting Numbers: [58, 2, 1, 114]\nGenerated Node #2: [58, 2, 1, 114] from Operation: 21+93=114\nCurrent State: 99:[58, 2, 1, 114], Operations: ['21+93=114']\nExploring Operation: 58-1=57, Resulting Numbers: [2, 114, 57]\nGenerated Node #3: [2, 114, 57] from Operation: 58-1=57\nCurrent State: 99:[2, 114, 57], Operations: ['21+93=114', '58-1=57']\nExploring Operation: 2*21=42, Resulting Numbers: [114, 57, 42]\nGenerated Node #4: [114, 57, 42] from Operation: 2*21=42\nCurrent State: 99:[114, 57, 42], Operations: ['21+93=114', '58-1=57', '2*21=42']\nExploring Operation: 114-57=57, Resulting Numbers: [42, 57]\nGenerated Node #5: [42, 57] from Operation: 114-57=57\nCurrent State: 99:[42, 57], Operations: ['21+93=114', '58-1=57', '2*21=42', '114-57=57']\nExploring Operation: 42+57=99, Resulting Numbers: [99]\n99,99 equal: Goal Reached\n",
        "start_size": 6
    }
]